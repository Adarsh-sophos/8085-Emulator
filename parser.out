Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    PCHL
    SPHL
    XTHL
    PUSH
    POP

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement statements
Rule 2     statements -> statement
Rule 3     statement -> MOV register COMMA register
Rule 4     statement -> MOV register COMMA memory
Rule 5     statement -> MOV memory COMMA register
Rule 6     statement -> LABEL COLON MOV register COMMA register
Rule 7     statement -> LABEL COLON MOV register COMMA memory
Rule 8     statement -> LABEL COLON MOV memory COMMA register
Rule 9     statement -> MVI register COMMA byte_8
Rule 10    statement -> MVI memory COMMA byte_8
Rule 11    statement -> LABEL COLON MVI register COMMA byte_8
Rule 12    statement -> LABEL COLON MVI memory COMMA byte_8
Rule 13    statement -> LXI register_pair_3 COMMA byte_16
Rule 14    statement -> LABEL COLON LXI register_pair_3 COMMA byte_16
Rule 15    statement -> LDAX register_pair_2
Rule 16    statement -> LABEL COLON LDAX register_pair_2
Rule 17    statement -> STAX register_pair_2
Rule 18    statement -> LABEL COLON STAX register_pair_2
Rule 19    statement -> LDA byte_16
Rule 20    statement -> LABEL COLON LDA byte_16
Rule 21    statement -> STA byte_16
Rule 22    statement -> LABEL COLON STA byte_16
Rule 23    statement -> LHLD byte_16
Rule 24    statement -> LABEL COLON LHLD byte_16
Rule 25    statement -> SHLD byte_16
Rule 26    statement -> LABEL COLON SHLD byte_16
Rule 27    statement -> XCHG
Rule 28    statement -> LABEL COLON XCHG
Rule 29    statement -> ADD register
Rule 30    statement -> ADD memory
Rule 31    statement -> LABEL COLON ADD register
Rule 32    statement -> LABEL COLON ADD memory
Rule 33    statement -> ADI byte_8
Rule 34    statement -> LABEL COLON ADI byte_8
Rule 35    statement -> ADC register
Rule 36    statement -> ADC memory
Rule 37    statement -> LABEL COLON ADC register
Rule 38    statement -> LABEL COLON ADC memory
Rule 39    statement -> ACI byte_8
Rule 40    statement -> LABEL COLON ACI byte_8
Rule 41    statement -> SUB register
Rule 42    statement -> SUB memory
Rule 43    statement -> LABEL COLON SUB register
Rule 44    statement -> LABEL COLON SUB memory
Rule 45    statement -> SUI byte_8
Rule 46    statement -> LABEL COLON SUI byte_8
Rule 47    statement -> SBB register
Rule 48    statement -> SBB memory
Rule 49    statement -> LABEL COLON SBB register
Rule 50    statement -> LABEL COLON SBB memory
Rule 51    statement -> SBI byte_8
Rule 52    statement -> LABEL COLON SBI byte_8
Rule 53    statement -> INR register
Rule 54    statement -> INR memory
Rule 55    statement -> LABEL COLON INR register
Rule 56    statement -> LABEL COLON INR memory
Rule 57    statement -> DCR register
Rule 58    statement -> DCR memory
Rule 59    statement -> LABEL COLON DCR register
Rule 60    statement -> LABEL COLON DCR memory
Rule 61    statement -> INX register_pair_3
Rule 62    statement -> LABEL COLON INX register_pair_3
Rule 63    statement -> DCX register_pair_3
Rule 64    statement -> LABEL COLON DCX register_pair_3
Rule 65    statement -> DAD register_pair_3
Rule 66    statement -> LABEL COLON DAD register_pair_3
Rule 67    statement -> ANA register
Rule 68    statement -> ANA memory
Rule 69    statement -> LABEL COLON ANA register
Rule 70    statement -> LABEL COLON ANA memory
Rule 71    statement -> ORA register
Rule 72    statement -> ORA memory
Rule 73    statement -> LABEL COLON ORA register
Rule 74    statement -> LABEL COLON ORA memory
Rule 75    statement -> XRA register
Rule 76    statement -> XRA memory
Rule 77    statement -> LABEL COLON XRA register
Rule 78    statement -> LABEL COLON XRA memory
Rule 79    statement -> ANI byte_8
Rule 80    statement -> LABEL COLON ANI byte_8
Rule 81    statement -> ORI byte_8
Rule 82    statement -> LABEL COLON ORI byte_8
Rule 83    statement -> XRI byte_8
Rule 84    statement -> LABEL COLON XRI byte_8
Rule 85    statement -> CMA
Rule 86    statement -> LABEL COLON CMA
Rule 87    statement -> RLC
Rule 88    statement -> LABEL COLON RLC
Rule 89    statement -> RAL
Rule 90    statement -> LABEL COLON RAL
Rule 91    statement -> RRC
Rule 92    statement -> LABEL COLON RRC
Rule 93    statement -> RAR
Rule 94    statement -> LABEL COLON RAR
Rule 95    statement -> CMP register
Rule 96    statement -> CMP memory
Rule 97    statement -> LABEL COLON CMP register
Rule 98    statement -> LABEL COLON CMP memory
Rule 99    statement -> CPI byte_8
Rule 100   statement -> LABEL COLON CPI byte_8
Rule 101   statement -> CMC
Rule 102   statement -> LABEL COLON CMC
Rule 103   statement -> STC
Rule 104   statement -> LABEL COLON STC
Rule 105   statement -> DAA
Rule 106   statement -> LABEL COLON DAA
Rule 107   statement -> JMP byte_16
Rule 108   statement -> JMP LABEL
Rule 109   statement -> LABEL COLON JMP byte_16
Rule 110   statement -> LABEL COLON JMP LABEL
Rule 111   statement -> JC byte_16
Rule 112   statement -> JC LABEL
Rule 113   statement -> LABEL COLON JC byte_16
Rule 114   statement -> LABEL COLON JC LABEL
Rule 115   statement -> JNC byte_16
Rule 116   statement -> JNC LABEL
Rule 117   statement -> LABEL COLON JNC byte_16
Rule 118   statement -> LABEL COLON JNC LABEL
Rule 119   statement -> JZ byte_16
Rule 120   statement -> JZ LABEL
Rule 121   statement -> LABEL COLON JZ byte_16
Rule 122   statement -> LABEL COLON JZ LABEL
Rule 123   statement -> JNZ byte_16
Rule 124   statement -> JNZ LABEL
Rule 125   statement -> LABEL COLON JNZ byte_16
Rule 126   statement -> LABEL COLON JNZ LABEL
Rule 127   statement -> JP byte_16
Rule 128   statement -> JP LABEL
Rule 129   statement -> LABEL COLON JP byte_16
Rule 130   statement -> LABEL COLON JP LABEL
Rule 131   statement -> JM byte_16
Rule 132   statement -> JM LABEL
Rule 133   statement -> LABEL COLON JM byte_16
Rule 134   statement -> LABEL COLON JM LABEL
Rule 135   statement -> JPE byte_16
Rule 136   statement -> JPE LABEL
Rule 137   statement -> LABEL COLON JPE byte_16
Rule 138   statement -> LABEL COLON JPE LABEL
Rule 139   statement -> JPO byte_16
Rule 140   statement -> JPO LABEL
Rule 141   statement -> LABEL COLON JPO byte_16
Rule 142   statement -> LABEL COLON JPO LABEL
Rule 143   statement -> CALL byte_16
Rule 144   statement -> CALL LABEL
Rule 145   statement -> LABEL COLON CALL byte_16
Rule 146   statement -> LABEL COLON CALL LABEL
Rule 147   statement -> RET
Rule 148   statement -> LABEL COLON RET
Rule 149   statement -> MACHINE
Rule 150   statement -> LABEL COLON MACHINE
Rule 151   register -> A
Rule 152   register -> B
Rule 153   register -> C
Rule 154   register -> D
Rule 155   register -> E
Rule 156   register -> H
Rule 157   register -> L
Rule 158   memory -> M
Rule 159   register_pair_2 -> B
Rule 160   register_pair_2 -> D
Rule 161   register_pair_3 -> B
Rule 162   register_pair_3 -> D
Rule 163   register_pair_3 -> H
Rule 164   byte_8 -> DIGIT DIGIT
Rule 165   byte_16 -> DIGIT DIGIT DIGIT DIGIT

Terminals, with rules where they appear

A                    : 151
ACI                  : 39 40
ADC                  : 35 36 37 38
ADD                  : 29 30 31 32
ADI                  : 33 34
ANA                  : 67 68 69 70
ANI                  : 79 80
B                    : 152 159 161
C                    : 153
CALL                 : 143 144 145 146
CMA                  : 85 86
CMC                  : 101 102
CMP                  : 95 96 97 98
COLON                : 6 7 8 11 12 14 16 18 20 22 24 26 28 31 32 34 37 38 40 43 44 46 49 50 52 55 56 59 60 62 64 66 69 70 73 74 77 78 80 82 84 86 88 90 92 94 97 98 100 102 104 106 109 110 113 114 117 118 121 122 125 126 129 130 133 134 137 138 141 142 145 146 148 150
COMMA                : 3 4 5 6 7 8 9 10 11 12 13 14
CPI                  : 99 100
D                    : 154 160 162
DAA                  : 105 106
DAD                  : 65 66
DCR                  : 57 58 59 60
DCX                  : 63 64
DIGIT                : 164 164 165 165 165 165
E                    : 155
H                    : 156 163
INR                  : 53 54 55 56
INX                  : 61 62
JC                   : 111 112 113 114
JM                   : 131 132 133 134
JMP                  : 107 108 109 110
JNC                  : 115 116 117 118
JNZ                  : 123 124 125 126
JP                   : 127 128 129 130
JPE                  : 135 136 137 138
JPO                  : 139 140 141 142
JZ                   : 119 120 121 122
L                    : 157
LABEL                : 6 7 8 11 12 14 16 18 20 22 24 26 28 31 32 34 37 38 40 43 44 46 49 50 52 55 56 59 60 62 64 66 69 70 73 74 77 78 80 82 84 86 88 90 92 94 97 98 100 102 104 106 108 109 110 110 112 113 114 114 116 117 118 118 120 121 122 122 124 125 126 126 128 129 130 130 132 133 134 134 136 137 138 138 140 141 142 142 144 145 146 146 148 150
LDA                  : 19 20
LDAX                 : 15 16
LHLD                 : 23 24
LXI                  : 13 14
M                    : 158
MACHINE              : 149 150
MOV                  : 3 4 5 6 7 8
MVI                  : 9 10 11 12
ORA                  : 71 72 73 74
ORI                  : 81 82
PCHL                 : 
POP                  : 
PUSH                 : 
RAL                  : 89 90
RAR                  : 93 94
RET                  : 147 148
RLC                  : 87 88
RRC                  : 91 92
SBB                  : 47 48 49 50
SBI                  : 51 52
SHLD                 : 25 26
SPHL                 : 
STA                  : 21 22
STAX                 : 17 18
STC                  : 103 104
SUB                  : 41 42 43 44
SUI                  : 45 46
XCHG                 : 27 28
XRA                  : 75 76 77 78
XRI                  : 83 84
XTHL                 : 
error                : 

Nonterminals, with rules where they appear

byte_16              : 13 14 19 20 21 22 23 24 25 26 107 109 111 113 115 117 119 121 123 125 127 129 131 133 135 137 139 141 143 145
byte_8               : 9 10 11 12 33 34 39 40 45 46 51 52 79 80 81 82 83 84 99 100
memory               : 4 5 7 8 10 12 30 32 36 38 42 44 48 50 54 56 58 60 68 70 72 74 76 78 96 98
register             : 3 3 4 5 6 6 7 8 9 11 29 31 35 37 41 43 47 49 53 55 57 59 67 69 71 73 75 77 95 97
register_pair_2      : 15 16 17 18
register_pair_3      : 13 14 61 62 63 64 65 66
statement            : 1 2
statements           : 1 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statement -> . MOV register COMMA register
    (4) statement -> . MOV register COMMA memory
    (5) statement -> . MOV memory COMMA register
    (6) statement -> . LABEL COLON MOV register COMMA register
    (7) statement -> . LABEL COLON MOV register COMMA memory
    (8) statement -> . LABEL COLON MOV memory COMMA register
    (9) statement -> . MVI register COMMA byte_8
    (10) statement -> . MVI memory COMMA byte_8
    (11) statement -> . LABEL COLON MVI register COMMA byte_8
    (12) statement -> . LABEL COLON MVI memory COMMA byte_8
    (13) statement -> . LXI register_pair_3 COMMA byte_16
    (14) statement -> . LABEL COLON LXI register_pair_3 COMMA byte_16
    (15) statement -> . LDAX register_pair_2
    (16) statement -> . LABEL COLON LDAX register_pair_2
    (17) statement -> . STAX register_pair_2
    (18) statement -> . LABEL COLON STAX register_pair_2
    (19) statement -> . LDA byte_16
    (20) statement -> . LABEL COLON LDA byte_16
    (21) statement -> . STA byte_16
    (22) statement -> . LABEL COLON STA byte_16
    (23) statement -> . LHLD byte_16
    (24) statement -> . LABEL COLON LHLD byte_16
    (25) statement -> . SHLD byte_16
    (26) statement -> . LABEL COLON SHLD byte_16
    (27) statement -> . XCHG
    (28) statement -> . LABEL COLON XCHG
    (29) statement -> . ADD register
    (30) statement -> . ADD memory
    (31) statement -> . LABEL COLON ADD register
    (32) statement -> . LABEL COLON ADD memory
    (33) statement -> . ADI byte_8
    (34) statement -> . LABEL COLON ADI byte_8
    (35) statement -> . ADC register
    (36) statement -> . ADC memory
    (37) statement -> . LABEL COLON ADC register
    (38) statement -> . LABEL COLON ADC memory
    (39) statement -> . ACI byte_8
    (40) statement -> . LABEL COLON ACI byte_8
    (41) statement -> . SUB register
    (42) statement -> . SUB memory
    (43) statement -> . LABEL COLON SUB register
    (44) statement -> . LABEL COLON SUB memory
    (45) statement -> . SUI byte_8
    (46) statement -> . LABEL COLON SUI byte_8
    (47) statement -> . SBB register
    (48) statement -> . SBB memory
    (49) statement -> . LABEL COLON SBB register
    (50) statement -> . LABEL COLON SBB memory
    (51) statement -> . SBI byte_8
    (52) statement -> . LABEL COLON SBI byte_8
    (53) statement -> . INR register
    (54) statement -> . INR memory
    (55) statement -> . LABEL COLON INR register
    (56) statement -> . LABEL COLON INR memory
    (57) statement -> . DCR register
    (58) statement -> . DCR memory
    (59) statement -> . LABEL COLON DCR register
    (60) statement -> . LABEL COLON DCR memory
    (61) statement -> . INX register_pair_3
    (62) statement -> . LABEL COLON INX register_pair_3
    (63) statement -> . DCX register_pair_3
    (64) statement -> . LABEL COLON DCX register_pair_3
    (65) statement -> . DAD register_pair_3
    (66) statement -> . LABEL COLON DAD register_pair_3
    (67) statement -> . ANA register
    (68) statement -> . ANA memory
    (69) statement -> . LABEL COLON ANA register
    (70) statement -> . LABEL COLON ANA memory
    (71) statement -> . ORA register
    (72) statement -> . ORA memory
    (73) statement -> . LABEL COLON ORA register
    (74) statement -> . LABEL COLON ORA memory
    (75) statement -> . XRA register
    (76) statement -> . XRA memory
    (77) statement -> . LABEL COLON XRA register
    (78) statement -> . LABEL COLON XRA memory
    (79) statement -> . ANI byte_8
    (80) statement -> . LABEL COLON ANI byte_8
    (81) statement -> . ORI byte_8
    (82) statement -> . LABEL COLON ORI byte_8
    (83) statement -> . XRI byte_8
    (84) statement -> . LABEL COLON XRI byte_8
    (85) statement -> . CMA
    (86) statement -> . LABEL COLON CMA
    (87) statement -> . RLC
    (88) statement -> . LABEL COLON RLC
    (89) statement -> . RAL
    (90) statement -> . LABEL COLON RAL
    (91) statement -> . RRC
    (92) statement -> . LABEL COLON RRC
    (93) statement -> . RAR
    (94) statement -> . LABEL COLON RAR
    (95) statement -> . CMP register
    (96) statement -> . CMP memory
    (97) statement -> . LABEL COLON CMP register
    (98) statement -> . LABEL COLON CMP memory
    (99) statement -> . CPI byte_8
    (100) statement -> . LABEL COLON CPI byte_8
    (101) statement -> . CMC
    (102) statement -> . LABEL COLON CMC
    (103) statement -> . STC
    (104) statement -> . LABEL COLON STC
    (105) statement -> . DAA
    (106) statement -> . LABEL COLON DAA
    (107) statement -> . JMP byte_16
    (108) statement -> . JMP LABEL
    (109) statement -> . LABEL COLON JMP byte_16
    (110) statement -> . LABEL COLON JMP LABEL
    (111) statement -> . JC byte_16
    (112) statement -> . JC LABEL
    (113) statement -> . LABEL COLON JC byte_16
    (114) statement -> . LABEL COLON JC LABEL
    (115) statement -> . JNC byte_16
    (116) statement -> . JNC LABEL
    (117) statement -> . LABEL COLON JNC byte_16
    (118) statement -> . LABEL COLON JNC LABEL
    (119) statement -> . JZ byte_16
    (120) statement -> . JZ LABEL
    (121) statement -> . LABEL COLON JZ byte_16
    (122) statement -> . LABEL COLON JZ LABEL
    (123) statement -> . JNZ byte_16
    (124) statement -> . JNZ LABEL
    (125) statement -> . LABEL COLON JNZ byte_16
    (126) statement -> . LABEL COLON JNZ LABEL
    (127) statement -> . JP byte_16
    (128) statement -> . JP LABEL
    (129) statement -> . LABEL COLON JP byte_16
    (130) statement -> . LABEL COLON JP LABEL
    (131) statement -> . JM byte_16
    (132) statement -> . JM LABEL
    (133) statement -> . LABEL COLON JM byte_16
    (134) statement -> . LABEL COLON JM LABEL
    (135) statement -> . JPE byte_16
    (136) statement -> . JPE LABEL
    (137) statement -> . LABEL COLON JPE byte_16
    (138) statement -> . LABEL COLON JPE LABEL
    (139) statement -> . JPO byte_16
    (140) statement -> . JPO LABEL
    (141) statement -> . LABEL COLON JPO byte_16
    (142) statement -> . LABEL COLON JPO LABEL
    (143) statement -> . CALL byte_16
    (144) statement -> . CALL LABEL
    (145) statement -> . LABEL COLON CALL byte_16
    (146) statement -> . LABEL COLON CALL LABEL
    (147) statement -> . RET
    (148) statement -> . LABEL COLON RET
    (149) statement -> . MACHINE
    (150) statement -> . LABEL COLON MACHINE

    MOV             shift and go to state 3
    LABEL           shift and go to state 4
    MVI             shift and go to state 5
    LXI             shift and go to state 6
    LDAX            shift and go to state 7
    STAX            shift and go to state 8
    LDA             shift and go to state 9
    STA             shift and go to state 10
    LHLD            shift and go to state 11
    SHLD            shift and go to state 12
    XCHG            shift and go to state 13
    ADD             shift and go to state 14
    ADI             shift and go to state 15
    ADC             shift and go to state 16
    ACI             shift and go to state 17
    SUB             shift and go to state 18
    SUI             shift and go to state 19
    SBB             shift and go to state 20
    SBI             shift and go to state 21
    INR             shift and go to state 22
    DCR             shift and go to state 23
    INX             shift and go to state 24
    DCX             shift and go to state 25
    DAD             shift and go to state 26
    ANA             shift and go to state 27
    ORA             shift and go to state 28
    XRA             shift and go to state 29
    ANI             shift and go to state 30
    ORI             shift and go to state 31
    XRI             shift and go to state 32
    CMA             shift and go to state 33
    RLC             shift and go to state 34
    RAL             shift and go to state 35
    RRC             shift and go to state 36
    RAR             shift and go to state 37
    CMP             shift and go to state 38
    CPI             shift and go to state 39
    CMC             shift and go to state 40
    STC             shift and go to state 41
    DAA             shift and go to state 42
    JMP             shift and go to state 43
    JC              shift and go to state 44
    JNC             shift and go to state 45
    JZ              shift and go to state 46
    JNZ             shift and go to state 47
    JP              shift and go to state 48
    JM              shift and go to state 49
    JPE             shift and go to state 50
    JPO             shift and go to state 51
    CALL            shift and go to state 52
    RET             shift and go to state 53
    MACHINE         shift and go to state 54

    statements                     shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> statements .



state 2

    (1) statements -> statement . statements
    (2) statements -> statement .
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statement -> . MOV register COMMA register
    (4) statement -> . MOV register COMMA memory
    (5) statement -> . MOV memory COMMA register
    (6) statement -> . LABEL COLON MOV register COMMA register
    (7) statement -> . LABEL COLON MOV register COMMA memory
    (8) statement -> . LABEL COLON MOV memory COMMA register
    (9) statement -> . MVI register COMMA byte_8
    (10) statement -> . MVI memory COMMA byte_8
    (11) statement -> . LABEL COLON MVI register COMMA byte_8
    (12) statement -> . LABEL COLON MVI memory COMMA byte_8
    (13) statement -> . LXI register_pair_3 COMMA byte_16
    (14) statement -> . LABEL COLON LXI register_pair_3 COMMA byte_16
    (15) statement -> . LDAX register_pair_2
    (16) statement -> . LABEL COLON LDAX register_pair_2
    (17) statement -> . STAX register_pair_2
    (18) statement -> . LABEL COLON STAX register_pair_2
    (19) statement -> . LDA byte_16
    (20) statement -> . LABEL COLON LDA byte_16
    (21) statement -> . STA byte_16
    (22) statement -> . LABEL COLON STA byte_16
    (23) statement -> . LHLD byte_16
    (24) statement -> . LABEL COLON LHLD byte_16
    (25) statement -> . SHLD byte_16
    (26) statement -> . LABEL COLON SHLD byte_16
    (27) statement -> . XCHG
    (28) statement -> . LABEL COLON XCHG
    (29) statement -> . ADD register
    (30) statement -> . ADD memory
    (31) statement -> . LABEL COLON ADD register
    (32) statement -> . LABEL COLON ADD memory
    (33) statement -> . ADI byte_8
    (34) statement -> . LABEL COLON ADI byte_8
    (35) statement -> . ADC register
    (36) statement -> . ADC memory
    (37) statement -> . LABEL COLON ADC register
    (38) statement -> . LABEL COLON ADC memory
    (39) statement -> . ACI byte_8
    (40) statement -> . LABEL COLON ACI byte_8
    (41) statement -> . SUB register
    (42) statement -> . SUB memory
    (43) statement -> . LABEL COLON SUB register
    (44) statement -> . LABEL COLON SUB memory
    (45) statement -> . SUI byte_8
    (46) statement -> . LABEL COLON SUI byte_8
    (47) statement -> . SBB register
    (48) statement -> . SBB memory
    (49) statement -> . LABEL COLON SBB register
    (50) statement -> . LABEL COLON SBB memory
    (51) statement -> . SBI byte_8
    (52) statement -> . LABEL COLON SBI byte_8
    (53) statement -> . INR register
    (54) statement -> . INR memory
    (55) statement -> . LABEL COLON INR register
    (56) statement -> . LABEL COLON INR memory
    (57) statement -> . DCR register
    (58) statement -> . DCR memory
    (59) statement -> . LABEL COLON DCR register
    (60) statement -> . LABEL COLON DCR memory
    (61) statement -> . INX register_pair_3
    (62) statement -> . LABEL COLON INX register_pair_3
    (63) statement -> . DCX register_pair_3
    (64) statement -> . LABEL COLON DCX register_pair_3
    (65) statement -> . DAD register_pair_3
    (66) statement -> . LABEL COLON DAD register_pair_3
    (67) statement -> . ANA register
    (68) statement -> . ANA memory
    (69) statement -> . LABEL COLON ANA register
    (70) statement -> . LABEL COLON ANA memory
    (71) statement -> . ORA register
    (72) statement -> . ORA memory
    (73) statement -> . LABEL COLON ORA register
    (74) statement -> . LABEL COLON ORA memory
    (75) statement -> . XRA register
    (76) statement -> . XRA memory
    (77) statement -> . LABEL COLON XRA register
    (78) statement -> . LABEL COLON XRA memory
    (79) statement -> . ANI byte_8
    (80) statement -> . LABEL COLON ANI byte_8
    (81) statement -> . ORI byte_8
    (82) statement -> . LABEL COLON ORI byte_8
    (83) statement -> . XRI byte_8
    (84) statement -> . LABEL COLON XRI byte_8
    (85) statement -> . CMA
    (86) statement -> . LABEL COLON CMA
    (87) statement -> . RLC
    (88) statement -> . LABEL COLON RLC
    (89) statement -> . RAL
    (90) statement -> . LABEL COLON RAL
    (91) statement -> . RRC
    (92) statement -> . LABEL COLON RRC
    (93) statement -> . RAR
    (94) statement -> . LABEL COLON RAR
    (95) statement -> . CMP register
    (96) statement -> . CMP memory
    (97) statement -> . LABEL COLON CMP register
    (98) statement -> . LABEL COLON CMP memory
    (99) statement -> . CPI byte_8
    (100) statement -> . LABEL COLON CPI byte_8
    (101) statement -> . CMC
    (102) statement -> . LABEL COLON CMC
    (103) statement -> . STC
    (104) statement -> . LABEL COLON STC
    (105) statement -> . DAA
    (106) statement -> . LABEL COLON DAA
    (107) statement -> . JMP byte_16
    (108) statement -> . JMP LABEL
    (109) statement -> . LABEL COLON JMP byte_16
    (110) statement -> . LABEL COLON JMP LABEL
    (111) statement -> . JC byte_16
    (112) statement -> . JC LABEL
    (113) statement -> . LABEL COLON JC byte_16
    (114) statement -> . LABEL COLON JC LABEL
    (115) statement -> . JNC byte_16
    (116) statement -> . JNC LABEL
    (117) statement -> . LABEL COLON JNC byte_16
    (118) statement -> . LABEL COLON JNC LABEL
    (119) statement -> . JZ byte_16
    (120) statement -> . JZ LABEL
    (121) statement -> . LABEL COLON JZ byte_16
    (122) statement -> . LABEL COLON JZ LABEL
    (123) statement -> . JNZ byte_16
    (124) statement -> . JNZ LABEL
    (125) statement -> . LABEL COLON JNZ byte_16
    (126) statement -> . LABEL COLON JNZ LABEL
    (127) statement -> . JP byte_16
    (128) statement -> . JP LABEL
    (129) statement -> . LABEL COLON JP byte_16
    (130) statement -> . LABEL COLON JP LABEL
    (131) statement -> . JM byte_16
    (132) statement -> . JM LABEL
    (133) statement -> . LABEL COLON JM byte_16
    (134) statement -> . LABEL COLON JM LABEL
    (135) statement -> . JPE byte_16
    (136) statement -> . JPE LABEL
    (137) statement -> . LABEL COLON JPE byte_16
    (138) statement -> . LABEL COLON JPE LABEL
    (139) statement -> . JPO byte_16
    (140) statement -> . JPO LABEL
    (141) statement -> . LABEL COLON JPO byte_16
    (142) statement -> . LABEL COLON JPO LABEL
    (143) statement -> . CALL byte_16
    (144) statement -> . CALL LABEL
    (145) statement -> . LABEL COLON CALL byte_16
    (146) statement -> . LABEL COLON CALL LABEL
    (147) statement -> . RET
    (148) statement -> . LABEL COLON RET
    (149) statement -> . MACHINE
    (150) statement -> . LABEL COLON MACHINE

    $end            reduce using rule 2 (statements -> statement .)
    MOV             shift and go to state 3
    LABEL           shift and go to state 4
    MVI             shift and go to state 5
    LXI             shift and go to state 6
    LDAX            shift and go to state 7
    STAX            shift and go to state 8
    LDA             shift and go to state 9
    STA             shift and go to state 10
    LHLD            shift and go to state 11
    SHLD            shift and go to state 12
    XCHG            shift and go to state 13
    ADD             shift and go to state 14
    ADI             shift and go to state 15
    ADC             shift and go to state 16
    ACI             shift and go to state 17
    SUB             shift and go to state 18
    SUI             shift and go to state 19
    SBB             shift and go to state 20
    SBI             shift and go to state 21
    INR             shift and go to state 22
    DCR             shift and go to state 23
    INX             shift and go to state 24
    DCX             shift and go to state 25
    DAD             shift and go to state 26
    ANA             shift and go to state 27
    ORA             shift and go to state 28
    XRA             shift and go to state 29
    ANI             shift and go to state 30
    ORI             shift and go to state 31
    XRI             shift and go to state 32
    CMA             shift and go to state 33
    RLC             shift and go to state 34
    RAL             shift and go to state 35
    RRC             shift and go to state 36
    RAR             shift and go to state 37
    CMP             shift and go to state 38
    CPI             shift and go to state 39
    CMC             shift and go to state 40
    STC             shift and go to state 41
    DAA             shift and go to state 42
    JMP             shift and go to state 43
    JC              shift and go to state 44
    JNC             shift and go to state 45
    JZ              shift and go to state 46
    JNZ             shift and go to state 47
    JP              shift and go to state 48
    JM              shift and go to state 49
    JPE             shift and go to state 50
    JPO             shift and go to state 51
    CALL            shift and go to state 52
    RET             shift and go to state 53
    MACHINE         shift and go to state 54

    statement                      shift and go to state 2
    statements                     shift and go to state 55

state 3

    (3) statement -> MOV . register COMMA register
    (4) statement -> MOV . register COMMA memory
    (5) statement -> MOV . memory COMMA register
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 56
    memory                         shift and go to state 57

state 4

    (6) statement -> LABEL . COLON MOV register COMMA register
    (7) statement -> LABEL . COLON MOV register COMMA memory
    (8) statement -> LABEL . COLON MOV memory COMMA register
    (11) statement -> LABEL . COLON MVI register COMMA byte_8
    (12) statement -> LABEL . COLON MVI memory COMMA byte_8
    (14) statement -> LABEL . COLON LXI register_pair_3 COMMA byte_16
    (16) statement -> LABEL . COLON LDAX register_pair_2
    (18) statement -> LABEL . COLON STAX register_pair_2
    (20) statement -> LABEL . COLON LDA byte_16
    (22) statement -> LABEL . COLON STA byte_16
    (24) statement -> LABEL . COLON LHLD byte_16
    (26) statement -> LABEL . COLON SHLD byte_16
    (28) statement -> LABEL . COLON XCHG
    (31) statement -> LABEL . COLON ADD register
    (32) statement -> LABEL . COLON ADD memory
    (34) statement -> LABEL . COLON ADI byte_8
    (37) statement -> LABEL . COLON ADC register
    (38) statement -> LABEL . COLON ADC memory
    (40) statement -> LABEL . COLON ACI byte_8
    (43) statement -> LABEL . COLON SUB register
    (44) statement -> LABEL . COLON SUB memory
    (46) statement -> LABEL . COLON SUI byte_8
    (49) statement -> LABEL . COLON SBB register
    (50) statement -> LABEL . COLON SBB memory
    (52) statement -> LABEL . COLON SBI byte_8
    (55) statement -> LABEL . COLON INR register
    (56) statement -> LABEL . COLON INR memory
    (59) statement -> LABEL . COLON DCR register
    (60) statement -> LABEL . COLON DCR memory
    (62) statement -> LABEL . COLON INX register_pair_3
    (64) statement -> LABEL . COLON DCX register_pair_3
    (66) statement -> LABEL . COLON DAD register_pair_3
    (69) statement -> LABEL . COLON ANA register
    (70) statement -> LABEL . COLON ANA memory
    (73) statement -> LABEL . COLON ORA register
    (74) statement -> LABEL . COLON ORA memory
    (77) statement -> LABEL . COLON XRA register
    (78) statement -> LABEL . COLON XRA memory
    (80) statement -> LABEL . COLON ANI byte_8
    (82) statement -> LABEL . COLON ORI byte_8
    (84) statement -> LABEL . COLON XRI byte_8
    (86) statement -> LABEL . COLON CMA
    (88) statement -> LABEL . COLON RLC
    (90) statement -> LABEL . COLON RAL
    (92) statement -> LABEL . COLON RRC
    (94) statement -> LABEL . COLON RAR
    (97) statement -> LABEL . COLON CMP register
    (98) statement -> LABEL . COLON CMP memory
    (100) statement -> LABEL . COLON CPI byte_8
    (102) statement -> LABEL . COLON CMC
    (104) statement -> LABEL . COLON STC
    (106) statement -> LABEL . COLON DAA
    (109) statement -> LABEL . COLON JMP byte_16
    (110) statement -> LABEL . COLON JMP LABEL
    (113) statement -> LABEL . COLON JC byte_16
    (114) statement -> LABEL . COLON JC LABEL
    (117) statement -> LABEL . COLON JNC byte_16
    (118) statement -> LABEL . COLON JNC LABEL
    (121) statement -> LABEL . COLON JZ byte_16
    (122) statement -> LABEL . COLON JZ LABEL
    (125) statement -> LABEL . COLON JNZ byte_16
    (126) statement -> LABEL . COLON JNZ LABEL
    (129) statement -> LABEL . COLON JP byte_16
    (130) statement -> LABEL . COLON JP LABEL
    (133) statement -> LABEL . COLON JM byte_16
    (134) statement -> LABEL . COLON JM LABEL
    (137) statement -> LABEL . COLON JPE byte_16
    (138) statement -> LABEL . COLON JPE LABEL
    (141) statement -> LABEL . COLON JPO byte_16
    (142) statement -> LABEL . COLON JPO LABEL
    (145) statement -> LABEL . COLON CALL byte_16
    (146) statement -> LABEL . COLON CALL LABEL
    (148) statement -> LABEL . COLON RET
    (150) statement -> LABEL . COLON MACHINE

    COLON           shift and go to state 66


state 5

    (9) statement -> MVI . register COMMA byte_8
    (10) statement -> MVI . memory COMMA byte_8
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 67
    memory                         shift and go to state 68

state 6

    (13) statement -> LXI . register_pair_3 COMMA byte_16
    (161) register_pair_3 -> . B
    (162) register_pair_3 -> . D
    (163) register_pair_3 -> . H

    B               shift and go to state 70
    D               shift and go to state 71
    H               shift and go to state 72

    register_pair_3                shift and go to state 69

state 7

    (15) statement -> LDAX . register_pair_2
    (159) register_pair_2 -> . B
    (160) register_pair_2 -> . D

    B               shift and go to state 74
    D               shift and go to state 75

    register_pair_2                shift and go to state 73

state 8

    (17) statement -> STAX . register_pair_2
    (159) register_pair_2 -> . B
    (160) register_pair_2 -> . D

    B               shift and go to state 74
    D               shift and go to state 75

    register_pair_2                shift and go to state 76

state 9

    (19) statement -> LDA . byte_16
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 77

state 10

    (21) statement -> STA . byte_16
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 79

state 11

    (23) statement -> LHLD . byte_16
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 80

state 12

    (25) statement -> SHLD . byte_16
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 81

state 13

    (27) statement -> XCHG .

    MOV             reduce using rule 27 (statement -> XCHG .)
    LABEL           reduce using rule 27 (statement -> XCHG .)
    MVI             reduce using rule 27 (statement -> XCHG .)
    LXI             reduce using rule 27 (statement -> XCHG .)
    LDAX            reduce using rule 27 (statement -> XCHG .)
    STAX            reduce using rule 27 (statement -> XCHG .)
    LDA             reduce using rule 27 (statement -> XCHG .)
    STA             reduce using rule 27 (statement -> XCHG .)
    LHLD            reduce using rule 27 (statement -> XCHG .)
    SHLD            reduce using rule 27 (statement -> XCHG .)
    XCHG            reduce using rule 27 (statement -> XCHG .)
    ADD             reduce using rule 27 (statement -> XCHG .)
    ADI             reduce using rule 27 (statement -> XCHG .)
    ADC             reduce using rule 27 (statement -> XCHG .)
    ACI             reduce using rule 27 (statement -> XCHG .)
    SUB             reduce using rule 27 (statement -> XCHG .)
    SUI             reduce using rule 27 (statement -> XCHG .)
    SBB             reduce using rule 27 (statement -> XCHG .)
    SBI             reduce using rule 27 (statement -> XCHG .)
    INR             reduce using rule 27 (statement -> XCHG .)
    DCR             reduce using rule 27 (statement -> XCHG .)
    INX             reduce using rule 27 (statement -> XCHG .)
    DCX             reduce using rule 27 (statement -> XCHG .)
    DAD             reduce using rule 27 (statement -> XCHG .)
    ANA             reduce using rule 27 (statement -> XCHG .)
    ORA             reduce using rule 27 (statement -> XCHG .)
    XRA             reduce using rule 27 (statement -> XCHG .)
    ANI             reduce using rule 27 (statement -> XCHG .)
    ORI             reduce using rule 27 (statement -> XCHG .)
    XRI             reduce using rule 27 (statement -> XCHG .)
    CMA             reduce using rule 27 (statement -> XCHG .)
    RLC             reduce using rule 27 (statement -> XCHG .)
    RAL             reduce using rule 27 (statement -> XCHG .)
    RRC             reduce using rule 27 (statement -> XCHG .)
    RAR             reduce using rule 27 (statement -> XCHG .)
    CMP             reduce using rule 27 (statement -> XCHG .)
    CPI             reduce using rule 27 (statement -> XCHG .)
    CMC             reduce using rule 27 (statement -> XCHG .)
    STC             reduce using rule 27 (statement -> XCHG .)
    DAA             reduce using rule 27 (statement -> XCHG .)
    JMP             reduce using rule 27 (statement -> XCHG .)
    JC              reduce using rule 27 (statement -> XCHG .)
    JNC             reduce using rule 27 (statement -> XCHG .)
    JZ              reduce using rule 27 (statement -> XCHG .)
    JNZ             reduce using rule 27 (statement -> XCHG .)
    JP              reduce using rule 27 (statement -> XCHG .)
    JM              reduce using rule 27 (statement -> XCHG .)
    JPE             reduce using rule 27 (statement -> XCHG .)
    JPO             reduce using rule 27 (statement -> XCHG .)
    CALL            reduce using rule 27 (statement -> XCHG .)
    RET             reduce using rule 27 (statement -> XCHG .)
    MACHINE         reduce using rule 27 (statement -> XCHG .)
    $end            reduce using rule 27 (statement -> XCHG .)


state 14

    (29) statement -> ADD . register
    (30) statement -> ADD . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 82
    memory                         shift and go to state 83

state 15

    (33) statement -> ADI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 84

state 16

    (35) statement -> ADC . register
    (36) statement -> ADC . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 86
    memory                         shift and go to state 87

state 17

    (39) statement -> ACI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 88

state 18

    (41) statement -> SUB . register
    (42) statement -> SUB . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 89
    memory                         shift and go to state 90

state 19

    (45) statement -> SUI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 91

state 20

    (47) statement -> SBB . register
    (48) statement -> SBB . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 92
    memory                         shift and go to state 93

state 21

    (51) statement -> SBI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 94

state 22

    (53) statement -> INR . register
    (54) statement -> INR . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 95
    memory                         shift and go to state 96

state 23

    (57) statement -> DCR . register
    (58) statement -> DCR . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 97
    memory                         shift and go to state 98

state 24

    (61) statement -> INX . register_pair_3
    (161) register_pair_3 -> . B
    (162) register_pair_3 -> . D
    (163) register_pair_3 -> . H

    B               shift and go to state 70
    D               shift and go to state 71
    H               shift and go to state 72

    register_pair_3                shift and go to state 99

state 25

    (63) statement -> DCX . register_pair_3
    (161) register_pair_3 -> . B
    (162) register_pair_3 -> . D
    (163) register_pair_3 -> . H

    B               shift and go to state 70
    D               shift and go to state 71
    H               shift and go to state 72

    register_pair_3                shift and go to state 100

state 26

    (65) statement -> DAD . register_pair_3
    (161) register_pair_3 -> . B
    (162) register_pair_3 -> . D
    (163) register_pair_3 -> . H

    B               shift and go to state 70
    D               shift and go to state 71
    H               shift and go to state 72

    register_pair_3                shift and go to state 101

state 27

    (67) statement -> ANA . register
    (68) statement -> ANA . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 102
    memory                         shift and go to state 103

state 28

    (71) statement -> ORA . register
    (72) statement -> ORA . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 104
    memory                         shift and go to state 105

state 29

    (75) statement -> XRA . register
    (76) statement -> XRA . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 106
    memory                         shift and go to state 107

state 30

    (79) statement -> ANI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 108

state 31

    (81) statement -> ORI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 109

state 32

    (83) statement -> XRI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 110

state 33

    (85) statement -> CMA .

    MOV             reduce using rule 85 (statement -> CMA .)
    LABEL           reduce using rule 85 (statement -> CMA .)
    MVI             reduce using rule 85 (statement -> CMA .)
    LXI             reduce using rule 85 (statement -> CMA .)
    LDAX            reduce using rule 85 (statement -> CMA .)
    STAX            reduce using rule 85 (statement -> CMA .)
    LDA             reduce using rule 85 (statement -> CMA .)
    STA             reduce using rule 85 (statement -> CMA .)
    LHLD            reduce using rule 85 (statement -> CMA .)
    SHLD            reduce using rule 85 (statement -> CMA .)
    XCHG            reduce using rule 85 (statement -> CMA .)
    ADD             reduce using rule 85 (statement -> CMA .)
    ADI             reduce using rule 85 (statement -> CMA .)
    ADC             reduce using rule 85 (statement -> CMA .)
    ACI             reduce using rule 85 (statement -> CMA .)
    SUB             reduce using rule 85 (statement -> CMA .)
    SUI             reduce using rule 85 (statement -> CMA .)
    SBB             reduce using rule 85 (statement -> CMA .)
    SBI             reduce using rule 85 (statement -> CMA .)
    INR             reduce using rule 85 (statement -> CMA .)
    DCR             reduce using rule 85 (statement -> CMA .)
    INX             reduce using rule 85 (statement -> CMA .)
    DCX             reduce using rule 85 (statement -> CMA .)
    DAD             reduce using rule 85 (statement -> CMA .)
    ANA             reduce using rule 85 (statement -> CMA .)
    ORA             reduce using rule 85 (statement -> CMA .)
    XRA             reduce using rule 85 (statement -> CMA .)
    ANI             reduce using rule 85 (statement -> CMA .)
    ORI             reduce using rule 85 (statement -> CMA .)
    XRI             reduce using rule 85 (statement -> CMA .)
    CMA             reduce using rule 85 (statement -> CMA .)
    RLC             reduce using rule 85 (statement -> CMA .)
    RAL             reduce using rule 85 (statement -> CMA .)
    RRC             reduce using rule 85 (statement -> CMA .)
    RAR             reduce using rule 85 (statement -> CMA .)
    CMP             reduce using rule 85 (statement -> CMA .)
    CPI             reduce using rule 85 (statement -> CMA .)
    CMC             reduce using rule 85 (statement -> CMA .)
    STC             reduce using rule 85 (statement -> CMA .)
    DAA             reduce using rule 85 (statement -> CMA .)
    JMP             reduce using rule 85 (statement -> CMA .)
    JC              reduce using rule 85 (statement -> CMA .)
    JNC             reduce using rule 85 (statement -> CMA .)
    JZ              reduce using rule 85 (statement -> CMA .)
    JNZ             reduce using rule 85 (statement -> CMA .)
    JP              reduce using rule 85 (statement -> CMA .)
    JM              reduce using rule 85 (statement -> CMA .)
    JPE             reduce using rule 85 (statement -> CMA .)
    JPO             reduce using rule 85 (statement -> CMA .)
    CALL            reduce using rule 85 (statement -> CMA .)
    RET             reduce using rule 85 (statement -> CMA .)
    MACHINE         reduce using rule 85 (statement -> CMA .)
    $end            reduce using rule 85 (statement -> CMA .)


state 34

    (87) statement -> RLC .

    MOV             reduce using rule 87 (statement -> RLC .)
    LABEL           reduce using rule 87 (statement -> RLC .)
    MVI             reduce using rule 87 (statement -> RLC .)
    LXI             reduce using rule 87 (statement -> RLC .)
    LDAX            reduce using rule 87 (statement -> RLC .)
    STAX            reduce using rule 87 (statement -> RLC .)
    LDA             reduce using rule 87 (statement -> RLC .)
    STA             reduce using rule 87 (statement -> RLC .)
    LHLD            reduce using rule 87 (statement -> RLC .)
    SHLD            reduce using rule 87 (statement -> RLC .)
    XCHG            reduce using rule 87 (statement -> RLC .)
    ADD             reduce using rule 87 (statement -> RLC .)
    ADI             reduce using rule 87 (statement -> RLC .)
    ADC             reduce using rule 87 (statement -> RLC .)
    ACI             reduce using rule 87 (statement -> RLC .)
    SUB             reduce using rule 87 (statement -> RLC .)
    SUI             reduce using rule 87 (statement -> RLC .)
    SBB             reduce using rule 87 (statement -> RLC .)
    SBI             reduce using rule 87 (statement -> RLC .)
    INR             reduce using rule 87 (statement -> RLC .)
    DCR             reduce using rule 87 (statement -> RLC .)
    INX             reduce using rule 87 (statement -> RLC .)
    DCX             reduce using rule 87 (statement -> RLC .)
    DAD             reduce using rule 87 (statement -> RLC .)
    ANA             reduce using rule 87 (statement -> RLC .)
    ORA             reduce using rule 87 (statement -> RLC .)
    XRA             reduce using rule 87 (statement -> RLC .)
    ANI             reduce using rule 87 (statement -> RLC .)
    ORI             reduce using rule 87 (statement -> RLC .)
    XRI             reduce using rule 87 (statement -> RLC .)
    CMA             reduce using rule 87 (statement -> RLC .)
    RLC             reduce using rule 87 (statement -> RLC .)
    RAL             reduce using rule 87 (statement -> RLC .)
    RRC             reduce using rule 87 (statement -> RLC .)
    RAR             reduce using rule 87 (statement -> RLC .)
    CMP             reduce using rule 87 (statement -> RLC .)
    CPI             reduce using rule 87 (statement -> RLC .)
    CMC             reduce using rule 87 (statement -> RLC .)
    STC             reduce using rule 87 (statement -> RLC .)
    DAA             reduce using rule 87 (statement -> RLC .)
    JMP             reduce using rule 87 (statement -> RLC .)
    JC              reduce using rule 87 (statement -> RLC .)
    JNC             reduce using rule 87 (statement -> RLC .)
    JZ              reduce using rule 87 (statement -> RLC .)
    JNZ             reduce using rule 87 (statement -> RLC .)
    JP              reduce using rule 87 (statement -> RLC .)
    JM              reduce using rule 87 (statement -> RLC .)
    JPE             reduce using rule 87 (statement -> RLC .)
    JPO             reduce using rule 87 (statement -> RLC .)
    CALL            reduce using rule 87 (statement -> RLC .)
    RET             reduce using rule 87 (statement -> RLC .)
    MACHINE         reduce using rule 87 (statement -> RLC .)
    $end            reduce using rule 87 (statement -> RLC .)


state 35

    (89) statement -> RAL .

    MOV             reduce using rule 89 (statement -> RAL .)
    LABEL           reduce using rule 89 (statement -> RAL .)
    MVI             reduce using rule 89 (statement -> RAL .)
    LXI             reduce using rule 89 (statement -> RAL .)
    LDAX            reduce using rule 89 (statement -> RAL .)
    STAX            reduce using rule 89 (statement -> RAL .)
    LDA             reduce using rule 89 (statement -> RAL .)
    STA             reduce using rule 89 (statement -> RAL .)
    LHLD            reduce using rule 89 (statement -> RAL .)
    SHLD            reduce using rule 89 (statement -> RAL .)
    XCHG            reduce using rule 89 (statement -> RAL .)
    ADD             reduce using rule 89 (statement -> RAL .)
    ADI             reduce using rule 89 (statement -> RAL .)
    ADC             reduce using rule 89 (statement -> RAL .)
    ACI             reduce using rule 89 (statement -> RAL .)
    SUB             reduce using rule 89 (statement -> RAL .)
    SUI             reduce using rule 89 (statement -> RAL .)
    SBB             reduce using rule 89 (statement -> RAL .)
    SBI             reduce using rule 89 (statement -> RAL .)
    INR             reduce using rule 89 (statement -> RAL .)
    DCR             reduce using rule 89 (statement -> RAL .)
    INX             reduce using rule 89 (statement -> RAL .)
    DCX             reduce using rule 89 (statement -> RAL .)
    DAD             reduce using rule 89 (statement -> RAL .)
    ANA             reduce using rule 89 (statement -> RAL .)
    ORA             reduce using rule 89 (statement -> RAL .)
    XRA             reduce using rule 89 (statement -> RAL .)
    ANI             reduce using rule 89 (statement -> RAL .)
    ORI             reduce using rule 89 (statement -> RAL .)
    XRI             reduce using rule 89 (statement -> RAL .)
    CMA             reduce using rule 89 (statement -> RAL .)
    RLC             reduce using rule 89 (statement -> RAL .)
    RAL             reduce using rule 89 (statement -> RAL .)
    RRC             reduce using rule 89 (statement -> RAL .)
    RAR             reduce using rule 89 (statement -> RAL .)
    CMP             reduce using rule 89 (statement -> RAL .)
    CPI             reduce using rule 89 (statement -> RAL .)
    CMC             reduce using rule 89 (statement -> RAL .)
    STC             reduce using rule 89 (statement -> RAL .)
    DAA             reduce using rule 89 (statement -> RAL .)
    JMP             reduce using rule 89 (statement -> RAL .)
    JC              reduce using rule 89 (statement -> RAL .)
    JNC             reduce using rule 89 (statement -> RAL .)
    JZ              reduce using rule 89 (statement -> RAL .)
    JNZ             reduce using rule 89 (statement -> RAL .)
    JP              reduce using rule 89 (statement -> RAL .)
    JM              reduce using rule 89 (statement -> RAL .)
    JPE             reduce using rule 89 (statement -> RAL .)
    JPO             reduce using rule 89 (statement -> RAL .)
    CALL            reduce using rule 89 (statement -> RAL .)
    RET             reduce using rule 89 (statement -> RAL .)
    MACHINE         reduce using rule 89 (statement -> RAL .)
    $end            reduce using rule 89 (statement -> RAL .)


state 36

    (91) statement -> RRC .

    MOV             reduce using rule 91 (statement -> RRC .)
    LABEL           reduce using rule 91 (statement -> RRC .)
    MVI             reduce using rule 91 (statement -> RRC .)
    LXI             reduce using rule 91 (statement -> RRC .)
    LDAX            reduce using rule 91 (statement -> RRC .)
    STAX            reduce using rule 91 (statement -> RRC .)
    LDA             reduce using rule 91 (statement -> RRC .)
    STA             reduce using rule 91 (statement -> RRC .)
    LHLD            reduce using rule 91 (statement -> RRC .)
    SHLD            reduce using rule 91 (statement -> RRC .)
    XCHG            reduce using rule 91 (statement -> RRC .)
    ADD             reduce using rule 91 (statement -> RRC .)
    ADI             reduce using rule 91 (statement -> RRC .)
    ADC             reduce using rule 91 (statement -> RRC .)
    ACI             reduce using rule 91 (statement -> RRC .)
    SUB             reduce using rule 91 (statement -> RRC .)
    SUI             reduce using rule 91 (statement -> RRC .)
    SBB             reduce using rule 91 (statement -> RRC .)
    SBI             reduce using rule 91 (statement -> RRC .)
    INR             reduce using rule 91 (statement -> RRC .)
    DCR             reduce using rule 91 (statement -> RRC .)
    INX             reduce using rule 91 (statement -> RRC .)
    DCX             reduce using rule 91 (statement -> RRC .)
    DAD             reduce using rule 91 (statement -> RRC .)
    ANA             reduce using rule 91 (statement -> RRC .)
    ORA             reduce using rule 91 (statement -> RRC .)
    XRA             reduce using rule 91 (statement -> RRC .)
    ANI             reduce using rule 91 (statement -> RRC .)
    ORI             reduce using rule 91 (statement -> RRC .)
    XRI             reduce using rule 91 (statement -> RRC .)
    CMA             reduce using rule 91 (statement -> RRC .)
    RLC             reduce using rule 91 (statement -> RRC .)
    RAL             reduce using rule 91 (statement -> RRC .)
    RRC             reduce using rule 91 (statement -> RRC .)
    RAR             reduce using rule 91 (statement -> RRC .)
    CMP             reduce using rule 91 (statement -> RRC .)
    CPI             reduce using rule 91 (statement -> RRC .)
    CMC             reduce using rule 91 (statement -> RRC .)
    STC             reduce using rule 91 (statement -> RRC .)
    DAA             reduce using rule 91 (statement -> RRC .)
    JMP             reduce using rule 91 (statement -> RRC .)
    JC              reduce using rule 91 (statement -> RRC .)
    JNC             reduce using rule 91 (statement -> RRC .)
    JZ              reduce using rule 91 (statement -> RRC .)
    JNZ             reduce using rule 91 (statement -> RRC .)
    JP              reduce using rule 91 (statement -> RRC .)
    JM              reduce using rule 91 (statement -> RRC .)
    JPE             reduce using rule 91 (statement -> RRC .)
    JPO             reduce using rule 91 (statement -> RRC .)
    CALL            reduce using rule 91 (statement -> RRC .)
    RET             reduce using rule 91 (statement -> RRC .)
    MACHINE         reduce using rule 91 (statement -> RRC .)
    $end            reduce using rule 91 (statement -> RRC .)


state 37

    (93) statement -> RAR .

    MOV             reduce using rule 93 (statement -> RAR .)
    LABEL           reduce using rule 93 (statement -> RAR .)
    MVI             reduce using rule 93 (statement -> RAR .)
    LXI             reduce using rule 93 (statement -> RAR .)
    LDAX            reduce using rule 93 (statement -> RAR .)
    STAX            reduce using rule 93 (statement -> RAR .)
    LDA             reduce using rule 93 (statement -> RAR .)
    STA             reduce using rule 93 (statement -> RAR .)
    LHLD            reduce using rule 93 (statement -> RAR .)
    SHLD            reduce using rule 93 (statement -> RAR .)
    XCHG            reduce using rule 93 (statement -> RAR .)
    ADD             reduce using rule 93 (statement -> RAR .)
    ADI             reduce using rule 93 (statement -> RAR .)
    ADC             reduce using rule 93 (statement -> RAR .)
    ACI             reduce using rule 93 (statement -> RAR .)
    SUB             reduce using rule 93 (statement -> RAR .)
    SUI             reduce using rule 93 (statement -> RAR .)
    SBB             reduce using rule 93 (statement -> RAR .)
    SBI             reduce using rule 93 (statement -> RAR .)
    INR             reduce using rule 93 (statement -> RAR .)
    DCR             reduce using rule 93 (statement -> RAR .)
    INX             reduce using rule 93 (statement -> RAR .)
    DCX             reduce using rule 93 (statement -> RAR .)
    DAD             reduce using rule 93 (statement -> RAR .)
    ANA             reduce using rule 93 (statement -> RAR .)
    ORA             reduce using rule 93 (statement -> RAR .)
    XRA             reduce using rule 93 (statement -> RAR .)
    ANI             reduce using rule 93 (statement -> RAR .)
    ORI             reduce using rule 93 (statement -> RAR .)
    XRI             reduce using rule 93 (statement -> RAR .)
    CMA             reduce using rule 93 (statement -> RAR .)
    RLC             reduce using rule 93 (statement -> RAR .)
    RAL             reduce using rule 93 (statement -> RAR .)
    RRC             reduce using rule 93 (statement -> RAR .)
    RAR             reduce using rule 93 (statement -> RAR .)
    CMP             reduce using rule 93 (statement -> RAR .)
    CPI             reduce using rule 93 (statement -> RAR .)
    CMC             reduce using rule 93 (statement -> RAR .)
    STC             reduce using rule 93 (statement -> RAR .)
    DAA             reduce using rule 93 (statement -> RAR .)
    JMP             reduce using rule 93 (statement -> RAR .)
    JC              reduce using rule 93 (statement -> RAR .)
    JNC             reduce using rule 93 (statement -> RAR .)
    JZ              reduce using rule 93 (statement -> RAR .)
    JNZ             reduce using rule 93 (statement -> RAR .)
    JP              reduce using rule 93 (statement -> RAR .)
    JM              reduce using rule 93 (statement -> RAR .)
    JPE             reduce using rule 93 (statement -> RAR .)
    JPO             reduce using rule 93 (statement -> RAR .)
    CALL            reduce using rule 93 (statement -> RAR .)
    RET             reduce using rule 93 (statement -> RAR .)
    MACHINE         reduce using rule 93 (statement -> RAR .)
    $end            reduce using rule 93 (statement -> RAR .)


state 38

    (95) statement -> CMP . register
    (96) statement -> CMP . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 111
    memory                         shift and go to state 112

state 39

    (99) statement -> CPI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 113

state 40

    (101) statement -> CMC .

    MOV             reduce using rule 101 (statement -> CMC .)
    LABEL           reduce using rule 101 (statement -> CMC .)
    MVI             reduce using rule 101 (statement -> CMC .)
    LXI             reduce using rule 101 (statement -> CMC .)
    LDAX            reduce using rule 101 (statement -> CMC .)
    STAX            reduce using rule 101 (statement -> CMC .)
    LDA             reduce using rule 101 (statement -> CMC .)
    STA             reduce using rule 101 (statement -> CMC .)
    LHLD            reduce using rule 101 (statement -> CMC .)
    SHLD            reduce using rule 101 (statement -> CMC .)
    XCHG            reduce using rule 101 (statement -> CMC .)
    ADD             reduce using rule 101 (statement -> CMC .)
    ADI             reduce using rule 101 (statement -> CMC .)
    ADC             reduce using rule 101 (statement -> CMC .)
    ACI             reduce using rule 101 (statement -> CMC .)
    SUB             reduce using rule 101 (statement -> CMC .)
    SUI             reduce using rule 101 (statement -> CMC .)
    SBB             reduce using rule 101 (statement -> CMC .)
    SBI             reduce using rule 101 (statement -> CMC .)
    INR             reduce using rule 101 (statement -> CMC .)
    DCR             reduce using rule 101 (statement -> CMC .)
    INX             reduce using rule 101 (statement -> CMC .)
    DCX             reduce using rule 101 (statement -> CMC .)
    DAD             reduce using rule 101 (statement -> CMC .)
    ANA             reduce using rule 101 (statement -> CMC .)
    ORA             reduce using rule 101 (statement -> CMC .)
    XRA             reduce using rule 101 (statement -> CMC .)
    ANI             reduce using rule 101 (statement -> CMC .)
    ORI             reduce using rule 101 (statement -> CMC .)
    XRI             reduce using rule 101 (statement -> CMC .)
    CMA             reduce using rule 101 (statement -> CMC .)
    RLC             reduce using rule 101 (statement -> CMC .)
    RAL             reduce using rule 101 (statement -> CMC .)
    RRC             reduce using rule 101 (statement -> CMC .)
    RAR             reduce using rule 101 (statement -> CMC .)
    CMP             reduce using rule 101 (statement -> CMC .)
    CPI             reduce using rule 101 (statement -> CMC .)
    CMC             reduce using rule 101 (statement -> CMC .)
    STC             reduce using rule 101 (statement -> CMC .)
    DAA             reduce using rule 101 (statement -> CMC .)
    JMP             reduce using rule 101 (statement -> CMC .)
    JC              reduce using rule 101 (statement -> CMC .)
    JNC             reduce using rule 101 (statement -> CMC .)
    JZ              reduce using rule 101 (statement -> CMC .)
    JNZ             reduce using rule 101 (statement -> CMC .)
    JP              reduce using rule 101 (statement -> CMC .)
    JM              reduce using rule 101 (statement -> CMC .)
    JPE             reduce using rule 101 (statement -> CMC .)
    JPO             reduce using rule 101 (statement -> CMC .)
    CALL            reduce using rule 101 (statement -> CMC .)
    RET             reduce using rule 101 (statement -> CMC .)
    MACHINE         reduce using rule 101 (statement -> CMC .)
    $end            reduce using rule 101 (statement -> CMC .)


state 41

    (103) statement -> STC .

    MOV             reduce using rule 103 (statement -> STC .)
    LABEL           reduce using rule 103 (statement -> STC .)
    MVI             reduce using rule 103 (statement -> STC .)
    LXI             reduce using rule 103 (statement -> STC .)
    LDAX            reduce using rule 103 (statement -> STC .)
    STAX            reduce using rule 103 (statement -> STC .)
    LDA             reduce using rule 103 (statement -> STC .)
    STA             reduce using rule 103 (statement -> STC .)
    LHLD            reduce using rule 103 (statement -> STC .)
    SHLD            reduce using rule 103 (statement -> STC .)
    XCHG            reduce using rule 103 (statement -> STC .)
    ADD             reduce using rule 103 (statement -> STC .)
    ADI             reduce using rule 103 (statement -> STC .)
    ADC             reduce using rule 103 (statement -> STC .)
    ACI             reduce using rule 103 (statement -> STC .)
    SUB             reduce using rule 103 (statement -> STC .)
    SUI             reduce using rule 103 (statement -> STC .)
    SBB             reduce using rule 103 (statement -> STC .)
    SBI             reduce using rule 103 (statement -> STC .)
    INR             reduce using rule 103 (statement -> STC .)
    DCR             reduce using rule 103 (statement -> STC .)
    INX             reduce using rule 103 (statement -> STC .)
    DCX             reduce using rule 103 (statement -> STC .)
    DAD             reduce using rule 103 (statement -> STC .)
    ANA             reduce using rule 103 (statement -> STC .)
    ORA             reduce using rule 103 (statement -> STC .)
    XRA             reduce using rule 103 (statement -> STC .)
    ANI             reduce using rule 103 (statement -> STC .)
    ORI             reduce using rule 103 (statement -> STC .)
    XRI             reduce using rule 103 (statement -> STC .)
    CMA             reduce using rule 103 (statement -> STC .)
    RLC             reduce using rule 103 (statement -> STC .)
    RAL             reduce using rule 103 (statement -> STC .)
    RRC             reduce using rule 103 (statement -> STC .)
    RAR             reduce using rule 103 (statement -> STC .)
    CMP             reduce using rule 103 (statement -> STC .)
    CPI             reduce using rule 103 (statement -> STC .)
    CMC             reduce using rule 103 (statement -> STC .)
    STC             reduce using rule 103 (statement -> STC .)
    DAA             reduce using rule 103 (statement -> STC .)
    JMP             reduce using rule 103 (statement -> STC .)
    JC              reduce using rule 103 (statement -> STC .)
    JNC             reduce using rule 103 (statement -> STC .)
    JZ              reduce using rule 103 (statement -> STC .)
    JNZ             reduce using rule 103 (statement -> STC .)
    JP              reduce using rule 103 (statement -> STC .)
    JM              reduce using rule 103 (statement -> STC .)
    JPE             reduce using rule 103 (statement -> STC .)
    JPO             reduce using rule 103 (statement -> STC .)
    CALL            reduce using rule 103 (statement -> STC .)
    RET             reduce using rule 103 (statement -> STC .)
    MACHINE         reduce using rule 103 (statement -> STC .)
    $end            reduce using rule 103 (statement -> STC .)


state 42

    (105) statement -> DAA .

    MOV             reduce using rule 105 (statement -> DAA .)
    LABEL           reduce using rule 105 (statement -> DAA .)
    MVI             reduce using rule 105 (statement -> DAA .)
    LXI             reduce using rule 105 (statement -> DAA .)
    LDAX            reduce using rule 105 (statement -> DAA .)
    STAX            reduce using rule 105 (statement -> DAA .)
    LDA             reduce using rule 105 (statement -> DAA .)
    STA             reduce using rule 105 (statement -> DAA .)
    LHLD            reduce using rule 105 (statement -> DAA .)
    SHLD            reduce using rule 105 (statement -> DAA .)
    XCHG            reduce using rule 105 (statement -> DAA .)
    ADD             reduce using rule 105 (statement -> DAA .)
    ADI             reduce using rule 105 (statement -> DAA .)
    ADC             reduce using rule 105 (statement -> DAA .)
    ACI             reduce using rule 105 (statement -> DAA .)
    SUB             reduce using rule 105 (statement -> DAA .)
    SUI             reduce using rule 105 (statement -> DAA .)
    SBB             reduce using rule 105 (statement -> DAA .)
    SBI             reduce using rule 105 (statement -> DAA .)
    INR             reduce using rule 105 (statement -> DAA .)
    DCR             reduce using rule 105 (statement -> DAA .)
    INX             reduce using rule 105 (statement -> DAA .)
    DCX             reduce using rule 105 (statement -> DAA .)
    DAD             reduce using rule 105 (statement -> DAA .)
    ANA             reduce using rule 105 (statement -> DAA .)
    ORA             reduce using rule 105 (statement -> DAA .)
    XRA             reduce using rule 105 (statement -> DAA .)
    ANI             reduce using rule 105 (statement -> DAA .)
    ORI             reduce using rule 105 (statement -> DAA .)
    XRI             reduce using rule 105 (statement -> DAA .)
    CMA             reduce using rule 105 (statement -> DAA .)
    RLC             reduce using rule 105 (statement -> DAA .)
    RAL             reduce using rule 105 (statement -> DAA .)
    RRC             reduce using rule 105 (statement -> DAA .)
    RAR             reduce using rule 105 (statement -> DAA .)
    CMP             reduce using rule 105 (statement -> DAA .)
    CPI             reduce using rule 105 (statement -> DAA .)
    CMC             reduce using rule 105 (statement -> DAA .)
    STC             reduce using rule 105 (statement -> DAA .)
    DAA             reduce using rule 105 (statement -> DAA .)
    JMP             reduce using rule 105 (statement -> DAA .)
    JC              reduce using rule 105 (statement -> DAA .)
    JNC             reduce using rule 105 (statement -> DAA .)
    JZ              reduce using rule 105 (statement -> DAA .)
    JNZ             reduce using rule 105 (statement -> DAA .)
    JP              reduce using rule 105 (statement -> DAA .)
    JM              reduce using rule 105 (statement -> DAA .)
    JPE             reduce using rule 105 (statement -> DAA .)
    JPO             reduce using rule 105 (statement -> DAA .)
    CALL            reduce using rule 105 (statement -> DAA .)
    RET             reduce using rule 105 (statement -> DAA .)
    MACHINE         reduce using rule 105 (statement -> DAA .)
    $end            reduce using rule 105 (statement -> DAA .)


state 43

    (107) statement -> JMP . byte_16
    (108) statement -> JMP . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 115
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 114

state 44

    (111) statement -> JC . byte_16
    (112) statement -> JC . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 117
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 116

state 45

    (115) statement -> JNC . byte_16
    (116) statement -> JNC . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 119
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 118

state 46

    (119) statement -> JZ . byte_16
    (120) statement -> JZ . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 121
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 120

state 47

    (123) statement -> JNZ . byte_16
    (124) statement -> JNZ . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 123
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 122

state 48

    (127) statement -> JP . byte_16
    (128) statement -> JP . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 125
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 124

state 49

    (131) statement -> JM . byte_16
    (132) statement -> JM . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 127
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 126

state 50

    (135) statement -> JPE . byte_16
    (136) statement -> JPE . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 129
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 128

state 51

    (139) statement -> JPO . byte_16
    (140) statement -> JPO . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 131
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 130

state 52

    (143) statement -> CALL . byte_16
    (144) statement -> CALL . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 133
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 132

state 53

    (147) statement -> RET .

    MOV             reduce using rule 147 (statement -> RET .)
    LABEL           reduce using rule 147 (statement -> RET .)
    MVI             reduce using rule 147 (statement -> RET .)
    LXI             reduce using rule 147 (statement -> RET .)
    LDAX            reduce using rule 147 (statement -> RET .)
    STAX            reduce using rule 147 (statement -> RET .)
    LDA             reduce using rule 147 (statement -> RET .)
    STA             reduce using rule 147 (statement -> RET .)
    LHLD            reduce using rule 147 (statement -> RET .)
    SHLD            reduce using rule 147 (statement -> RET .)
    XCHG            reduce using rule 147 (statement -> RET .)
    ADD             reduce using rule 147 (statement -> RET .)
    ADI             reduce using rule 147 (statement -> RET .)
    ADC             reduce using rule 147 (statement -> RET .)
    ACI             reduce using rule 147 (statement -> RET .)
    SUB             reduce using rule 147 (statement -> RET .)
    SUI             reduce using rule 147 (statement -> RET .)
    SBB             reduce using rule 147 (statement -> RET .)
    SBI             reduce using rule 147 (statement -> RET .)
    INR             reduce using rule 147 (statement -> RET .)
    DCR             reduce using rule 147 (statement -> RET .)
    INX             reduce using rule 147 (statement -> RET .)
    DCX             reduce using rule 147 (statement -> RET .)
    DAD             reduce using rule 147 (statement -> RET .)
    ANA             reduce using rule 147 (statement -> RET .)
    ORA             reduce using rule 147 (statement -> RET .)
    XRA             reduce using rule 147 (statement -> RET .)
    ANI             reduce using rule 147 (statement -> RET .)
    ORI             reduce using rule 147 (statement -> RET .)
    XRI             reduce using rule 147 (statement -> RET .)
    CMA             reduce using rule 147 (statement -> RET .)
    RLC             reduce using rule 147 (statement -> RET .)
    RAL             reduce using rule 147 (statement -> RET .)
    RRC             reduce using rule 147 (statement -> RET .)
    RAR             reduce using rule 147 (statement -> RET .)
    CMP             reduce using rule 147 (statement -> RET .)
    CPI             reduce using rule 147 (statement -> RET .)
    CMC             reduce using rule 147 (statement -> RET .)
    STC             reduce using rule 147 (statement -> RET .)
    DAA             reduce using rule 147 (statement -> RET .)
    JMP             reduce using rule 147 (statement -> RET .)
    JC              reduce using rule 147 (statement -> RET .)
    JNC             reduce using rule 147 (statement -> RET .)
    JZ              reduce using rule 147 (statement -> RET .)
    JNZ             reduce using rule 147 (statement -> RET .)
    JP              reduce using rule 147 (statement -> RET .)
    JM              reduce using rule 147 (statement -> RET .)
    JPE             reduce using rule 147 (statement -> RET .)
    JPO             reduce using rule 147 (statement -> RET .)
    CALL            reduce using rule 147 (statement -> RET .)
    RET             reduce using rule 147 (statement -> RET .)
    MACHINE         reduce using rule 147 (statement -> RET .)
    $end            reduce using rule 147 (statement -> RET .)


state 54

    (149) statement -> MACHINE .

    MOV             reduce using rule 149 (statement -> MACHINE .)
    LABEL           reduce using rule 149 (statement -> MACHINE .)
    MVI             reduce using rule 149 (statement -> MACHINE .)
    LXI             reduce using rule 149 (statement -> MACHINE .)
    LDAX            reduce using rule 149 (statement -> MACHINE .)
    STAX            reduce using rule 149 (statement -> MACHINE .)
    LDA             reduce using rule 149 (statement -> MACHINE .)
    STA             reduce using rule 149 (statement -> MACHINE .)
    LHLD            reduce using rule 149 (statement -> MACHINE .)
    SHLD            reduce using rule 149 (statement -> MACHINE .)
    XCHG            reduce using rule 149 (statement -> MACHINE .)
    ADD             reduce using rule 149 (statement -> MACHINE .)
    ADI             reduce using rule 149 (statement -> MACHINE .)
    ADC             reduce using rule 149 (statement -> MACHINE .)
    ACI             reduce using rule 149 (statement -> MACHINE .)
    SUB             reduce using rule 149 (statement -> MACHINE .)
    SUI             reduce using rule 149 (statement -> MACHINE .)
    SBB             reduce using rule 149 (statement -> MACHINE .)
    SBI             reduce using rule 149 (statement -> MACHINE .)
    INR             reduce using rule 149 (statement -> MACHINE .)
    DCR             reduce using rule 149 (statement -> MACHINE .)
    INX             reduce using rule 149 (statement -> MACHINE .)
    DCX             reduce using rule 149 (statement -> MACHINE .)
    DAD             reduce using rule 149 (statement -> MACHINE .)
    ANA             reduce using rule 149 (statement -> MACHINE .)
    ORA             reduce using rule 149 (statement -> MACHINE .)
    XRA             reduce using rule 149 (statement -> MACHINE .)
    ANI             reduce using rule 149 (statement -> MACHINE .)
    ORI             reduce using rule 149 (statement -> MACHINE .)
    XRI             reduce using rule 149 (statement -> MACHINE .)
    CMA             reduce using rule 149 (statement -> MACHINE .)
    RLC             reduce using rule 149 (statement -> MACHINE .)
    RAL             reduce using rule 149 (statement -> MACHINE .)
    RRC             reduce using rule 149 (statement -> MACHINE .)
    RAR             reduce using rule 149 (statement -> MACHINE .)
    CMP             reduce using rule 149 (statement -> MACHINE .)
    CPI             reduce using rule 149 (statement -> MACHINE .)
    CMC             reduce using rule 149 (statement -> MACHINE .)
    STC             reduce using rule 149 (statement -> MACHINE .)
    DAA             reduce using rule 149 (statement -> MACHINE .)
    JMP             reduce using rule 149 (statement -> MACHINE .)
    JC              reduce using rule 149 (statement -> MACHINE .)
    JNC             reduce using rule 149 (statement -> MACHINE .)
    JZ              reduce using rule 149 (statement -> MACHINE .)
    JNZ             reduce using rule 149 (statement -> MACHINE .)
    JP              reduce using rule 149 (statement -> MACHINE .)
    JM              reduce using rule 149 (statement -> MACHINE .)
    JPE             reduce using rule 149 (statement -> MACHINE .)
    JPO             reduce using rule 149 (statement -> MACHINE .)
    CALL            reduce using rule 149 (statement -> MACHINE .)
    RET             reduce using rule 149 (statement -> MACHINE .)
    MACHINE         reduce using rule 149 (statement -> MACHINE .)
    $end            reduce using rule 149 (statement -> MACHINE .)


state 55

    (1) statements -> statement statements .

    $end            reduce using rule 1 (statements -> statement statements .)


state 56

    (3) statement -> MOV register . COMMA register
    (4) statement -> MOV register . COMMA memory

    COMMA           shift and go to state 134


state 57

    (5) statement -> MOV memory . COMMA register

    COMMA           shift and go to state 135


state 58

    (151) register -> A .

    COMMA           reduce using rule 151 (register -> A .)
    MOV             reduce using rule 151 (register -> A .)
    LABEL           reduce using rule 151 (register -> A .)
    MVI             reduce using rule 151 (register -> A .)
    LXI             reduce using rule 151 (register -> A .)
    LDAX            reduce using rule 151 (register -> A .)
    STAX            reduce using rule 151 (register -> A .)
    LDA             reduce using rule 151 (register -> A .)
    STA             reduce using rule 151 (register -> A .)
    LHLD            reduce using rule 151 (register -> A .)
    SHLD            reduce using rule 151 (register -> A .)
    XCHG            reduce using rule 151 (register -> A .)
    ADD             reduce using rule 151 (register -> A .)
    ADI             reduce using rule 151 (register -> A .)
    ADC             reduce using rule 151 (register -> A .)
    ACI             reduce using rule 151 (register -> A .)
    SUB             reduce using rule 151 (register -> A .)
    SUI             reduce using rule 151 (register -> A .)
    SBB             reduce using rule 151 (register -> A .)
    SBI             reduce using rule 151 (register -> A .)
    INR             reduce using rule 151 (register -> A .)
    DCR             reduce using rule 151 (register -> A .)
    INX             reduce using rule 151 (register -> A .)
    DCX             reduce using rule 151 (register -> A .)
    DAD             reduce using rule 151 (register -> A .)
    ANA             reduce using rule 151 (register -> A .)
    ORA             reduce using rule 151 (register -> A .)
    XRA             reduce using rule 151 (register -> A .)
    ANI             reduce using rule 151 (register -> A .)
    ORI             reduce using rule 151 (register -> A .)
    XRI             reduce using rule 151 (register -> A .)
    CMA             reduce using rule 151 (register -> A .)
    RLC             reduce using rule 151 (register -> A .)
    RAL             reduce using rule 151 (register -> A .)
    RRC             reduce using rule 151 (register -> A .)
    RAR             reduce using rule 151 (register -> A .)
    CMP             reduce using rule 151 (register -> A .)
    CPI             reduce using rule 151 (register -> A .)
    CMC             reduce using rule 151 (register -> A .)
    STC             reduce using rule 151 (register -> A .)
    DAA             reduce using rule 151 (register -> A .)
    JMP             reduce using rule 151 (register -> A .)
    JC              reduce using rule 151 (register -> A .)
    JNC             reduce using rule 151 (register -> A .)
    JZ              reduce using rule 151 (register -> A .)
    JNZ             reduce using rule 151 (register -> A .)
    JP              reduce using rule 151 (register -> A .)
    JM              reduce using rule 151 (register -> A .)
    JPE             reduce using rule 151 (register -> A .)
    JPO             reduce using rule 151 (register -> A .)
    CALL            reduce using rule 151 (register -> A .)
    RET             reduce using rule 151 (register -> A .)
    MACHINE         reduce using rule 151 (register -> A .)
    $end            reduce using rule 151 (register -> A .)


state 59

    (152) register -> B .

    COMMA           reduce using rule 152 (register -> B .)
    MOV             reduce using rule 152 (register -> B .)
    LABEL           reduce using rule 152 (register -> B .)
    MVI             reduce using rule 152 (register -> B .)
    LXI             reduce using rule 152 (register -> B .)
    LDAX            reduce using rule 152 (register -> B .)
    STAX            reduce using rule 152 (register -> B .)
    LDA             reduce using rule 152 (register -> B .)
    STA             reduce using rule 152 (register -> B .)
    LHLD            reduce using rule 152 (register -> B .)
    SHLD            reduce using rule 152 (register -> B .)
    XCHG            reduce using rule 152 (register -> B .)
    ADD             reduce using rule 152 (register -> B .)
    ADI             reduce using rule 152 (register -> B .)
    ADC             reduce using rule 152 (register -> B .)
    ACI             reduce using rule 152 (register -> B .)
    SUB             reduce using rule 152 (register -> B .)
    SUI             reduce using rule 152 (register -> B .)
    SBB             reduce using rule 152 (register -> B .)
    SBI             reduce using rule 152 (register -> B .)
    INR             reduce using rule 152 (register -> B .)
    DCR             reduce using rule 152 (register -> B .)
    INX             reduce using rule 152 (register -> B .)
    DCX             reduce using rule 152 (register -> B .)
    DAD             reduce using rule 152 (register -> B .)
    ANA             reduce using rule 152 (register -> B .)
    ORA             reduce using rule 152 (register -> B .)
    XRA             reduce using rule 152 (register -> B .)
    ANI             reduce using rule 152 (register -> B .)
    ORI             reduce using rule 152 (register -> B .)
    XRI             reduce using rule 152 (register -> B .)
    CMA             reduce using rule 152 (register -> B .)
    RLC             reduce using rule 152 (register -> B .)
    RAL             reduce using rule 152 (register -> B .)
    RRC             reduce using rule 152 (register -> B .)
    RAR             reduce using rule 152 (register -> B .)
    CMP             reduce using rule 152 (register -> B .)
    CPI             reduce using rule 152 (register -> B .)
    CMC             reduce using rule 152 (register -> B .)
    STC             reduce using rule 152 (register -> B .)
    DAA             reduce using rule 152 (register -> B .)
    JMP             reduce using rule 152 (register -> B .)
    JC              reduce using rule 152 (register -> B .)
    JNC             reduce using rule 152 (register -> B .)
    JZ              reduce using rule 152 (register -> B .)
    JNZ             reduce using rule 152 (register -> B .)
    JP              reduce using rule 152 (register -> B .)
    JM              reduce using rule 152 (register -> B .)
    JPE             reduce using rule 152 (register -> B .)
    JPO             reduce using rule 152 (register -> B .)
    CALL            reduce using rule 152 (register -> B .)
    RET             reduce using rule 152 (register -> B .)
    MACHINE         reduce using rule 152 (register -> B .)
    $end            reduce using rule 152 (register -> B .)


state 60

    (153) register -> C .

    COMMA           reduce using rule 153 (register -> C .)
    MOV             reduce using rule 153 (register -> C .)
    LABEL           reduce using rule 153 (register -> C .)
    MVI             reduce using rule 153 (register -> C .)
    LXI             reduce using rule 153 (register -> C .)
    LDAX            reduce using rule 153 (register -> C .)
    STAX            reduce using rule 153 (register -> C .)
    LDA             reduce using rule 153 (register -> C .)
    STA             reduce using rule 153 (register -> C .)
    LHLD            reduce using rule 153 (register -> C .)
    SHLD            reduce using rule 153 (register -> C .)
    XCHG            reduce using rule 153 (register -> C .)
    ADD             reduce using rule 153 (register -> C .)
    ADI             reduce using rule 153 (register -> C .)
    ADC             reduce using rule 153 (register -> C .)
    ACI             reduce using rule 153 (register -> C .)
    SUB             reduce using rule 153 (register -> C .)
    SUI             reduce using rule 153 (register -> C .)
    SBB             reduce using rule 153 (register -> C .)
    SBI             reduce using rule 153 (register -> C .)
    INR             reduce using rule 153 (register -> C .)
    DCR             reduce using rule 153 (register -> C .)
    INX             reduce using rule 153 (register -> C .)
    DCX             reduce using rule 153 (register -> C .)
    DAD             reduce using rule 153 (register -> C .)
    ANA             reduce using rule 153 (register -> C .)
    ORA             reduce using rule 153 (register -> C .)
    XRA             reduce using rule 153 (register -> C .)
    ANI             reduce using rule 153 (register -> C .)
    ORI             reduce using rule 153 (register -> C .)
    XRI             reduce using rule 153 (register -> C .)
    CMA             reduce using rule 153 (register -> C .)
    RLC             reduce using rule 153 (register -> C .)
    RAL             reduce using rule 153 (register -> C .)
    RRC             reduce using rule 153 (register -> C .)
    RAR             reduce using rule 153 (register -> C .)
    CMP             reduce using rule 153 (register -> C .)
    CPI             reduce using rule 153 (register -> C .)
    CMC             reduce using rule 153 (register -> C .)
    STC             reduce using rule 153 (register -> C .)
    DAA             reduce using rule 153 (register -> C .)
    JMP             reduce using rule 153 (register -> C .)
    JC              reduce using rule 153 (register -> C .)
    JNC             reduce using rule 153 (register -> C .)
    JZ              reduce using rule 153 (register -> C .)
    JNZ             reduce using rule 153 (register -> C .)
    JP              reduce using rule 153 (register -> C .)
    JM              reduce using rule 153 (register -> C .)
    JPE             reduce using rule 153 (register -> C .)
    JPO             reduce using rule 153 (register -> C .)
    CALL            reduce using rule 153 (register -> C .)
    RET             reduce using rule 153 (register -> C .)
    MACHINE         reduce using rule 153 (register -> C .)
    $end            reduce using rule 153 (register -> C .)


state 61

    (154) register -> D .

    COMMA           reduce using rule 154 (register -> D .)
    MOV             reduce using rule 154 (register -> D .)
    LABEL           reduce using rule 154 (register -> D .)
    MVI             reduce using rule 154 (register -> D .)
    LXI             reduce using rule 154 (register -> D .)
    LDAX            reduce using rule 154 (register -> D .)
    STAX            reduce using rule 154 (register -> D .)
    LDA             reduce using rule 154 (register -> D .)
    STA             reduce using rule 154 (register -> D .)
    LHLD            reduce using rule 154 (register -> D .)
    SHLD            reduce using rule 154 (register -> D .)
    XCHG            reduce using rule 154 (register -> D .)
    ADD             reduce using rule 154 (register -> D .)
    ADI             reduce using rule 154 (register -> D .)
    ADC             reduce using rule 154 (register -> D .)
    ACI             reduce using rule 154 (register -> D .)
    SUB             reduce using rule 154 (register -> D .)
    SUI             reduce using rule 154 (register -> D .)
    SBB             reduce using rule 154 (register -> D .)
    SBI             reduce using rule 154 (register -> D .)
    INR             reduce using rule 154 (register -> D .)
    DCR             reduce using rule 154 (register -> D .)
    INX             reduce using rule 154 (register -> D .)
    DCX             reduce using rule 154 (register -> D .)
    DAD             reduce using rule 154 (register -> D .)
    ANA             reduce using rule 154 (register -> D .)
    ORA             reduce using rule 154 (register -> D .)
    XRA             reduce using rule 154 (register -> D .)
    ANI             reduce using rule 154 (register -> D .)
    ORI             reduce using rule 154 (register -> D .)
    XRI             reduce using rule 154 (register -> D .)
    CMA             reduce using rule 154 (register -> D .)
    RLC             reduce using rule 154 (register -> D .)
    RAL             reduce using rule 154 (register -> D .)
    RRC             reduce using rule 154 (register -> D .)
    RAR             reduce using rule 154 (register -> D .)
    CMP             reduce using rule 154 (register -> D .)
    CPI             reduce using rule 154 (register -> D .)
    CMC             reduce using rule 154 (register -> D .)
    STC             reduce using rule 154 (register -> D .)
    DAA             reduce using rule 154 (register -> D .)
    JMP             reduce using rule 154 (register -> D .)
    JC              reduce using rule 154 (register -> D .)
    JNC             reduce using rule 154 (register -> D .)
    JZ              reduce using rule 154 (register -> D .)
    JNZ             reduce using rule 154 (register -> D .)
    JP              reduce using rule 154 (register -> D .)
    JM              reduce using rule 154 (register -> D .)
    JPE             reduce using rule 154 (register -> D .)
    JPO             reduce using rule 154 (register -> D .)
    CALL            reduce using rule 154 (register -> D .)
    RET             reduce using rule 154 (register -> D .)
    MACHINE         reduce using rule 154 (register -> D .)
    $end            reduce using rule 154 (register -> D .)


state 62

    (155) register -> E .

    COMMA           reduce using rule 155 (register -> E .)
    MOV             reduce using rule 155 (register -> E .)
    LABEL           reduce using rule 155 (register -> E .)
    MVI             reduce using rule 155 (register -> E .)
    LXI             reduce using rule 155 (register -> E .)
    LDAX            reduce using rule 155 (register -> E .)
    STAX            reduce using rule 155 (register -> E .)
    LDA             reduce using rule 155 (register -> E .)
    STA             reduce using rule 155 (register -> E .)
    LHLD            reduce using rule 155 (register -> E .)
    SHLD            reduce using rule 155 (register -> E .)
    XCHG            reduce using rule 155 (register -> E .)
    ADD             reduce using rule 155 (register -> E .)
    ADI             reduce using rule 155 (register -> E .)
    ADC             reduce using rule 155 (register -> E .)
    ACI             reduce using rule 155 (register -> E .)
    SUB             reduce using rule 155 (register -> E .)
    SUI             reduce using rule 155 (register -> E .)
    SBB             reduce using rule 155 (register -> E .)
    SBI             reduce using rule 155 (register -> E .)
    INR             reduce using rule 155 (register -> E .)
    DCR             reduce using rule 155 (register -> E .)
    INX             reduce using rule 155 (register -> E .)
    DCX             reduce using rule 155 (register -> E .)
    DAD             reduce using rule 155 (register -> E .)
    ANA             reduce using rule 155 (register -> E .)
    ORA             reduce using rule 155 (register -> E .)
    XRA             reduce using rule 155 (register -> E .)
    ANI             reduce using rule 155 (register -> E .)
    ORI             reduce using rule 155 (register -> E .)
    XRI             reduce using rule 155 (register -> E .)
    CMA             reduce using rule 155 (register -> E .)
    RLC             reduce using rule 155 (register -> E .)
    RAL             reduce using rule 155 (register -> E .)
    RRC             reduce using rule 155 (register -> E .)
    RAR             reduce using rule 155 (register -> E .)
    CMP             reduce using rule 155 (register -> E .)
    CPI             reduce using rule 155 (register -> E .)
    CMC             reduce using rule 155 (register -> E .)
    STC             reduce using rule 155 (register -> E .)
    DAA             reduce using rule 155 (register -> E .)
    JMP             reduce using rule 155 (register -> E .)
    JC              reduce using rule 155 (register -> E .)
    JNC             reduce using rule 155 (register -> E .)
    JZ              reduce using rule 155 (register -> E .)
    JNZ             reduce using rule 155 (register -> E .)
    JP              reduce using rule 155 (register -> E .)
    JM              reduce using rule 155 (register -> E .)
    JPE             reduce using rule 155 (register -> E .)
    JPO             reduce using rule 155 (register -> E .)
    CALL            reduce using rule 155 (register -> E .)
    RET             reduce using rule 155 (register -> E .)
    MACHINE         reduce using rule 155 (register -> E .)
    $end            reduce using rule 155 (register -> E .)


state 63

    (156) register -> H .

    COMMA           reduce using rule 156 (register -> H .)
    MOV             reduce using rule 156 (register -> H .)
    LABEL           reduce using rule 156 (register -> H .)
    MVI             reduce using rule 156 (register -> H .)
    LXI             reduce using rule 156 (register -> H .)
    LDAX            reduce using rule 156 (register -> H .)
    STAX            reduce using rule 156 (register -> H .)
    LDA             reduce using rule 156 (register -> H .)
    STA             reduce using rule 156 (register -> H .)
    LHLD            reduce using rule 156 (register -> H .)
    SHLD            reduce using rule 156 (register -> H .)
    XCHG            reduce using rule 156 (register -> H .)
    ADD             reduce using rule 156 (register -> H .)
    ADI             reduce using rule 156 (register -> H .)
    ADC             reduce using rule 156 (register -> H .)
    ACI             reduce using rule 156 (register -> H .)
    SUB             reduce using rule 156 (register -> H .)
    SUI             reduce using rule 156 (register -> H .)
    SBB             reduce using rule 156 (register -> H .)
    SBI             reduce using rule 156 (register -> H .)
    INR             reduce using rule 156 (register -> H .)
    DCR             reduce using rule 156 (register -> H .)
    INX             reduce using rule 156 (register -> H .)
    DCX             reduce using rule 156 (register -> H .)
    DAD             reduce using rule 156 (register -> H .)
    ANA             reduce using rule 156 (register -> H .)
    ORA             reduce using rule 156 (register -> H .)
    XRA             reduce using rule 156 (register -> H .)
    ANI             reduce using rule 156 (register -> H .)
    ORI             reduce using rule 156 (register -> H .)
    XRI             reduce using rule 156 (register -> H .)
    CMA             reduce using rule 156 (register -> H .)
    RLC             reduce using rule 156 (register -> H .)
    RAL             reduce using rule 156 (register -> H .)
    RRC             reduce using rule 156 (register -> H .)
    RAR             reduce using rule 156 (register -> H .)
    CMP             reduce using rule 156 (register -> H .)
    CPI             reduce using rule 156 (register -> H .)
    CMC             reduce using rule 156 (register -> H .)
    STC             reduce using rule 156 (register -> H .)
    DAA             reduce using rule 156 (register -> H .)
    JMP             reduce using rule 156 (register -> H .)
    JC              reduce using rule 156 (register -> H .)
    JNC             reduce using rule 156 (register -> H .)
    JZ              reduce using rule 156 (register -> H .)
    JNZ             reduce using rule 156 (register -> H .)
    JP              reduce using rule 156 (register -> H .)
    JM              reduce using rule 156 (register -> H .)
    JPE             reduce using rule 156 (register -> H .)
    JPO             reduce using rule 156 (register -> H .)
    CALL            reduce using rule 156 (register -> H .)
    RET             reduce using rule 156 (register -> H .)
    MACHINE         reduce using rule 156 (register -> H .)
    $end            reduce using rule 156 (register -> H .)


state 64

    (157) register -> L .

    COMMA           reduce using rule 157 (register -> L .)
    MOV             reduce using rule 157 (register -> L .)
    LABEL           reduce using rule 157 (register -> L .)
    MVI             reduce using rule 157 (register -> L .)
    LXI             reduce using rule 157 (register -> L .)
    LDAX            reduce using rule 157 (register -> L .)
    STAX            reduce using rule 157 (register -> L .)
    LDA             reduce using rule 157 (register -> L .)
    STA             reduce using rule 157 (register -> L .)
    LHLD            reduce using rule 157 (register -> L .)
    SHLD            reduce using rule 157 (register -> L .)
    XCHG            reduce using rule 157 (register -> L .)
    ADD             reduce using rule 157 (register -> L .)
    ADI             reduce using rule 157 (register -> L .)
    ADC             reduce using rule 157 (register -> L .)
    ACI             reduce using rule 157 (register -> L .)
    SUB             reduce using rule 157 (register -> L .)
    SUI             reduce using rule 157 (register -> L .)
    SBB             reduce using rule 157 (register -> L .)
    SBI             reduce using rule 157 (register -> L .)
    INR             reduce using rule 157 (register -> L .)
    DCR             reduce using rule 157 (register -> L .)
    INX             reduce using rule 157 (register -> L .)
    DCX             reduce using rule 157 (register -> L .)
    DAD             reduce using rule 157 (register -> L .)
    ANA             reduce using rule 157 (register -> L .)
    ORA             reduce using rule 157 (register -> L .)
    XRA             reduce using rule 157 (register -> L .)
    ANI             reduce using rule 157 (register -> L .)
    ORI             reduce using rule 157 (register -> L .)
    XRI             reduce using rule 157 (register -> L .)
    CMA             reduce using rule 157 (register -> L .)
    RLC             reduce using rule 157 (register -> L .)
    RAL             reduce using rule 157 (register -> L .)
    RRC             reduce using rule 157 (register -> L .)
    RAR             reduce using rule 157 (register -> L .)
    CMP             reduce using rule 157 (register -> L .)
    CPI             reduce using rule 157 (register -> L .)
    CMC             reduce using rule 157 (register -> L .)
    STC             reduce using rule 157 (register -> L .)
    DAA             reduce using rule 157 (register -> L .)
    JMP             reduce using rule 157 (register -> L .)
    JC              reduce using rule 157 (register -> L .)
    JNC             reduce using rule 157 (register -> L .)
    JZ              reduce using rule 157 (register -> L .)
    JNZ             reduce using rule 157 (register -> L .)
    JP              reduce using rule 157 (register -> L .)
    JM              reduce using rule 157 (register -> L .)
    JPE             reduce using rule 157 (register -> L .)
    JPO             reduce using rule 157 (register -> L .)
    CALL            reduce using rule 157 (register -> L .)
    RET             reduce using rule 157 (register -> L .)
    MACHINE         reduce using rule 157 (register -> L .)
    $end            reduce using rule 157 (register -> L .)


state 65

    (158) memory -> M .

    COMMA           reduce using rule 158 (memory -> M .)
    MOV             reduce using rule 158 (memory -> M .)
    LABEL           reduce using rule 158 (memory -> M .)
    MVI             reduce using rule 158 (memory -> M .)
    LXI             reduce using rule 158 (memory -> M .)
    LDAX            reduce using rule 158 (memory -> M .)
    STAX            reduce using rule 158 (memory -> M .)
    LDA             reduce using rule 158 (memory -> M .)
    STA             reduce using rule 158 (memory -> M .)
    LHLD            reduce using rule 158 (memory -> M .)
    SHLD            reduce using rule 158 (memory -> M .)
    XCHG            reduce using rule 158 (memory -> M .)
    ADD             reduce using rule 158 (memory -> M .)
    ADI             reduce using rule 158 (memory -> M .)
    ADC             reduce using rule 158 (memory -> M .)
    ACI             reduce using rule 158 (memory -> M .)
    SUB             reduce using rule 158 (memory -> M .)
    SUI             reduce using rule 158 (memory -> M .)
    SBB             reduce using rule 158 (memory -> M .)
    SBI             reduce using rule 158 (memory -> M .)
    INR             reduce using rule 158 (memory -> M .)
    DCR             reduce using rule 158 (memory -> M .)
    INX             reduce using rule 158 (memory -> M .)
    DCX             reduce using rule 158 (memory -> M .)
    DAD             reduce using rule 158 (memory -> M .)
    ANA             reduce using rule 158 (memory -> M .)
    ORA             reduce using rule 158 (memory -> M .)
    XRA             reduce using rule 158 (memory -> M .)
    ANI             reduce using rule 158 (memory -> M .)
    ORI             reduce using rule 158 (memory -> M .)
    XRI             reduce using rule 158 (memory -> M .)
    CMA             reduce using rule 158 (memory -> M .)
    RLC             reduce using rule 158 (memory -> M .)
    RAL             reduce using rule 158 (memory -> M .)
    RRC             reduce using rule 158 (memory -> M .)
    RAR             reduce using rule 158 (memory -> M .)
    CMP             reduce using rule 158 (memory -> M .)
    CPI             reduce using rule 158 (memory -> M .)
    CMC             reduce using rule 158 (memory -> M .)
    STC             reduce using rule 158 (memory -> M .)
    DAA             reduce using rule 158 (memory -> M .)
    JMP             reduce using rule 158 (memory -> M .)
    JC              reduce using rule 158 (memory -> M .)
    JNC             reduce using rule 158 (memory -> M .)
    JZ              reduce using rule 158 (memory -> M .)
    JNZ             reduce using rule 158 (memory -> M .)
    JP              reduce using rule 158 (memory -> M .)
    JM              reduce using rule 158 (memory -> M .)
    JPE             reduce using rule 158 (memory -> M .)
    JPO             reduce using rule 158 (memory -> M .)
    CALL            reduce using rule 158 (memory -> M .)
    RET             reduce using rule 158 (memory -> M .)
    MACHINE         reduce using rule 158 (memory -> M .)
    $end            reduce using rule 158 (memory -> M .)


state 66

    (6) statement -> LABEL COLON . MOV register COMMA register
    (7) statement -> LABEL COLON . MOV register COMMA memory
    (8) statement -> LABEL COLON . MOV memory COMMA register
    (11) statement -> LABEL COLON . MVI register COMMA byte_8
    (12) statement -> LABEL COLON . MVI memory COMMA byte_8
    (14) statement -> LABEL COLON . LXI register_pair_3 COMMA byte_16
    (16) statement -> LABEL COLON . LDAX register_pair_2
    (18) statement -> LABEL COLON . STAX register_pair_2
    (20) statement -> LABEL COLON . LDA byte_16
    (22) statement -> LABEL COLON . STA byte_16
    (24) statement -> LABEL COLON . LHLD byte_16
    (26) statement -> LABEL COLON . SHLD byte_16
    (28) statement -> LABEL COLON . XCHG
    (31) statement -> LABEL COLON . ADD register
    (32) statement -> LABEL COLON . ADD memory
    (34) statement -> LABEL COLON . ADI byte_8
    (37) statement -> LABEL COLON . ADC register
    (38) statement -> LABEL COLON . ADC memory
    (40) statement -> LABEL COLON . ACI byte_8
    (43) statement -> LABEL COLON . SUB register
    (44) statement -> LABEL COLON . SUB memory
    (46) statement -> LABEL COLON . SUI byte_8
    (49) statement -> LABEL COLON . SBB register
    (50) statement -> LABEL COLON . SBB memory
    (52) statement -> LABEL COLON . SBI byte_8
    (55) statement -> LABEL COLON . INR register
    (56) statement -> LABEL COLON . INR memory
    (59) statement -> LABEL COLON . DCR register
    (60) statement -> LABEL COLON . DCR memory
    (62) statement -> LABEL COLON . INX register_pair_3
    (64) statement -> LABEL COLON . DCX register_pair_3
    (66) statement -> LABEL COLON . DAD register_pair_3
    (69) statement -> LABEL COLON . ANA register
    (70) statement -> LABEL COLON . ANA memory
    (73) statement -> LABEL COLON . ORA register
    (74) statement -> LABEL COLON . ORA memory
    (77) statement -> LABEL COLON . XRA register
    (78) statement -> LABEL COLON . XRA memory
    (80) statement -> LABEL COLON . ANI byte_8
    (82) statement -> LABEL COLON . ORI byte_8
    (84) statement -> LABEL COLON . XRI byte_8
    (86) statement -> LABEL COLON . CMA
    (88) statement -> LABEL COLON . RLC
    (90) statement -> LABEL COLON . RAL
    (92) statement -> LABEL COLON . RRC
    (94) statement -> LABEL COLON . RAR
    (97) statement -> LABEL COLON . CMP register
    (98) statement -> LABEL COLON . CMP memory
    (100) statement -> LABEL COLON . CPI byte_8
    (102) statement -> LABEL COLON . CMC
    (104) statement -> LABEL COLON . STC
    (106) statement -> LABEL COLON . DAA
    (109) statement -> LABEL COLON . JMP byte_16
    (110) statement -> LABEL COLON . JMP LABEL
    (113) statement -> LABEL COLON . JC byte_16
    (114) statement -> LABEL COLON . JC LABEL
    (117) statement -> LABEL COLON . JNC byte_16
    (118) statement -> LABEL COLON . JNC LABEL
    (121) statement -> LABEL COLON . JZ byte_16
    (122) statement -> LABEL COLON . JZ LABEL
    (125) statement -> LABEL COLON . JNZ byte_16
    (126) statement -> LABEL COLON . JNZ LABEL
    (129) statement -> LABEL COLON . JP byte_16
    (130) statement -> LABEL COLON . JP LABEL
    (133) statement -> LABEL COLON . JM byte_16
    (134) statement -> LABEL COLON . JM LABEL
    (137) statement -> LABEL COLON . JPE byte_16
    (138) statement -> LABEL COLON . JPE LABEL
    (141) statement -> LABEL COLON . JPO byte_16
    (142) statement -> LABEL COLON . JPO LABEL
    (145) statement -> LABEL COLON . CALL byte_16
    (146) statement -> LABEL COLON . CALL LABEL
    (148) statement -> LABEL COLON . RET
    (150) statement -> LABEL COLON . MACHINE

    MOV             shift and go to state 136
    MVI             shift and go to state 137
    LXI             shift and go to state 138
    LDAX            shift and go to state 139
    STAX            shift and go to state 140
    LDA             shift and go to state 141
    STA             shift and go to state 142
    LHLD            shift and go to state 143
    SHLD            shift and go to state 144
    XCHG            shift and go to state 145
    ADD             shift and go to state 146
    ADI             shift and go to state 147
    ADC             shift and go to state 148
    ACI             shift and go to state 149
    SUB             shift and go to state 150
    SUI             shift and go to state 151
    SBB             shift and go to state 152
    SBI             shift and go to state 153
    INR             shift and go to state 154
    DCR             shift and go to state 155
    INX             shift and go to state 156
    DCX             shift and go to state 157
    DAD             shift and go to state 158
    ANA             shift and go to state 159
    ORA             shift and go to state 160
    XRA             shift and go to state 161
    ANI             shift and go to state 162
    ORI             shift and go to state 163
    XRI             shift and go to state 164
    CMA             shift and go to state 165
    RLC             shift and go to state 166
    RAL             shift and go to state 167
    RRC             shift and go to state 168
    RAR             shift and go to state 169
    CMP             shift and go to state 170
    CPI             shift and go to state 171
    CMC             shift and go to state 172
    STC             shift and go to state 173
    DAA             shift and go to state 174
    JMP             shift and go to state 175
    JC              shift and go to state 176
    JNC             shift and go to state 177
    JZ              shift and go to state 178
    JNZ             shift and go to state 179
    JP              shift and go to state 180
    JM              shift and go to state 181
    JPE             shift and go to state 182
    JPO             shift and go to state 183
    CALL            shift and go to state 184
    RET             shift and go to state 185
    MACHINE         shift and go to state 186


state 67

    (9) statement -> MVI register . COMMA byte_8

    COMMA           shift and go to state 187


state 68

    (10) statement -> MVI memory . COMMA byte_8

    COMMA           shift and go to state 188


state 69

    (13) statement -> LXI register_pair_3 . COMMA byte_16

    COMMA           shift and go to state 189


state 70

    (161) register_pair_3 -> B .

    COMMA           reduce using rule 161 (register_pair_3 -> B .)
    MOV             reduce using rule 161 (register_pair_3 -> B .)
    LABEL           reduce using rule 161 (register_pair_3 -> B .)
    MVI             reduce using rule 161 (register_pair_3 -> B .)
    LXI             reduce using rule 161 (register_pair_3 -> B .)
    LDAX            reduce using rule 161 (register_pair_3 -> B .)
    STAX            reduce using rule 161 (register_pair_3 -> B .)
    LDA             reduce using rule 161 (register_pair_3 -> B .)
    STA             reduce using rule 161 (register_pair_3 -> B .)
    LHLD            reduce using rule 161 (register_pair_3 -> B .)
    SHLD            reduce using rule 161 (register_pair_3 -> B .)
    XCHG            reduce using rule 161 (register_pair_3 -> B .)
    ADD             reduce using rule 161 (register_pair_3 -> B .)
    ADI             reduce using rule 161 (register_pair_3 -> B .)
    ADC             reduce using rule 161 (register_pair_3 -> B .)
    ACI             reduce using rule 161 (register_pair_3 -> B .)
    SUB             reduce using rule 161 (register_pair_3 -> B .)
    SUI             reduce using rule 161 (register_pair_3 -> B .)
    SBB             reduce using rule 161 (register_pair_3 -> B .)
    SBI             reduce using rule 161 (register_pair_3 -> B .)
    INR             reduce using rule 161 (register_pair_3 -> B .)
    DCR             reduce using rule 161 (register_pair_3 -> B .)
    INX             reduce using rule 161 (register_pair_3 -> B .)
    DCX             reduce using rule 161 (register_pair_3 -> B .)
    DAD             reduce using rule 161 (register_pair_3 -> B .)
    ANA             reduce using rule 161 (register_pair_3 -> B .)
    ORA             reduce using rule 161 (register_pair_3 -> B .)
    XRA             reduce using rule 161 (register_pair_3 -> B .)
    ANI             reduce using rule 161 (register_pair_3 -> B .)
    ORI             reduce using rule 161 (register_pair_3 -> B .)
    XRI             reduce using rule 161 (register_pair_3 -> B .)
    CMA             reduce using rule 161 (register_pair_3 -> B .)
    RLC             reduce using rule 161 (register_pair_3 -> B .)
    RAL             reduce using rule 161 (register_pair_3 -> B .)
    RRC             reduce using rule 161 (register_pair_3 -> B .)
    RAR             reduce using rule 161 (register_pair_3 -> B .)
    CMP             reduce using rule 161 (register_pair_3 -> B .)
    CPI             reduce using rule 161 (register_pair_3 -> B .)
    CMC             reduce using rule 161 (register_pair_3 -> B .)
    STC             reduce using rule 161 (register_pair_3 -> B .)
    DAA             reduce using rule 161 (register_pair_3 -> B .)
    JMP             reduce using rule 161 (register_pair_3 -> B .)
    JC              reduce using rule 161 (register_pair_3 -> B .)
    JNC             reduce using rule 161 (register_pair_3 -> B .)
    JZ              reduce using rule 161 (register_pair_3 -> B .)
    JNZ             reduce using rule 161 (register_pair_3 -> B .)
    JP              reduce using rule 161 (register_pair_3 -> B .)
    JM              reduce using rule 161 (register_pair_3 -> B .)
    JPE             reduce using rule 161 (register_pair_3 -> B .)
    JPO             reduce using rule 161 (register_pair_3 -> B .)
    CALL            reduce using rule 161 (register_pair_3 -> B .)
    RET             reduce using rule 161 (register_pair_3 -> B .)
    MACHINE         reduce using rule 161 (register_pair_3 -> B .)
    $end            reduce using rule 161 (register_pair_3 -> B .)


state 71

    (162) register_pair_3 -> D .

    COMMA           reduce using rule 162 (register_pair_3 -> D .)
    MOV             reduce using rule 162 (register_pair_3 -> D .)
    LABEL           reduce using rule 162 (register_pair_3 -> D .)
    MVI             reduce using rule 162 (register_pair_3 -> D .)
    LXI             reduce using rule 162 (register_pair_3 -> D .)
    LDAX            reduce using rule 162 (register_pair_3 -> D .)
    STAX            reduce using rule 162 (register_pair_3 -> D .)
    LDA             reduce using rule 162 (register_pair_3 -> D .)
    STA             reduce using rule 162 (register_pair_3 -> D .)
    LHLD            reduce using rule 162 (register_pair_3 -> D .)
    SHLD            reduce using rule 162 (register_pair_3 -> D .)
    XCHG            reduce using rule 162 (register_pair_3 -> D .)
    ADD             reduce using rule 162 (register_pair_3 -> D .)
    ADI             reduce using rule 162 (register_pair_3 -> D .)
    ADC             reduce using rule 162 (register_pair_3 -> D .)
    ACI             reduce using rule 162 (register_pair_3 -> D .)
    SUB             reduce using rule 162 (register_pair_3 -> D .)
    SUI             reduce using rule 162 (register_pair_3 -> D .)
    SBB             reduce using rule 162 (register_pair_3 -> D .)
    SBI             reduce using rule 162 (register_pair_3 -> D .)
    INR             reduce using rule 162 (register_pair_3 -> D .)
    DCR             reduce using rule 162 (register_pair_3 -> D .)
    INX             reduce using rule 162 (register_pair_3 -> D .)
    DCX             reduce using rule 162 (register_pair_3 -> D .)
    DAD             reduce using rule 162 (register_pair_3 -> D .)
    ANA             reduce using rule 162 (register_pair_3 -> D .)
    ORA             reduce using rule 162 (register_pair_3 -> D .)
    XRA             reduce using rule 162 (register_pair_3 -> D .)
    ANI             reduce using rule 162 (register_pair_3 -> D .)
    ORI             reduce using rule 162 (register_pair_3 -> D .)
    XRI             reduce using rule 162 (register_pair_3 -> D .)
    CMA             reduce using rule 162 (register_pair_3 -> D .)
    RLC             reduce using rule 162 (register_pair_3 -> D .)
    RAL             reduce using rule 162 (register_pair_3 -> D .)
    RRC             reduce using rule 162 (register_pair_3 -> D .)
    RAR             reduce using rule 162 (register_pair_3 -> D .)
    CMP             reduce using rule 162 (register_pair_3 -> D .)
    CPI             reduce using rule 162 (register_pair_3 -> D .)
    CMC             reduce using rule 162 (register_pair_3 -> D .)
    STC             reduce using rule 162 (register_pair_3 -> D .)
    DAA             reduce using rule 162 (register_pair_3 -> D .)
    JMP             reduce using rule 162 (register_pair_3 -> D .)
    JC              reduce using rule 162 (register_pair_3 -> D .)
    JNC             reduce using rule 162 (register_pair_3 -> D .)
    JZ              reduce using rule 162 (register_pair_3 -> D .)
    JNZ             reduce using rule 162 (register_pair_3 -> D .)
    JP              reduce using rule 162 (register_pair_3 -> D .)
    JM              reduce using rule 162 (register_pair_3 -> D .)
    JPE             reduce using rule 162 (register_pair_3 -> D .)
    JPO             reduce using rule 162 (register_pair_3 -> D .)
    CALL            reduce using rule 162 (register_pair_3 -> D .)
    RET             reduce using rule 162 (register_pair_3 -> D .)
    MACHINE         reduce using rule 162 (register_pair_3 -> D .)
    $end            reduce using rule 162 (register_pair_3 -> D .)


state 72

    (163) register_pair_3 -> H .

    COMMA           reduce using rule 163 (register_pair_3 -> H .)
    MOV             reduce using rule 163 (register_pair_3 -> H .)
    LABEL           reduce using rule 163 (register_pair_3 -> H .)
    MVI             reduce using rule 163 (register_pair_3 -> H .)
    LXI             reduce using rule 163 (register_pair_3 -> H .)
    LDAX            reduce using rule 163 (register_pair_3 -> H .)
    STAX            reduce using rule 163 (register_pair_3 -> H .)
    LDA             reduce using rule 163 (register_pair_3 -> H .)
    STA             reduce using rule 163 (register_pair_3 -> H .)
    LHLD            reduce using rule 163 (register_pair_3 -> H .)
    SHLD            reduce using rule 163 (register_pair_3 -> H .)
    XCHG            reduce using rule 163 (register_pair_3 -> H .)
    ADD             reduce using rule 163 (register_pair_3 -> H .)
    ADI             reduce using rule 163 (register_pair_3 -> H .)
    ADC             reduce using rule 163 (register_pair_3 -> H .)
    ACI             reduce using rule 163 (register_pair_3 -> H .)
    SUB             reduce using rule 163 (register_pair_3 -> H .)
    SUI             reduce using rule 163 (register_pair_3 -> H .)
    SBB             reduce using rule 163 (register_pair_3 -> H .)
    SBI             reduce using rule 163 (register_pair_3 -> H .)
    INR             reduce using rule 163 (register_pair_3 -> H .)
    DCR             reduce using rule 163 (register_pair_3 -> H .)
    INX             reduce using rule 163 (register_pair_3 -> H .)
    DCX             reduce using rule 163 (register_pair_3 -> H .)
    DAD             reduce using rule 163 (register_pair_3 -> H .)
    ANA             reduce using rule 163 (register_pair_3 -> H .)
    ORA             reduce using rule 163 (register_pair_3 -> H .)
    XRA             reduce using rule 163 (register_pair_3 -> H .)
    ANI             reduce using rule 163 (register_pair_3 -> H .)
    ORI             reduce using rule 163 (register_pair_3 -> H .)
    XRI             reduce using rule 163 (register_pair_3 -> H .)
    CMA             reduce using rule 163 (register_pair_3 -> H .)
    RLC             reduce using rule 163 (register_pair_3 -> H .)
    RAL             reduce using rule 163 (register_pair_3 -> H .)
    RRC             reduce using rule 163 (register_pair_3 -> H .)
    RAR             reduce using rule 163 (register_pair_3 -> H .)
    CMP             reduce using rule 163 (register_pair_3 -> H .)
    CPI             reduce using rule 163 (register_pair_3 -> H .)
    CMC             reduce using rule 163 (register_pair_3 -> H .)
    STC             reduce using rule 163 (register_pair_3 -> H .)
    DAA             reduce using rule 163 (register_pair_3 -> H .)
    JMP             reduce using rule 163 (register_pair_3 -> H .)
    JC              reduce using rule 163 (register_pair_3 -> H .)
    JNC             reduce using rule 163 (register_pair_3 -> H .)
    JZ              reduce using rule 163 (register_pair_3 -> H .)
    JNZ             reduce using rule 163 (register_pair_3 -> H .)
    JP              reduce using rule 163 (register_pair_3 -> H .)
    JM              reduce using rule 163 (register_pair_3 -> H .)
    JPE             reduce using rule 163 (register_pair_3 -> H .)
    JPO             reduce using rule 163 (register_pair_3 -> H .)
    CALL            reduce using rule 163 (register_pair_3 -> H .)
    RET             reduce using rule 163 (register_pair_3 -> H .)
    MACHINE         reduce using rule 163 (register_pair_3 -> H .)
    $end            reduce using rule 163 (register_pair_3 -> H .)


state 73

    (15) statement -> LDAX register_pair_2 .

    MOV             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    LABEL           reduce using rule 15 (statement -> LDAX register_pair_2 .)
    MVI             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    LXI             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    LDAX            reduce using rule 15 (statement -> LDAX register_pair_2 .)
    STAX            reduce using rule 15 (statement -> LDAX register_pair_2 .)
    LDA             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    STA             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    LHLD            reduce using rule 15 (statement -> LDAX register_pair_2 .)
    SHLD            reduce using rule 15 (statement -> LDAX register_pair_2 .)
    XCHG            reduce using rule 15 (statement -> LDAX register_pair_2 .)
    ADD             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    ADI             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    ADC             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    ACI             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    SUB             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    SUI             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    SBB             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    SBI             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    INR             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    DCR             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    INX             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    DCX             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    DAD             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    ANA             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    ORA             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    XRA             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    ANI             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    ORI             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    XRI             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    CMA             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    RLC             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    RAL             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    RRC             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    RAR             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    CMP             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    CPI             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    CMC             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    STC             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    DAA             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    JMP             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    JC              reduce using rule 15 (statement -> LDAX register_pair_2 .)
    JNC             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    JZ              reduce using rule 15 (statement -> LDAX register_pair_2 .)
    JNZ             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    JP              reduce using rule 15 (statement -> LDAX register_pair_2 .)
    JM              reduce using rule 15 (statement -> LDAX register_pair_2 .)
    JPE             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    JPO             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    CALL            reduce using rule 15 (statement -> LDAX register_pair_2 .)
    RET             reduce using rule 15 (statement -> LDAX register_pair_2 .)
    MACHINE         reduce using rule 15 (statement -> LDAX register_pair_2 .)
    $end            reduce using rule 15 (statement -> LDAX register_pair_2 .)


state 74

    (159) register_pair_2 -> B .

    MOV             reduce using rule 159 (register_pair_2 -> B .)
    LABEL           reduce using rule 159 (register_pair_2 -> B .)
    MVI             reduce using rule 159 (register_pair_2 -> B .)
    LXI             reduce using rule 159 (register_pair_2 -> B .)
    LDAX            reduce using rule 159 (register_pair_2 -> B .)
    STAX            reduce using rule 159 (register_pair_2 -> B .)
    LDA             reduce using rule 159 (register_pair_2 -> B .)
    STA             reduce using rule 159 (register_pair_2 -> B .)
    LHLD            reduce using rule 159 (register_pair_2 -> B .)
    SHLD            reduce using rule 159 (register_pair_2 -> B .)
    XCHG            reduce using rule 159 (register_pair_2 -> B .)
    ADD             reduce using rule 159 (register_pair_2 -> B .)
    ADI             reduce using rule 159 (register_pair_2 -> B .)
    ADC             reduce using rule 159 (register_pair_2 -> B .)
    ACI             reduce using rule 159 (register_pair_2 -> B .)
    SUB             reduce using rule 159 (register_pair_2 -> B .)
    SUI             reduce using rule 159 (register_pair_2 -> B .)
    SBB             reduce using rule 159 (register_pair_2 -> B .)
    SBI             reduce using rule 159 (register_pair_2 -> B .)
    INR             reduce using rule 159 (register_pair_2 -> B .)
    DCR             reduce using rule 159 (register_pair_2 -> B .)
    INX             reduce using rule 159 (register_pair_2 -> B .)
    DCX             reduce using rule 159 (register_pair_2 -> B .)
    DAD             reduce using rule 159 (register_pair_2 -> B .)
    ANA             reduce using rule 159 (register_pair_2 -> B .)
    ORA             reduce using rule 159 (register_pair_2 -> B .)
    XRA             reduce using rule 159 (register_pair_2 -> B .)
    ANI             reduce using rule 159 (register_pair_2 -> B .)
    ORI             reduce using rule 159 (register_pair_2 -> B .)
    XRI             reduce using rule 159 (register_pair_2 -> B .)
    CMA             reduce using rule 159 (register_pair_2 -> B .)
    RLC             reduce using rule 159 (register_pair_2 -> B .)
    RAL             reduce using rule 159 (register_pair_2 -> B .)
    RRC             reduce using rule 159 (register_pair_2 -> B .)
    RAR             reduce using rule 159 (register_pair_2 -> B .)
    CMP             reduce using rule 159 (register_pair_2 -> B .)
    CPI             reduce using rule 159 (register_pair_2 -> B .)
    CMC             reduce using rule 159 (register_pair_2 -> B .)
    STC             reduce using rule 159 (register_pair_2 -> B .)
    DAA             reduce using rule 159 (register_pair_2 -> B .)
    JMP             reduce using rule 159 (register_pair_2 -> B .)
    JC              reduce using rule 159 (register_pair_2 -> B .)
    JNC             reduce using rule 159 (register_pair_2 -> B .)
    JZ              reduce using rule 159 (register_pair_2 -> B .)
    JNZ             reduce using rule 159 (register_pair_2 -> B .)
    JP              reduce using rule 159 (register_pair_2 -> B .)
    JM              reduce using rule 159 (register_pair_2 -> B .)
    JPE             reduce using rule 159 (register_pair_2 -> B .)
    JPO             reduce using rule 159 (register_pair_2 -> B .)
    CALL            reduce using rule 159 (register_pair_2 -> B .)
    RET             reduce using rule 159 (register_pair_2 -> B .)
    MACHINE         reduce using rule 159 (register_pair_2 -> B .)
    $end            reduce using rule 159 (register_pair_2 -> B .)


state 75

    (160) register_pair_2 -> D .

    MOV             reduce using rule 160 (register_pair_2 -> D .)
    LABEL           reduce using rule 160 (register_pair_2 -> D .)
    MVI             reduce using rule 160 (register_pair_2 -> D .)
    LXI             reduce using rule 160 (register_pair_2 -> D .)
    LDAX            reduce using rule 160 (register_pair_2 -> D .)
    STAX            reduce using rule 160 (register_pair_2 -> D .)
    LDA             reduce using rule 160 (register_pair_2 -> D .)
    STA             reduce using rule 160 (register_pair_2 -> D .)
    LHLD            reduce using rule 160 (register_pair_2 -> D .)
    SHLD            reduce using rule 160 (register_pair_2 -> D .)
    XCHG            reduce using rule 160 (register_pair_2 -> D .)
    ADD             reduce using rule 160 (register_pair_2 -> D .)
    ADI             reduce using rule 160 (register_pair_2 -> D .)
    ADC             reduce using rule 160 (register_pair_2 -> D .)
    ACI             reduce using rule 160 (register_pair_2 -> D .)
    SUB             reduce using rule 160 (register_pair_2 -> D .)
    SUI             reduce using rule 160 (register_pair_2 -> D .)
    SBB             reduce using rule 160 (register_pair_2 -> D .)
    SBI             reduce using rule 160 (register_pair_2 -> D .)
    INR             reduce using rule 160 (register_pair_2 -> D .)
    DCR             reduce using rule 160 (register_pair_2 -> D .)
    INX             reduce using rule 160 (register_pair_2 -> D .)
    DCX             reduce using rule 160 (register_pair_2 -> D .)
    DAD             reduce using rule 160 (register_pair_2 -> D .)
    ANA             reduce using rule 160 (register_pair_2 -> D .)
    ORA             reduce using rule 160 (register_pair_2 -> D .)
    XRA             reduce using rule 160 (register_pair_2 -> D .)
    ANI             reduce using rule 160 (register_pair_2 -> D .)
    ORI             reduce using rule 160 (register_pair_2 -> D .)
    XRI             reduce using rule 160 (register_pair_2 -> D .)
    CMA             reduce using rule 160 (register_pair_2 -> D .)
    RLC             reduce using rule 160 (register_pair_2 -> D .)
    RAL             reduce using rule 160 (register_pair_2 -> D .)
    RRC             reduce using rule 160 (register_pair_2 -> D .)
    RAR             reduce using rule 160 (register_pair_2 -> D .)
    CMP             reduce using rule 160 (register_pair_2 -> D .)
    CPI             reduce using rule 160 (register_pair_2 -> D .)
    CMC             reduce using rule 160 (register_pair_2 -> D .)
    STC             reduce using rule 160 (register_pair_2 -> D .)
    DAA             reduce using rule 160 (register_pair_2 -> D .)
    JMP             reduce using rule 160 (register_pair_2 -> D .)
    JC              reduce using rule 160 (register_pair_2 -> D .)
    JNC             reduce using rule 160 (register_pair_2 -> D .)
    JZ              reduce using rule 160 (register_pair_2 -> D .)
    JNZ             reduce using rule 160 (register_pair_2 -> D .)
    JP              reduce using rule 160 (register_pair_2 -> D .)
    JM              reduce using rule 160 (register_pair_2 -> D .)
    JPE             reduce using rule 160 (register_pair_2 -> D .)
    JPO             reduce using rule 160 (register_pair_2 -> D .)
    CALL            reduce using rule 160 (register_pair_2 -> D .)
    RET             reduce using rule 160 (register_pair_2 -> D .)
    MACHINE         reduce using rule 160 (register_pair_2 -> D .)
    $end            reduce using rule 160 (register_pair_2 -> D .)


state 76

    (17) statement -> STAX register_pair_2 .

    MOV             reduce using rule 17 (statement -> STAX register_pair_2 .)
    LABEL           reduce using rule 17 (statement -> STAX register_pair_2 .)
    MVI             reduce using rule 17 (statement -> STAX register_pair_2 .)
    LXI             reduce using rule 17 (statement -> STAX register_pair_2 .)
    LDAX            reduce using rule 17 (statement -> STAX register_pair_2 .)
    STAX            reduce using rule 17 (statement -> STAX register_pair_2 .)
    LDA             reduce using rule 17 (statement -> STAX register_pair_2 .)
    STA             reduce using rule 17 (statement -> STAX register_pair_2 .)
    LHLD            reduce using rule 17 (statement -> STAX register_pair_2 .)
    SHLD            reduce using rule 17 (statement -> STAX register_pair_2 .)
    XCHG            reduce using rule 17 (statement -> STAX register_pair_2 .)
    ADD             reduce using rule 17 (statement -> STAX register_pair_2 .)
    ADI             reduce using rule 17 (statement -> STAX register_pair_2 .)
    ADC             reduce using rule 17 (statement -> STAX register_pair_2 .)
    ACI             reduce using rule 17 (statement -> STAX register_pair_2 .)
    SUB             reduce using rule 17 (statement -> STAX register_pair_2 .)
    SUI             reduce using rule 17 (statement -> STAX register_pair_2 .)
    SBB             reduce using rule 17 (statement -> STAX register_pair_2 .)
    SBI             reduce using rule 17 (statement -> STAX register_pair_2 .)
    INR             reduce using rule 17 (statement -> STAX register_pair_2 .)
    DCR             reduce using rule 17 (statement -> STAX register_pair_2 .)
    INX             reduce using rule 17 (statement -> STAX register_pair_2 .)
    DCX             reduce using rule 17 (statement -> STAX register_pair_2 .)
    DAD             reduce using rule 17 (statement -> STAX register_pair_2 .)
    ANA             reduce using rule 17 (statement -> STAX register_pair_2 .)
    ORA             reduce using rule 17 (statement -> STAX register_pair_2 .)
    XRA             reduce using rule 17 (statement -> STAX register_pair_2 .)
    ANI             reduce using rule 17 (statement -> STAX register_pair_2 .)
    ORI             reduce using rule 17 (statement -> STAX register_pair_2 .)
    XRI             reduce using rule 17 (statement -> STAX register_pair_2 .)
    CMA             reduce using rule 17 (statement -> STAX register_pair_2 .)
    RLC             reduce using rule 17 (statement -> STAX register_pair_2 .)
    RAL             reduce using rule 17 (statement -> STAX register_pair_2 .)
    RRC             reduce using rule 17 (statement -> STAX register_pair_2 .)
    RAR             reduce using rule 17 (statement -> STAX register_pair_2 .)
    CMP             reduce using rule 17 (statement -> STAX register_pair_2 .)
    CPI             reduce using rule 17 (statement -> STAX register_pair_2 .)
    CMC             reduce using rule 17 (statement -> STAX register_pair_2 .)
    STC             reduce using rule 17 (statement -> STAX register_pair_2 .)
    DAA             reduce using rule 17 (statement -> STAX register_pair_2 .)
    JMP             reduce using rule 17 (statement -> STAX register_pair_2 .)
    JC              reduce using rule 17 (statement -> STAX register_pair_2 .)
    JNC             reduce using rule 17 (statement -> STAX register_pair_2 .)
    JZ              reduce using rule 17 (statement -> STAX register_pair_2 .)
    JNZ             reduce using rule 17 (statement -> STAX register_pair_2 .)
    JP              reduce using rule 17 (statement -> STAX register_pair_2 .)
    JM              reduce using rule 17 (statement -> STAX register_pair_2 .)
    JPE             reduce using rule 17 (statement -> STAX register_pair_2 .)
    JPO             reduce using rule 17 (statement -> STAX register_pair_2 .)
    CALL            reduce using rule 17 (statement -> STAX register_pair_2 .)
    RET             reduce using rule 17 (statement -> STAX register_pair_2 .)
    MACHINE         reduce using rule 17 (statement -> STAX register_pair_2 .)
    $end            reduce using rule 17 (statement -> STAX register_pair_2 .)


state 77

    (19) statement -> LDA byte_16 .

    MOV             reduce using rule 19 (statement -> LDA byte_16 .)
    LABEL           reduce using rule 19 (statement -> LDA byte_16 .)
    MVI             reduce using rule 19 (statement -> LDA byte_16 .)
    LXI             reduce using rule 19 (statement -> LDA byte_16 .)
    LDAX            reduce using rule 19 (statement -> LDA byte_16 .)
    STAX            reduce using rule 19 (statement -> LDA byte_16 .)
    LDA             reduce using rule 19 (statement -> LDA byte_16 .)
    STA             reduce using rule 19 (statement -> LDA byte_16 .)
    LHLD            reduce using rule 19 (statement -> LDA byte_16 .)
    SHLD            reduce using rule 19 (statement -> LDA byte_16 .)
    XCHG            reduce using rule 19 (statement -> LDA byte_16 .)
    ADD             reduce using rule 19 (statement -> LDA byte_16 .)
    ADI             reduce using rule 19 (statement -> LDA byte_16 .)
    ADC             reduce using rule 19 (statement -> LDA byte_16 .)
    ACI             reduce using rule 19 (statement -> LDA byte_16 .)
    SUB             reduce using rule 19 (statement -> LDA byte_16 .)
    SUI             reduce using rule 19 (statement -> LDA byte_16 .)
    SBB             reduce using rule 19 (statement -> LDA byte_16 .)
    SBI             reduce using rule 19 (statement -> LDA byte_16 .)
    INR             reduce using rule 19 (statement -> LDA byte_16 .)
    DCR             reduce using rule 19 (statement -> LDA byte_16 .)
    INX             reduce using rule 19 (statement -> LDA byte_16 .)
    DCX             reduce using rule 19 (statement -> LDA byte_16 .)
    DAD             reduce using rule 19 (statement -> LDA byte_16 .)
    ANA             reduce using rule 19 (statement -> LDA byte_16 .)
    ORA             reduce using rule 19 (statement -> LDA byte_16 .)
    XRA             reduce using rule 19 (statement -> LDA byte_16 .)
    ANI             reduce using rule 19 (statement -> LDA byte_16 .)
    ORI             reduce using rule 19 (statement -> LDA byte_16 .)
    XRI             reduce using rule 19 (statement -> LDA byte_16 .)
    CMA             reduce using rule 19 (statement -> LDA byte_16 .)
    RLC             reduce using rule 19 (statement -> LDA byte_16 .)
    RAL             reduce using rule 19 (statement -> LDA byte_16 .)
    RRC             reduce using rule 19 (statement -> LDA byte_16 .)
    RAR             reduce using rule 19 (statement -> LDA byte_16 .)
    CMP             reduce using rule 19 (statement -> LDA byte_16 .)
    CPI             reduce using rule 19 (statement -> LDA byte_16 .)
    CMC             reduce using rule 19 (statement -> LDA byte_16 .)
    STC             reduce using rule 19 (statement -> LDA byte_16 .)
    DAA             reduce using rule 19 (statement -> LDA byte_16 .)
    JMP             reduce using rule 19 (statement -> LDA byte_16 .)
    JC              reduce using rule 19 (statement -> LDA byte_16 .)
    JNC             reduce using rule 19 (statement -> LDA byte_16 .)
    JZ              reduce using rule 19 (statement -> LDA byte_16 .)
    JNZ             reduce using rule 19 (statement -> LDA byte_16 .)
    JP              reduce using rule 19 (statement -> LDA byte_16 .)
    JM              reduce using rule 19 (statement -> LDA byte_16 .)
    JPE             reduce using rule 19 (statement -> LDA byte_16 .)
    JPO             reduce using rule 19 (statement -> LDA byte_16 .)
    CALL            reduce using rule 19 (statement -> LDA byte_16 .)
    RET             reduce using rule 19 (statement -> LDA byte_16 .)
    MACHINE         reduce using rule 19 (statement -> LDA byte_16 .)
    $end            reduce using rule 19 (statement -> LDA byte_16 .)


state 78

    (165) byte_16 -> DIGIT . DIGIT DIGIT DIGIT

    DIGIT           shift and go to state 190


state 79

    (21) statement -> STA byte_16 .

    MOV             reduce using rule 21 (statement -> STA byte_16 .)
    LABEL           reduce using rule 21 (statement -> STA byte_16 .)
    MVI             reduce using rule 21 (statement -> STA byte_16 .)
    LXI             reduce using rule 21 (statement -> STA byte_16 .)
    LDAX            reduce using rule 21 (statement -> STA byte_16 .)
    STAX            reduce using rule 21 (statement -> STA byte_16 .)
    LDA             reduce using rule 21 (statement -> STA byte_16 .)
    STA             reduce using rule 21 (statement -> STA byte_16 .)
    LHLD            reduce using rule 21 (statement -> STA byte_16 .)
    SHLD            reduce using rule 21 (statement -> STA byte_16 .)
    XCHG            reduce using rule 21 (statement -> STA byte_16 .)
    ADD             reduce using rule 21 (statement -> STA byte_16 .)
    ADI             reduce using rule 21 (statement -> STA byte_16 .)
    ADC             reduce using rule 21 (statement -> STA byte_16 .)
    ACI             reduce using rule 21 (statement -> STA byte_16 .)
    SUB             reduce using rule 21 (statement -> STA byte_16 .)
    SUI             reduce using rule 21 (statement -> STA byte_16 .)
    SBB             reduce using rule 21 (statement -> STA byte_16 .)
    SBI             reduce using rule 21 (statement -> STA byte_16 .)
    INR             reduce using rule 21 (statement -> STA byte_16 .)
    DCR             reduce using rule 21 (statement -> STA byte_16 .)
    INX             reduce using rule 21 (statement -> STA byte_16 .)
    DCX             reduce using rule 21 (statement -> STA byte_16 .)
    DAD             reduce using rule 21 (statement -> STA byte_16 .)
    ANA             reduce using rule 21 (statement -> STA byte_16 .)
    ORA             reduce using rule 21 (statement -> STA byte_16 .)
    XRA             reduce using rule 21 (statement -> STA byte_16 .)
    ANI             reduce using rule 21 (statement -> STA byte_16 .)
    ORI             reduce using rule 21 (statement -> STA byte_16 .)
    XRI             reduce using rule 21 (statement -> STA byte_16 .)
    CMA             reduce using rule 21 (statement -> STA byte_16 .)
    RLC             reduce using rule 21 (statement -> STA byte_16 .)
    RAL             reduce using rule 21 (statement -> STA byte_16 .)
    RRC             reduce using rule 21 (statement -> STA byte_16 .)
    RAR             reduce using rule 21 (statement -> STA byte_16 .)
    CMP             reduce using rule 21 (statement -> STA byte_16 .)
    CPI             reduce using rule 21 (statement -> STA byte_16 .)
    CMC             reduce using rule 21 (statement -> STA byte_16 .)
    STC             reduce using rule 21 (statement -> STA byte_16 .)
    DAA             reduce using rule 21 (statement -> STA byte_16 .)
    JMP             reduce using rule 21 (statement -> STA byte_16 .)
    JC              reduce using rule 21 (statement -> STA byte_16 .)
    JNC             reduce using rule 21 (statement -> STA byte_16 .)
    JZ              reduce using rule 21 (statement -> STA byte_16 .)
    JNZ             reduce using rule 21 (statement -> STA byte_16 .)
    JP              reduce using rule 21 (statement -> STA byte_16 .)
    JM              reduce using rule 21 (statement -> STA byte_16 .)
    JPE             reduce using rule 21 (statement -> STA byte_16 .)
    JPO             reduce using rule 21 (statement -> STA byte_16 .)
    CALL            reduce using rule 21 (statement -> STA byte_16 .)
    RET             reduce using rule 21 (statement -> STA byte_16 .)
    MACHINE         reduce using rule 21 (statement -> STA byte_16 .)
    $end            reduce using rule 21 (statement -> STA byte_16 .)


state 80

    (23) statement -> LHLD byte_16 .

    MOV             reduce using rule 23 (statement -> LHLD byte_16 .)
    LABEL           reduce using rule 23 (statement -> LHLD byte_16 .)
    MVI             reduce using rule 23 (statement -> LHLD byte_16 .)
    LXI             reduce using rule 23 (statement -> LHLD byte_16 .)
    LDAX            reduce using rule 23 (statement -> LHLD byte_16 .)
    STAX            reduce using rule 23 (statement -> LHLD byte_16 .)
    LDA             reduce using rule 23 (statement -> LHLD byte_16 .)
    STA             reduce using rule 23 (statement -> LHLD byte_16 .)
    LHLD            reduce using rule 23 (statement -> LHLD byte_16 .)
    SHLD            reduce using rule 23 (statement -> LHLD byte_16 .)
    XCHG            reduce using rule 23 (statement -> LHLD byte_16 .)
    ADD             reduce using rule 23 (statement -> LHLD byte_16 .)
    ADI             reduce using rule 23 (statement -> LHLD byte_16 .)
    ADC             reduce using rule 23 (statement -> LHLD byte_16 .)
    ACI             reduce using rule 23 (statement -> LHLD byte_16 .)
    SUB             reduce using rule 23 (statement -> LHLD byte_16 .)
    SUI             reduce using rule 23 (statement -> LHLD byte_16 .)
    SBB             reduce using rule 23 (statement -> LHLD byte_16 .)
    SBI             reduce using rule 23 (statement -> LHLD byte_16 .)
    INR             reduce using rule 23 (statement -> LHLD byte_16 .)
    DCR             reduce using rule 23 (statement -> LHLD byte_16 .)
    INX             reduce using rule 23 (statement -> LHLD byte_16 .)
    DCX             reduce using rule 23 (statement -> LHLD byte_16 .)
    DAD             reduce using rule 23 (statement -> LHLD byte_16 .)
    ANA             reduce using rule 23 (statement -> LHLD byte_16 .)
    ORA             reduce using rule 23 (statement -> LHLD byte_16 .)
    XRA             reduce using rule 23 (statement -> LHLD byte_16 .)
    ANI             reduce using rule 23 (statement -> LHLD byte_16 .)
    ORI             reduce using rule 23 (statement -> LHLD byte_16 .)
    XRI             reduce using rule 23 (statement -> LHLD byte_16 .)
    CMA             reduce using rule 23 (statement -> LHLD byte_16 .)
    RLC             reduce using rule 23 (statement -> LHLD byte_16 .)
    RAL             reduce using rule 23 (statement -> LHLD byte_16 .)
    RRC             reduce using rule 23 (statement -> LHLD byte_16 .)
    RAR             reduce using rule 23 (statement -> LHLD byte_16 .)
    CMP             reduce using rule 23 (statement -> LHLD byte_16 .)
    CPI             reduce using rule 23 (statement -> LHLD byte_16 .)
    CMC             reduce using rule 23 (statement -> LHLD byte_16 .)
    STC             reduce using rule 23 (statement -> LHLD byte_16 .)
    DAA             reduce using rule 23 (statement -> LHLD byte_16 .)
    JMP             reduce using rule 23 (statement -> LHLD byte_16 .)
    JC              reduce using rule 23 (statement -> LHLD byte_16 .)
    JNC             reduce using rule 23 (statement -> LHLD byte_16 .)
    JZ              reduce using rule 23 (statement -> LHLD byte_16 .)
    JNZ             reduce using rule 23 (statement -> LHLD byte_16 .)
    JP              reduce using rule 23 (statement -> LHLD byte_16 .)
    JM              reduce using rule 23 (statement -> LHLD byte_16 .)
    JPE             reduce using rule 23 (statement -> LHLD byte_16 .)
    JPO             reduce using rule 23 (statement -> LHLD byte_16 .)
    CALL            reduce using rule 23 (statement -> LHLD byte_16 .)
    RET             reduce using rule 23 (statement -> LHLD byte_16 .)
    MACHINE         reduce using rule 23 (statement -> LHLD byte_16 .)
    $end            reduce using rule 23 (statement -> LHLD byte_16 .)


state 81

    (25) statement -> SHLD byte_16 .

    MOV             reduce using rule 25 (statement -> SHLD byte_16 .)
    LABEL           reduce using rule 25 (statement -> SHLD byte_16 .)
    MVI             reduce using rule 25 (statement -> SHLD byte_16 .)
    LXI             reduce using rule 25 (statement -> SHLD byte_16 .)
    LDAX            reduce using rule 25 (statement -> SHLD byte_16 .)
    STAX            reduce using rule 25 (statement -> SHLD byte_16 .)
    LDA             reduce using rule 25 (statement -> SHLD byte_16 .)
    STA             reduce using rule 25 (statement -> SHLD byte_16 .)
    LHLD            reduce using rule 25 (statement -> SHLD byte_16 .)
    SHLD            reduce using rule 25 (statement -> SHLD byte_16 .)
    XCHG            reduce using rule 25 (statement -> SHLD byte_16 .)
    ADD             reduce using rule 25 (statement -> SHLD byte_16 .)
    ADI             reduce using rule 25 (statement -> SHLD byte_16 .)
    ADC             reduce using rule 25 (statement -> SHLD byte_16 .)
    ACI             reduce using rule 25 (statement -> SHLD byte_16 .)
    SUB             reduce using rule 25 (statement -> SHLD byte_16 .)
    SUI             reduce using rule 25 (statement -> SHLD byte_16 .)
    SBB             reduce using rule 25 (statement -> SHLD byte_16 .)
    SBI             reduce using rule 25 (statement -> SHLD byte_16 .)
    INR             reduce using rule 25 (statement -> SHLD byte_16 .)
    DCR             reduce using rule 25 (statement -> SHLD byte_16 .)
    INX             reduce using rule 25 (statement -> SHLD byte_16 .)
    DCX             reduce using rule 25 (statement -> SHLD byte_16 .)
    DAD             reduce using rule 25 (statement -> SHLD byte_16 .)
    ANA             reduce using rule 25 (statement -> SHLD byte_16 .)
    ORA             reduce using rule 25 (statement -> SHLD byte_16 .)
    XRA             reduce using rule 25 (statement -> SHLD byte_16 .)
    ANI             reduce using rule 25 (statement -> SHLD byte_16 .)
    ORI             reduce using rule 25 (statement -> SHLD byte_16 .)
    XRI             reduce using rule 25 (statement -> SHLD byte_16 .)
    CMA             reduce using rule 25 (statement -> SHLD byte_16 .)
    RLC             reduce using rule 25 (statement -> SHLD byte_16 .)
    RAL             reduce using rule 25 (statement -> SHLD byte_16 .)
    RRC             reduce using rule 25 (statement -> SHLD byte_16 .)
    RAR             reduce using rule 25 (statement -> SHLD byte_16 .)
    CMP             reduce using rule 25 (statement -> SHLD byte_16 .)
    CPI             reduce using rule 25 (statement -> SHLD byte_16 .)
    CMC             reduce using rule 25 (statement -> SHLD byte_16 .)
    STC             reduce using rule 25 (statement -> SHLD byte_16 .)
    DAA             reduce using rule 25 (statement -> SHLD byte_16 .)
    JMP             reduce using rule 25 (statement -> SHLD byte_16 .)
    JC              reduce using rule 25 (statement -> SHLD byte_16 .)
    JNC             reduce using rule 25 (statement -> SHLD byte_16 .)
    JZ              reduce using rule 25 (statement -> SHLD byte_16 .)
    JNZ             reduce using rule 25 (statement -> SHLD byte_16 .)
    JP              reduce using rule 25 (statement -> SHLD byte_16 .)
    JM              reduce using rule 25 (statement -> SHLD byte_16 .)
    JPE             reduce using rule 25 (statement -> SHLD byte_16 .)
    JPO             reduce using rule 25 (statement -> SHLD byte_16 .)
    CALL            reduce using rule 25 (statement -> SHLD byte_16 .)
    RET             reduce using rule 25 (statement -> SHLD byte_16 .)
    MACHINE         reduce using rule 25 (statement -> SHLD byte_16 .)
    $end            reduce using rule 25 (statement -> SHLD byte_16 .)


state 82

    (29) statement -> ADD register .

    MOV             reduce using rule 29 (statement -> ADD register .)
    LABEL           reduce using rule 29 (statement -> ADD register .)
    MVI             reduce using rule 29 (statement -> ADD register .)
    LXI             reduce using rule 29 (statement -> ADD register .)
    LDAX            reduce using rule 29 (statement -> ADD register .)
    STAX            reduce using rule 29 (statement -> ADD register .)
    LDA             reduce using rule 29 (statement -> ADD register .)
    STA             reduce using rule 29 (statement -> ADD register .)
    LHLD            reduce using rule 29 (statement -> ADD register .)
    SHLD            reduce using rule 29 (statement -> ADD register .)
    XCHG            reduce using rule 29 (statement -> ADD register .)
    ADD             reduce using rule 29 (statement -> ADD register .)
    ADI             reduce using rule 29 (statement -> ADD register .)
    ADC             reduce using rule 29 (statement -> ADD register .)
    ACI             reduce using rule 29 (statement -> ADD register .)
    SUB             reduce using rule 29 (statement -> ADD register .)
    SUI             reduce using rule 29 (statement -> ADD register .)
    SBB             reduce using rule 29 (statement -> ADD register .)
    SBI             reduce using rule 29 (statement -> ADD register .)
    INR             reduce using rule 29 (statement -> ADD register .)
    DCR             reduce using rule 29 (statement -> ADD register .)
    INX             reduce using rule 29 (statement -> ADD register .)
    DCX             reduce using rule 29 (statement -> ADD register .)
    DAD             reduce using rule 29 (statement -> ADD register .)
    ANA             reduce using rule 29 (statement -> ADD register .)
    ORA             reduce using rule 29 (statement -> ADD register .)
    XRA             reduce using rule 29 (statement -> ADD register .)
    ANI             reduce using rule 29 (statement -> ADD register .)
    ORI             reduce using rule 29 (statement -> ADD register .)
    XRI             reduce using rule 29 (statement -> ADD register .)
    CMA             reduce using rule 29 (statement -> ADD register .)
    RLC             reduce using rule 29 (statement -> ADD register .)
    RAL             reduce using rule 29 (statement -> ADD register .)
    RRC             reduce using rule 29 (statement -> ADD register .)
    RAR             reduce using rule 29 (statement -> ADD register .)
    CMP             reduce using rule 29 (statement -> ADD register .)
    CPI             reduce using rule 29 (statement -> ADD register .)
    CMC             reduce using rule 29 (statement -> ADD register .)
    STC             reduce using rule 29 (statement -> ADD register .)
    DAA             reduce using rule 29 (statement -> ADD register .)
    JMP             reduce using rule 29 (statement -> ADD register .)
    JC              reduce using rule 29 (statement -> ADD register .)
    JNC             reduce using rule 29 (statement -> ADD register .)
    JZ              reduce using rule 29 (statement -> ADD register .)
    JNZ             reduce using rule 29 (statement -> ADD register .)
    JP              reduce using rule 29 (statement -> ADD register .)
    JM              reduce using rule 29 (statement -> ADD register .)
    JPE             reduce using rule 29 (statement -> ADD register .)
    JPO             reduce using rule 29 (statement -> ADD register .)
    CALL            reduce using rule 29 (statement -> ADD register .)
    RET             reduce using rule 29 (statement -> ADD register .)
    MACHINE         reduce using rule 29 (statement -> ADD register .)
    $end            reduce using rule 29 (statement -> ADD register .)


state 83

    (30) statement -> ADD memory .

    MOV             reduce using rule 30 (statement -> ADD memory .)
    LABEL           reduce using rule 30 (statement -> ADD memory .)
    MVI             reduce using rule 30 (statement -> ADD memory .)
    LXI             reduce using rule 30 (statement -> ADD memory .)
    LDAX            reduce using rule 30 (statement -> ADD memory .)
    STAX            reduce using rule 30 (statement -> ADD memory .)
    LDA             reduce using rule 30 (statement -> ADD memory .)
    STA             reduce using rule 30 (statement -> ADD memory .)
    LHLD            reduce using rule 30 (statement -> ADD memory .)
    SHLD            reduce using rule 30 (statement -> ADD memory .)
    XCHG            reduce using rule 30 (statement -> ADD memory .)
    ADD             reduce using rule 30 (statement -> ADD memory .)
    ADI             reduce using rule 30 (statement -> ADD memory .)
    ADC             reduce using rule 30 (statement -> ADD memory .)
    ACI             reduce using rule 30 (statement -> ADD memory .)
    SUB             reduce using rule 30 (statement -> ADD memory .)
    SUI             reduce using rule 30 (statement -> ADD memory .)
    SBB             reduce using rule 30 (statement -> ADD memory .)
    SBI             reduce using rule 30 (statement -> ADD memory .)
    INR             reduce using rule 30 (statement -> ADD memory .)
    DCR             reduce using rule 30 (statement -> ADD memory .)
    INX             reduce using rule 30 (statement -> ADD memory .)
    DCX             reduce using rule 30 (statement -> ADD memory .)
    DAD             reduce using rule 30 (statement -> ADD memory .)
    ANA             reduce using rule 30 (statement -> ADD memory .)
    ORA             reduce using rule 30 (statement -> ADD memory .)
    XRA             reduce using rule 30 (statement -> ADD memory .)
    ANI             reduce using rule 30 (statement -> ADD memory .)
    ORI             reduce using rule 30 (statement -> ADD memory .)
    XRI             reduce using rule 30 (statement -> ADD memory .)
    CMA             reduce using rule 30 (statement -> ADD memory .)
    RLC             reduce using rule 30 (statement -> ADD memory .)
    RAL             reduce using rule 30 (statement -> ADD memory .)
    RRC             reduce using rule 30 (statement -> ADD memory .)
    RAR             reduce using rule 30 (statement -> ADD memory .)
    CMP             reduce using rule 30 (statement -> ADD memory .)
    CPI             reduce using rule 30 (statement -> ADD memory .)
    CMC             reduce using rule 30 (statement -> ADD memory .)
    STC             reduce using rule 30 (statement -> ADD memory .)
    DAA             reduce using rule 30 (statement -> ADD memory .)
    JMP             reduce using rule 30 (statement -> ADD memory .)
    JC              reduce using rule 30 (statement -> ADD memory .)
    JNC             reduce using rule 30 (statement -> ADD memory .)
    JZ              reduce using rule 30 (statement -> ADD memory .)
    JNZ             reduce using rule 30 (statement -> ADD memory .)
    JP              reduce using rule 30 (statement -> ADD memory .)
    JM              reduce using rule 30 (statement -> ADD memory .)
    JPE             reduce using rule 30 (statement -> ADD memory .)
    JPO             reduce using rule 30 (statement -> ADD memory .)
    CALL            reduce using rule 30 (statement -> ADD memory .)
    RET             reduce using rule 30 (statement -> ADD memory .)
    MACHINE         reduce using rule 30 (statement -> ADD memory .)
    $end            reduce using rule 30 (statement -> ADD memory .)


state 84

    (33) statement -> ADI byte_8 .

    MOV             reduce using rule 33 (statement -> ADI byte_8 .)
    LABEL           reduce using rule 33 (statement -> ADI byte_8 .)
    MVI             reduce using rule 33 (statement -> ADI byte_8 .)
    LXI             reduce using rule 33 (statement -> ADI byte_8 .)
    LDAX            reduce using rule 33 (statement -> ADI byte_8 .)
    STAX            reduce using rule 33 (statement -> ADI byte_8 .)
    LDA             reduce using rule 33 (statement -> ADI byte_8 .)
    STA             reduce using rule 33 (statement -> ADI byte_8 .)
    LHLD            reduce using rule 33 (statement -> ADI byte_8 .)
    SHLD            reduce using rule 33 (statement -> ADI byte_8 .)
    XCHG            reduce using rule 33 (statement -> ADI byte_8 .)
    ADD             reduce using rule 33 (statement -> ADI byte_8 .)
    ADI             reduce using rule 33 (statement -> ADI byte_8 .)
    ADC             reduce using rule 33 (statement -> ADI byte_8 .)
    ACI             reduce using rule 33 (statement -> ADI byte_8 .)
    SUB             reduce using rule 33 (statement -> ADI byte_8 .)
    SUI             reduce using rule 33 (statement -> ADI byte_8 .)
    SBB             reduce using rule 33 (statement -> ADI byte_8 .)
    SBI             reduce using rule 33 (statement -> ADI byte_8 .)
    INR             reduce using rule 33 (statement -> ADI byte_8 .)
    DCR             reduce using rule 33 (statement -> ADI byte_8 .)
    INX             reduce using rule 33 (statement -> ADI byte_8 .)
    DCX             reduce using rule 33 (statement -> ADI byte_8 .)
    DAD             reduce using rule 33 (statement -> ADI byte_8 .)
    ANA             reduce using rule 33 (statement -> ADI byte_8 .)
    ORA             reduce using rule 33 (statement -> ADI byte_8 .)
    XRA             reduce using rule 33 (statement -> ADI byte_8 .)
    ANI             reduce using rule 33 (statement -> ADI byte_8 .)
    ORI             reduce using rule 33 (statement -> ADI byte_8 .)
    XRI             reduce using rule 33 (statement -> ADI byte_8 .)
    CMA             reduce using rule 33 (statement -> ADI byte_8 .)
    RLC             reduce using rule 33 (statement -> ADI byte_8 .)
    RAL             reduce using rule 33 (statement -> ADI byte_8 .)
    RRC             reduce using rule 33 (statement -> ADI byte_8 .)
    RAR             reduce using rule 33 (statement -> ADI byte_8 .)
    CMP             reduce using rule 33 (statement -> ADI byte_8 .)
    CPI             reduce using rule 33 (statement -> ADI byte_8 .)
    CMC             reduce using rule 33 (statement -> ADI byte_8 .)
    STC             reduce using rule 33 (statement -> ADI byte_8 .)
    DAA             reduce using rule 33 (statement -> ADI byte_8 .)
    JMP             reduce using rule 33 (statement -> ADI byte_8 .)
    JC              reduce using rule 33 (statement -> ADI byte_8 .)
    JNC             reduce using rule 33 (statement -> ADI byte_8 .)
    JZ              reduce using rule 33 (statement -> ADI byte_8 .)
    JNZ             reduce using rule 33 (statement -> ADI byte_8 .)
    JP              reduce using rule 33 (statement -> ADI byte_8 .)
    JM              reduce using rule 33 (statement -> ADI byte_8 .)
    JPE             reduce using rule 33 (statement -> ADI byte_8 .)
    JPO             reduce using rule 33 (statement -> ADI byte_8 .)
    CALL            reduce using rule 33 (statement -> ADI byte_8 .)
    RET             reduce using rule 33 (statement -> ADI byte_8 .)
    MACHINE         reduce using rule 33 (statement -> ADI byte_8 .)
    $end            reduce using rule 33 (statement -> ADI byte_8 .)


state 85

    (164) byte_8 -> DIGIT . DIGIT

    DIGIT           shift and go to state 191


state 86

    (35) statement -> ADC register .

    MOV             reduce using rule 35 (statement -> ADC register .)
    LABEL           reduce using rule 35 (statement -> ADC register .)
    MVI             reduce using rule 35 (statement -> ADC register .)
    LXI             reduce using rule 35 (statement -> ADC register .)
    LDAX            reduce using rule 35 (statement -> ADC register .)
    STAX            reduce using rule 35 (statement -> ADC register .)
    LDA             reduce using rule 35 (statement -> ADC register .)
    STA             reduce using rule 35 (statement -> ADC register .)
    LHLD            reduce using rule 35 (statement -> ADC register .)
    SHLD            reduce using rule 35 (statement -> ADC register .)
    XCHG            reduce using rule 35 (statement -> ADC register .)
    ADD             reduce using rule 35 (statement -> ADC register .)
    ADI             reduce using rule 35 (statement -> ADC register .)
    ADC             reduce using rule 35 (statement -> ADC register .)
    ACI             reduce using rule 35 (statement -> ADC register .)
    SUB             reduce using rule 35 (statement -> ADC register .)
    SUI             reduce using rule 35 (statement -> ADC register .)
    SBB             reduce using rule 35 (statement -> ADC register .)
    SBI             reduce using rule 35 (statement -> ADC register .)
    INR             reduce using rule 35 (statement -> ADC register .)
    DCR             reduce using rule 35 (statement -> ADC register .)
    INX             reduce using rule 35 (statement -> ADC register .)
    DCX             reduce using rule 35 (statement -> ADC register .)
    DAD             reduce using rule 35 (statement -> ADC register .)
    ANA             reduce using rule 35 (statement -> ADC register .)
    ORA             reduce using rule 35 (statement -> ADC register .)
    XRA             reduce using rule 35 (statement -> ADC register .)
    ANI             reduce using rule 35 (statement -> ADC register .)
    ORI             reduce using rule 35 (statement -> ADC register .)
    XRI             reduce using rule 35 (statement -> ADC register .)
    CMA             reduce using rule 35 (statement -> ADC register .)
    RLC             reduce using rule 35 (statement -> ADC register .)
    RAL             reduce using rule 35 (statement -> ADC register .)
    RRC             reduce using rule 35 (statement -> ADC register .)
    RAR             reduce using rule 35 (statement -> ADC register .)
    CMP             reduce using rule 35 (statement -> ADC register .)
    CPI             reduce using rule 35 (statement -> ADC register .)
    CMC             reduce using rule 35 (statement -> ADC register .)
    STC             reduce using rule 35 (statement -> ADC register .)
    DAA             reduce using rule 35 (statement -> ADC register .)
    JMP             reduce using rule 35 (statement -> ADC register .)
    JC              reduce using rule 35 (statement -> ADC register .)
    JNC             reduce using rule 35 (statement -> ADC register .)
    JZ              reduce using rule 35 (statement -> ADC register .)
    JNZ             reduce using rule 35 (statement -> ADC register .)
    JP              reduce using rule 35 (statement -> ADC register .)
    JM              reduce using rule 35 (statement -> ADC register .)
    JPE             reduce using rule 35 (statement -> ADC register .)
    JPO             reduce using rule 35 (statement -> ADC register .)
    CALL            reduce using rule 35 (statement -> ADC register .)
    RET             reduce using rule 35 (statement -> ADC register .)
    MACHINE         reduce using rule 35 (statement -> ADC register .)
    $end            reduce using rule 35 (statement -> ADC register .)


state 87

    (36) statement -> ADC memory .

    MOV             reduce using rule 36 (statement -> ADC memory .)
    LABEL           reduce using rule 36 (statement -> ADC memory .)
    MVI             reduce using rule 36 (statement -> ADC memory .)
    LXI             reduce using rule 36 (statement -> ADC memory .)
    LDAX            reduce using rule 36 (statement -> ADC memory .)
    STAX            reduce using rule 36 (statement -> ADC memory .)
    LDA             reduce using rule 36 (statement -> ADC memory .)
    STA             reduce using rule 36 (statement -> ADC memory .)
    LHLD            reduce using rule 36 (statement -> ADC memory .)
    SHLD            reduce using rule 36 (statement -> ADC memory .)
    XCHG            reduce using rule 36 (statement -> ADC memory .)
    ADD             reduce using rule 36 (statement -> ADC memory .)
    ADI             reduce using rule 36 (statement -> ADC memory .)
    ADC             reduce using rule 36 (statement -> ADC memory .)
    ACI             reduce using rule 36 (statement -> ADC memory .)
    SUB             reduce using rule 36 (statement -> ADC memory .)
    SUI             reduce using rule 36 (statement -> ADC memory .)
    SBB             reduce using rule 36 (statement -> ADC memory .)
    SBI             reduce using rule 36 (statement -> ADC memory .)
    INR             reduce using rule 36 (statement -> ADC memory .)
    DCR             reduce using rule 36 (statement -> ADC memory .)
    INX             reduce using rule 36 (statement -> ADC memory .)
    DCX             reduce using rule 36 (statement -> ADC memory .)
    DAD             reduce using rule 36 (statement -> ADC memory .)
    ANA             reduce using rule 36 (statement -> ADC memory .)
    ORA             reduce using rule 36 (statement -> ADC memory .)
    XRA             reduce using rule 36 (statement -> ADC memory .)
    ANI             reduce using rule 36 (statement -> ADC memory .)
    ORI             reduce using rule 36 (statement -> ADC memory .)
    XRI             reduce using rule 36 (statement -> ADC memory .)
    CMA             reduce using rule 36 (statement -> ADC memory .)
    RLC             reduce using rule 36 (statement -> ADC memory .)
    RAL             reduce using rule 36 (statement -> ADC memory .)
    RRC             reduce using rule 36 (statement -> ADC memory .)
    RAR             reduce using rule 36 (statement -> ADC memory .)
    CMP             reduce using rule 36 (statement -> ADC memory .)
    CPI             reduce using rule 36 (statement -> ADC memory .)
    CMC             reduce using rule 36 (statement -> ADC memory .)
    STC             reduce using rule 36 (statement -> ADC memory .)
    DAA             reduce using rule 36 (statement -> ADC memory .)
    JMP             reduce using rule 36 (statement -> ADC memory .)
    JC              reduce using rule 36 (statement -> ADC memory .)
    JNC             reduce using rule 36 (statement -> ADC memory .)
    JZ              reduce using rule 36 (statement -> ADC memory .)
    JNZ             reduce using rule 36 (statement -> ADC memory .)
    JP              reduce using rule 36 (statement -> ADC memory .)
    JM              reduce using rule 36 (statement -> ADC memory .)
    JPE             reduce using rule 36 (statement -> ADC memory .)
    JPO             reduce using rule 36 (statement -> ADC memory .)
    CALL            reduce using rule 36 (statement -> ADC memory .)
    RET             reduce using rule 36 (statement -> ADC memory .)
    MACHINE         reduce using rule 36 (statement -> ADC memory .)
    $end            reduce using rule 36 (statement -> ADC memory .)


state 88

    (39) statement -> ACI byte_8 .

    MOV             reduce using rule 39 (statement -> ACI byte_8 .)
    LABEL           reduce using rule 39 (statement -> ACI byte_8 .)
    MVI             reduce using rule 39 (statement -> ACI byte_8 .)
    LXI             reduce using rule 39 (statement -> ACI byte_8 .)
    LDAX            reduce using rule 39 (statement -> ACI byte_8 .)
    STAX            reduce using rule 39 (statement -> ACI byte_8 .)
    LDA             reduce using rule 39 (statement -> ACI byte_8 .)
    STA             reduce using rule 39 (statement -> ACI byte_8 .)
    LHLD            reduce using rule 39 (statement -> ACI byte_8 .)
    SHLD            reduce using rule 39 (statement -> ACI byte_8 .)
    XCHG            reduce using rule 39 (statement -> ACI byte_8 .)
    ADD             reduce using rule 39 (statement -> ACI byte_8 .)
    ADI             reduce using rule 39 (statement -> ACI byte_8 .)
    ADC             reduce using rule 39 (statement -> ACI byte_8 .)
    ACI             reduce using rule 39 (statement -> ACI byte_8 .)
    SUB             reduce using rule 39 (statement -> ACI byte_8 .)
    SUI             reduce using rule 39 (statement -> ACI byte_8 .)
    SBB             reduce using rule 39 (statement -> ACI byte_8 .)
    SBI             reduce using rule 39 (statement -> ACI byte_8 .)
    INR             reduce using rule 39 (statement -> ACI byte_8 .)
    DCR             reduce using rule 39 (statement -> ACI byte_8 .)
    INX             reduce using rule 39 (statement -> ACI byte_8 .)
    DCX             reduce using rule 39 (statement -> ACI byte_8 .)
    DAD             reduce using rule 39 (statement -> ACI byte_8 .)
    ANA             reduce using rule 39 (statement -> ACI byte_8 .)
    ORA             reduce using rule 39 (statement -> ACI byte_8 .)
    XRA             reduce using rule 39 (statement -> ACI byte_8 .)
    ANI             reduce using rule 39 (statement -> ACI byte_8 .)
    ORI             reduce using rule 39 (statement -> ACI byte_8 .)
    XRI             reduce using rule 39 (statement -> ACI byte_8 .)
    CMA             reduce using rule 39 (statement -> ACI byte_8 .)
    RLC             reduce using rule 39 (statement -> ACI byte_8 .)
    RAL             reduce using rule 39 (statement -> ACI byte_8 .)
    RRC             reduce using rule 39 (statement -> ACI byte_8 .)
    RAR             reduce using rule 39 (statement -> ACI byte_8 .)
    CMP             reduce using rule 39 (statement -> ACI byte_8 .)
    CPI             reduce using rule 39 (statement -> ACI byte_8 .)
    CMC             reduce using rule 39 (statement -> ACI byte_8 .)
    STC             reduce using rule 39 (statement -> ACI byte_8 .)
    DAA             reduce using rule 39 (statement -> ACI byte_8 .)
    JMP             reduce using rule 39 (statement -> ACI byte_8 .)
    JC              reduce using rule 39 (statement -> ACI byte_8 .)
    JNC             reduce using rule 39 (statement -> ACI byte_8 .)
    JZ              reduce using rule 39 (statement -> ACI byte_8 .)
    JNZ             reduce using rule 39 (statement -> ACI byte_8 .)
    JP              reduce using rule 39 (statement -> ACI byte_8 .)
    JM              reduce using rule 39 (statement -> ACI byte_8 .)
    JPE             reduce using rule 39 (statement -> ACI byte_8 .)
    JPO             reduce using rule 39 (statement -> ACI byte_8 .)
    CALL            reduce using rule 39 (statement -> ACI byte_8 .)
    RET             reduce using rule 39 (statement -> ACI byte_8 .)
    MACHINE         reduce using rule 39 (statement -> ACI byte_8 .)
    $end            reduce using rule 39 (statement -> ACI byte_8 .)


state 89

    (41) statement -> SUB register .

    MOV             reduce using rule 41 (statement -> SUB register .)
    LABEL           reduce using rule 41 (statement -> SUB register .)
    MVI             reduce using rule 41 (statement -> SUB register .)
    LXI             reduce using rule 41 (statement -> SUB register .)
    LDAX            reduce using rule 41 (statement -> SUB register .)
    STAX            reduce using rule 41 (statement -> SUB register .)
    LDA             reduce using rule 41 (statement -> SUB register .)
    STA             reduce using rule 41 (statement -> SUB register .)
    LHLD            reduce using rule 41 (statement -> SUB register .)
    SHLD            reduce using rule 41 (statement -> SUB register .)
    XCHG            reduce using rule 41 (statement -> SUB register .)
    ADD             reduce using rule 41 (statement -> SUB register .)
    ADI             reduce using rule 41 (statement -> SUB register .)
    ADC             reduce using rule 41 (statement -> SUB register .)
    ACI             reduce using rule 41 (statement -> SUB register .)
    SUB             reduce using rule 41 (statement -> SUB register .)
    SUI             reduce using rule 41 (statement -> SUB register .)
    SBB             reduce using rule 41 (statement -> SUB register .)
    SBI             reduce using rule 41 (statement -> SUB register .)
    INR             reduce using rule 41 (statement -> SUB register .)
    DCR             reduce using rule 41 (statement -> SUB register .)
    INX             reduce using rule 41 (statement -> SUB register .)
    DCX             reduce using rule 41 (statement -> SUB register .)
    DAD             reduce using rule 41 (statement -> SUB register .)
    ANA             reduce using rule 41 (statement -> SUB register .)
    ORA             reduce using rule 41 (statement -> SUB register .)
    XRA             reduce using rule 41 (statement -> SUB register .)
    ANI             reduce using rule 41 (statement -> SUB register .)
    ORI             reduce using rule 41 (statement -> SUB register .)
    XRI             reduce using rule 41 (statement -> SUB register .)
    CMA             reduce using rule 41 (statement -> SUB register .)
    RLC             reduce using rule 41 (statement -> SUB register .)
    RAL             reduce using rule 41 (statement -> SUB register .)
    RRC             reduce using rule 41 (statement -> SUB register .)
    RAR             reduce using rule 41 (statement -> SUB register .)
    CMP             reduce using rule 41 (statement -> SUB register .)
    CPI             reduce using rule 41 (statement -> SUB register .)
    CMC             reduce using rule 41 (statement -> SUB register .)
    STC             reduce using rule 41 (statement -> SUB register .)
    DAA             reduce using rule 41 (statement -> SUB register .)
    JMP             reduce using rule 41 (statement -> SUB register .)
    JC              reduce using rule 41 (statement -> SUB register .)
    JNC             reduce using rule 41 (statement -> SUB register .)
    JZ              reduce using rule 41 (statement -> SUB register .)
    JNZ             reduce using rule 41 (statement -> SUB register .)
    JP              reduce using rule 41 (statement -> SUB register .)
    JM              reduce using rule 41 (statement -> SUB register .)
    JPE             reduce using rule 41 (statement -> SUB register .)
    JPO             reduce using rule 41 (statement -> SUB register .)
    CALL            reduce using rule 41 (statement -> SUB register .)
    RET             reduce using rule 41 (statement -> SUB register .)
    MACHINE         reduce using rule 41 (statement -> SUB register .)
    $end            reduce using rule 41 (statement -> SUB register .)


state 90

    (42) statement -> SUB memory .

    MOV             reduce using rule 42 (statement -> SUB memory .)
    LABEL           reduce using rule 42 (statement -> SUB memory .)
    MVI             reduce using rule 42 (statement -> SUB memory .)
    LXI             reduce using rule 42 (statement -> SUB memory .)
    LDAX            reduce using rule 42 (statement -> SUB memory .)
    STAX            reduce using rule 42 (statement -> SUB memory .)
    LDA             reduce using rule 42 (statement -> SUB memory .)
    STA             reduce using rule 42 (statement -> SUB memory .)
    LHLD            reduce using rule 42 (statement -> SUB memory .)
    SHLD            reduce using rule 42 (statement -> SUB memory .)
    XCHG            reduce using rule 42 (statement -> SUB memory .)
    ADD             reduce using rule 42 (statement -> SUB memory .)
    ADI             reduce using rule 42 (statement -> SUB memory .)
    ADC             reduce using rule 42 (statement -> SUB memory .)
    ACI             reduce using rule 42 (statement -> SUB memory .)
    SUB             reduce using rule 42 (statement -> SUB memory .)
    SUI             reduce using rule 42 (statement -> SUB memory .)
    SBB             reduce using rule 42 (statement -> SUB memory .)
    SBI             reduce using rule 42 (statement -> SUB memory .)
    INR             reduce using rule 42 (statement -> SUB memory .)
    DCR             reduce using rule 42 (statement -> SUB memory .)
    INX             reduce using rule 42 (statement -> SUB memory .)
    DCX             reduce using rule 42 (statement -> SUB memory .)
    DAD             reduce using rule 42 (statement -> SUB memory .)
    ANA             reduce using rule 42 (statement -> SUB memory .)
    ORA             reduce using rule 42 (statement -> SUB memory .)
    XRA             reduce using rule 42 (statement -> SUB memory .)
    ANI             reduce using rule 42 (statement -> SUB memory .)
    ORI             reduce using rule 42 (statement -> SUB memory .)
    XRI             reduce using rule 42 (statement -> SUB memory .)
    CMA             reduce using rule 42 (statement -> SUB memory .)
    RLC             reduce using rule 42 (statement -> SUB memory .)
    RAL             reduce using rule 42 (statement -> SUB memory .)
    RRC             reduce using rule 42 (statement -> SUB memory .)
    RAR             reduce using rule 42 (statement -> SUB memory .)
    CMP             reduce using rule 42 (statement -> SUB memory .)
    CPI             reduce using rule 42 (statement -> SUB memory .)
    CMC             reduce using rule 42 (statement -> SUB memory .)
    STC             reduce using rule 42 (statement -> SUB memory .)
    DAA             reduce using rule 42 (statement -> SUB memory .)
    JMP             reduce using rule 42 (statement -> SUB memory .)
    JC              reduce using rule 42 (statement -> SUB memory .)
    JNC             reduce using rule 42 (statement -> SUB memory .)
    JZ              reduce using rule 42 (statement -> SUB memory .)
    JNZ             reduce using rule 42 (statement -> SUB memory .)
    JP              reduce using rule 42 (statement -> SUB memory .)
    JM              reduce using rule 42 (statement -> SUB memory .)
    JPE             reduce using rule 42 (statement -> SUB memory .)
    JPO             reduce using rule 42 (statement -> SUB memory .)
    CALL            reduce using rule 42 (statement -> SUB memory .)
    RET             reduce using rule 42 (statement -> SUB memory .)
    MACHINE         reduce using rule 42 (statement -> SUB memory .)
    $end            reduce using rule 42 (statement -> SUB memory .)


state 91

    (45) statement -> SUI byte_8 .

    MOV             reduce using rule 45 (statement -> SUI byte_8 .)
    LABEL           reduce using rule 45 (statement -> SUI byte_8 .)
    MVI             reduce using rule 45 (statement -> SUI byte_8 .)
    LXI             reduce using rule 45 (statement -> SUI byte_8 .)
    LDAX            reduce using rule 45 (statement -> SUI byte_8 .)
    STAX            reduce using rule 45 (statement -> SUI byte_8 .)
    LDA             reduce using rule 45 (statement -> SUI byte_8 .)
    STA             reduce using rule 45 (statement -> SUI byte_8 .)
    LHLD            reduce using rule 45 (statement -> SUI byte_8 .)
    SHLD            reduce using rule 45 (statement -> SUI byte_8 .)
    XCHG            reduce using rule 45 (statement -> SUI byte_8 .)
    ADD             reduce using rule 45 (statement -> SUI byte_8 .)
    ADI             reduce using rule 45 (statement -> SUI byte_8 .)
    ADC             reduce using rule 45 (statement -> SUI byte_8 .)
    ACI             reduce using rule 45 (statement -> SUI byte_8 .)
    SUB             reduce using rule 45 (statement -> SUI byte_8 .)
    SUI             reduce using rule 45 (statement -> SUI byte_8 .)
    SBB             reduce using rule 45 (statement -> SUI byte_8 .)
    SBI             reduce using rule 45 (statement -> SUI byte_8 .)
    INR             reduce using rule 45 (statement -> SUI byte_8 .)
    DCR             reduce using rule 45 (statement -> SUI byte_8 .)
    INX             reduce using rule 45 (statement -> SUI byte_8 .)
    DCX             reduce using rule 45 (statement -> SUI byte_8 .)
    DAD             reduce using rule 45 (statement -> SUI byte_8 .)
    ANA             reduce using rule 45 (statement -> SUI byte_8 .)
    ORA             reduce using rule 45 (statement -> SUI byte_8 .)
    XRA             reduce using rule 45 (statement -> SUI byte_8 .)
    ANI             reduce using rule 45 (statement -> SUI byte_8 .)
    ORI             reduce using rule 45 (statement -> SUI byte_8 .)
    XRI             reduce using rule 45 (statement -> SUI byte_8 .)
    CMA             reduce using rule 45 (statement -> SUI byte_8 .)
    RLC             reduce using rule 45 (statement -> SUI byte_8 .)
    RAL             reduce using rule 45 (statement -> SUI byte_8 .)
    RRC             reduce using rule 45 (statement -> SUI byte_8 .)
    RAR             reduce using rule 45 (statement -> SUI byte_8 .)
    CMP             reduce using rule 45 (statement -> SUI byte_8 .)
    CPI             reduce using rule 45 (statement -> SUI byte_8 .)
    CMC             reduce using rule 45 (statement -> SUI byte_8 .)
    STC             reduce using rule 45 (statement -> SUI byte_8 .)
    DAA             reduce using rule 45 (statement -> SUI byte_8 .)
    JMP             reduce using rule 45 (statement -> SUI byte_8 .)
    JC              reduce using rule 45 (statement -> SUI byte_8 .)
    JNC             reduce using rule 45 (statement -> SUI byte_8 .)
    JZ              reduce using rule 45 (statement -> SUI byte_8 .)
    JNZ             reduce using rule 45 (statement -> SUI byte_8 .)
    JP              reduce using rule 45 (statement -> SUI byte_8 .)
    JM              reduce using rule 45 (statement -> SUI byte_8 .)
    JPE             reduce using rule 45 (statement -> SUI byte_8 .)
    JPO             reduce using rule 45 (statement -> SUI byte_8 .)
    CALL            reduce using rule 45 (statement -> SUI byte_8 .)
    RET             reduce using rule 45 (statement -> SUI byte_8 .)
    MACHINE         reduce using rule 45 (statement -> SUI byte_8 .)
    $end            reduce using rule 45 (statement -> SUI byte_8 .)


state 92

    (47) statement -> SBB register .

    MOV             reduce using rule 47 (statement -> SBB register .)
    LABEL           reduce using rule 47 (statement -> SBB register .)
    MVI             reduce using rule 47 (statement -> SBB register .)
    LXI             reduce using rule 47 (statement -> SBB register .)
    LDAX            reduce using rule 47 (statement -> SBB register .)
    STAX            reduce using rule 47 (statement -> SBB register .)
    LDA             reduce using rule 47 (statement -> SBB register .)
    STA             reduce using rule 47 (statement -> SBB register .)
    LHLD            reduce using rule 47 (statement -> SBB register .)
    SHLD            reduce using rule 47 (statement -> SBB register .)
    XCHG            reduce using rule 47 (statement -> SBB register .)
    ADD             reduce using rule 47 (statement -> SBB register .)
    ADI             reduce using rule 47 (statement -> SBB register .)
    ADC             reduce using rule 47 (statement -> SBB register .)
    ACI             reduce using rule 47 (statement -> SBB register .)
    SUB             reduce using rule 47 (statement -> SBB register .)
    SUI             reduce using rule 47 (statement -> SBB register .)
    SBB             reduce using rule 47 (statement -> SBB register .)
    SBI             reduce using rule 47 (statement -> SBB register .)
    INR             reduce using rule 47 (statement -> SBB register .)
    DCR             reduce using rule 47 (statement -> SBB register .)
    INX             reduce using rule 47 (statement -> SBB register .)
    DCX             reduce using rule 47 (statement -> SBB register .)
    DAD             reduce using rule 47 (statement -> SBB register .)
    ANA             reduce using rule 47 (statement -> SBB register .)
    ORA             reduce using rule 47 (statement -> SBB register .)
    XRA             reduce using rule 47 (statement -> SBB register .)
    ANI             reduce using rule 47 (statement -> SBB register .)
    ORI             reduce using rule 47 (statement -> SBB register .)
    XRI             reduce using rule 47 (statement -> SBB register .)
    CMA             reduce using rule 47 (statement -> SBB register .)
    RLC             reduce using rule 47 (statement -> SBB register .)
    RAL             reduce using rule 47 (statement -> SBB register .)
    RRC             reduce using rule 47 (statement -> SBB register .)
    RAR             reduce using rule 47 (statement -> SBB register .)
    CMP             reduce using rule 47 (statement -> SBB register .)
    CPI             reduce using rule 47 (statement -> SBB register .)
    CMC             reduce using rule 47 (statement -> SBB register .)
    STC             reduce using rule 47 (statement -> SBB register .)
    DAA             reduce using rule 47 (statement -> SBB register .)
    JMP             reduce using rule 47 (statement -> SBB register .)
    JC              reduce using rule 47 (statement -> SBB register .)
    JNC             reduce using rule 47 (statement -> SBB register .)
    JZ              reduce using rule 47 (statement -> SBB register .)
    JNZ             reduce using rule 47 (statement -> SBB register .)
    JP              reduce using rule 47 (statement -> SBB register .)
    JM              reduce using rule 47 (statement -> SBB register .)
    JPE             reduce using rule 47 (statement -> SBB register .)
    JPO             reduce using rule 47 (statement -> SBB register .)
    CALL            reduce using rule 47 (statement -> SBB register .)
    RET             reduce using rule 47 (statement -> SBB register .)
    MACHINE         reduce using rule 47 (statement -> SBB register .)
    $end            reduce using rule 47 (statement -> SBB register .)


state 93

    (48) statement -> SBB memory .

    MOV             reduce using rule 48 (statement -> SBB memory .)
    LABEL           reduce using rule 48 (statement -> SBB memory .)
    MVI             reduce using rule 48 (statement -> SBB memory .)
    LXI             reduce using rule 48 (statement -> SBB memory .)
    LDAX            reduce using rule 48 (statement -> SBB memory .)
    STAX            reduce using rule 48 (statement -> SBB memory .)
    LDA             reduce using rule 48 (statement -> SBB memory .)
    STA             reduce using rule 48 (statement -> SBB memory .)
    LHLD            reduce using rule 48 (statement -> SBB memory .)
    SHLD            reduce using rule 48 (statement -> SBB memory .)
    XCHG            reduce using rule 48 (statement -> SBB memory .)
    ADD             reduce using rule 48 (statement -> SBB memory .)
    ADI             reduce using rule 48 (statement -> SBB memory .)
    ADC             reduce using rule 48 (statement -> SBB memory .)
    ACI             reduce using rule 48 (statement -> SBB memory .)
    SUB             reduce using rule 48 (statement -> SBB memory .)
    SUI             reduce using rule 48 (statement -> SBB memory .)
    SBB             reduce using rule 48 (statement -> SBB memory .)
    SBI             reduce using rule 48 (statement -> SBB memory .)
    INR             reduce using rule 48 (statement -> SBB memory .)
    DCR             reduce using rule 48 (statement -> SBB memory .)
    INX             reduce using rule 48 (statement -> SBB memory .)
    DCX             reduce using rule 48 (statement -> SBB memory .)
    DAD             reduce using rule 48 (statement -> SBB memory .)
    ANA             reduce using rule 48 (statement -> SBB memory .)
    ORA             reduce using rule 48 (statement -> SBB memory .)
    XRA             reduce using rule 48 (statement -> SBB memory .)
    ANI             reduce using rule 48 (statement -> SBB memory .)
    ORI             reduce using rule 48 (statement -> SBB memory .)
    XRI             reduce using rule 48 (statement -> SBB memory .)
    CMA             reduce using rule 48 (statement -> SBB memory .)
    RLC             reduce using rule 48 (statement -> SBB memory .)
    RAL             reduce using rule 48 (statement -> SBB memory .)
    RRC             reduce using rule 48 (statement -> SBB memory .)
    RAR             reduce using rule 48 (statement -> SBB memory .)
    CMP             reduce using rule 48 (statement -> SBB memory .)
    CPI             reduce using rule 48 (statement -> SBB memory .)
    CMC             reduce using rule 48 (statement -> SBB memory .)
    STC             reduce using rule 48 (statement -> SBB memory .)
    DAA             reduce using rule 48 (statement -> SBB memory .)
    JMP             reduce using rule 48 (statement -> SBB memory .)
    JC              reduce using rule 48 (statement -> SBB memory .)
    JNC             reduce using rule 48 (statement -> SBB memory .)
    JZ              reduce using rule 48 (statement -> SBB memory .)
    JNZ             reduce using rule 48 (statement -> SBB memory .)
    JP              reduce using rule 48 (statement -> SBB memory .)
    JM              reduce using rule 48 (statement -> SBB memory .)
    JPE             reduce using rule 48 (statement -> SBB memory .)
    JPO             reduce using rule 48 (statement -> SBB memory .)
    CALL            reduce using rule 48 (statement -> SBB memory .)
    RET             reduce using rule 48 (statement -> SBB memory .)
    MACHINE         reduce using rule 48 (statement -> SBB memory .)
    $end            reduce using rule 48 (statement -> SBB memory .)


state 94

    (51) statement -> SBI byte_8 .

    MOV             reduce using rule 51 (statement -> SBI byte_8 .)
    LABEL           reduce using rule 51 (statement -> SBI byte_8 .)
    MVI             reduce using rule 51 (statement -> SBI byte_8 .)
    LXI             reduce using rule 51 (statement -> SBI byte_8 .)
    LDAX            reduce using rule 51 (statement -> SBI byte_8 .)
    STAX            reduce using rule 51 (statement -> SBI byte_8 .)
    LDA             reduce using rule 51 (statement -> SBI byte_8 .)
    STA             reduce using rule 51 (statement -> SBI byte_8 .)
    LHLD            reduce using rule 51 (statement -> SBI byte_8 .)
    SHLD            reduce using rule 51 (statement -> SBI byte_8 .)
    XCHG            reduce using rule 51 (statement -> SBI byte_8 .)
    ADD             reduce using rule 51 (statement -> SBI byte_8 .)
    ADI             reduce using rule 51 (statement -> SBI byte_8 .)
    ADC             reduce using rule 51 (statement -> SBI byte_8 .)
    ACI             reduce using rule 51 (statement -> SBI byte_8 .)
    SUB             reduce using rule 51 (statement -> SBI byte_8 .)
    SUI             reduce using rule 51 (statement -> SBI byte_8 .)
    SBB             reduce using rule 51 (statement -> SBI byte_8 .)
    SBI             reduce using rule 51 (statement -> SBI byte_8 .)
    INR             reduce using rule 51 (statement -> SBI byte_8 .)
    DCR             reduce using rule 51 (statement -> SBI byte_8 .)
    INX             reduce using rule 51 (statement -> SBI byte_8 .)
    DCX             reduce using rule 51 (statement -> SBI byte_8 .)
    DAD             reduce using rule 51 (statement -> SBI byte_8 .)
    ANA             reduce using rule 51 (statement -> SBI byte_8 .)
    ORA             reduce using rule 51 (statement -> SBI byte_8 .)
    XRA             reduce using rule 51 (statement -> SBI byte_8 .)
    ANI             reduce using rule 51 (statement -> SBI byte_8 .)
    ORI             reduce using rule 51 (statement -> SBI byte_8 .)
    XRI             reduce using rule 51 (statement -> SBI byte_8 .)
    CMA             reduce using rule 51 (statement -> SBI byte_8 .)
    RLC             reduce using rule 51 (statement -> SBI byte_8 .)
    RAL             reduce using rule 51 (statement -> SBI byte_8 .)
    RRC             reduce using rule 51 (statement -> SBI byte_8 .)
    RAR             reduce using rule 51 (statement -> SBI byte_8 .)
    CMP             reduce using rule 51 (statement -> SBI byte_8 .)
    CPI             reduce using rule 51 (statement -> SBI byte_8 .)
    CMC             reduce using rule 51 (statement -> SBI byte_8 .)
    STC             reduce using rule 51 (statement -> SBI byte_8 .)
    DAA             reduce using rule 51 (statement -> SBI byte_8 .)
    JMP             reduce using rule 51 (statement -> SBI byte_8 .)
    JC              reduce using rule 51 (statement -> SBI byte_8 .)
    JNC             reduce using rule 51 (statement -> SBI byte_8 .)
    JZ              reduce using rule 51 (statement -> SBI byte_8 .)
    JNZ             reduce using rule 51 (statement -> SBI byte_8 .)
    JP              reduce using rule 51 (statement -> SBI byte_8 .)
    JM              reduce using rule 51 (statement -> SBI byte_8 .)
    JPE             reduce using rule 51 (statement -> SBI byte_8 .)
    JPO             reduce using rule 51 (statement -> SBI byte_8 .)
    CALL            reduce using rule 51 (statement -> SBI byte_8 .)
    RET             reduce using rule 51 (statement -> SBI byte_8 .)
    MACHINE         reduce using rule 51 (statement -> SBI byte_8 .)
    $end            reduce using rule 51 (statement -> SBI byte_8 .)


state 95

    (53) statement -> INR register .

    MOV             reduce using rule 53 (statement -> INR register .)
    LABEL           reduce using rule 53 (statement -> INR register .)
    MVI             reduce using rule 53 (statement -> INR register .)
    LXI             reduce using rule 53 (statement -> INR register .)
    LDAX            reduce using rule 53 (statement -> INR register .)
    STAX            reduce using rule 53 (statement -> INR register .)
    LDA             reduce using rule 53 (statement -> INR register .)
    STA             reduce using rule 53 (statement -> INR register .)
    LHLD            reduce using rule 53 (statement -> INR register .)
    SHLD            reduce using rule 53 (statement -> INR register .)
    XCHG            reduce using rule 53 (statement -> INR register .)
    ADD             reduce using rule 53 (statement -> INR register .)
    ADI             reduce using rule 53 (statement -> INR register .)
    ADC             reduce using rule 53 (statement -> INR register .)
    ACI             reduce using rule 53 (statement -> INR register .)
    SUB             reduce using rule 53 (statement -> INR register .)
    SUI             reduce using rule 53 (statement -> INR register .)
    SBB             reduce using rule 53 (statement -> INR register .)
    SBI             reduce using rule 53 (statement -> INR register .)
    INR             reduce using rule 53 (statement -> INR register .)
    DCR             reduce using rule 53 (statement -> INR register .)
    INX             reduce using rule 53 (statement -> INR register .)
    DCX             reduce using rule 53 (statement -> INR register .)
    DAD             reduce using rule 53 (statement -> INR register .)
    ANA             reduce using rule 53 (statement -> INR register .)
    ORA             reduce using rule 53 (statement -> INR register .)
    XRA             reduce using rule 53 (statement -> INR register .)
    ANI             reduce using rule 53 (statement -> INR register .)
    ORI             reduce using rule 53 (statement -> INR register .)
    XRI             reduce using rule 53 (statement -> INR register .)
    CMA             reduce using rule 53 (statement -> INR register .)
    RLC             reduce using rule 53 (statement -> INR register .)
    RAL             reduce using rule 53 (statement -> INR register .)
    RRC             reduce using rule 53 (statement -> INR register .)
    RAR             reduce using rule 53 (statement -> INR register .)
    CMP             reduce using rule 53 (statement -> INR register .)
    CPI             reduce using rule 53 (statement -> INR register .)
    CMC             reduce using rule 53 (statement -> INR register .)
    STC             reduce using rule 53 (statement -> INR register .)
    DAA             reduce using rule 53 (statement -> INR register .)
    JMP             reduce using rule 53 (statement -> INR register .)
    JC              reduce using rule 53 (statement -> INR register .)
    JNC             reduce using rule 53 (statement -> INR register .)
    JZ              reduce using rule 53 (statement -> INR register .)
    JNZ             reduce using rule 53 (statement -> INR register .)
    JP              reduce using rule 53 (statement -> INR register .)
    JM              reduce using rule 53 (statement -> INR register .)
    JPE             reduce using rule 53 (statement -> INR register .)
    JPO             reduce using rule 53 (statement -> INR register .)
    CALL            reduce using rule 53 (statement -> INR register .)
    RET             reduce using rule 53 (statement -> INR register .)
    MACHINE         reduce using rule 53 (statement -> INR register .)
    $end            reduce using rule 53 (statement -> INR register .)


state 96

    (54) statement -> INR memory .

    MOV             reduce using rule 54 (statement -> INR memory .)
    LABEL           reduce using rule 54 (statement -> INR memory .)
    MVI             reduce using rule 54 (statement -> INR memory .)
    LXI             reduce using rule 54 (statement -> INR memory .)
    LDAX            reduce using rule 54 (statement -> INR memory .)
    STAX            reduce using rule 54 (statement -> INR memory .)
    LDA             reduce using rule 54 (statement -> INR memory .)
    STA             reduce using rule 54 (statement -> INR memory .)
    LHLD            reduce using rule 54 (statement -> INR memory .)
    SHLD            reduce using rule 54 (statement -> INR memory .)
    XCHG            reduce using rule 54 (statement -> INR memory .)
    ADD             reduce using rule 54 (statement -> INR memory .)
    ADI             reduce using rule 54 (statement -> INR memory .)
    ADC             reduce using rule 54 (statement -> INR memory .)
    ACI             reduce using rule 54 (statement -> INR memory .)
    SUB             reduce using rule 54 (statement -> INR memory .)
    SUI             reduce using rule 54 (statement -> INR memory .)
    SBB             reduce using rule 54 (statement -> INR memory .)
    SBI             reduce using rule 54 (statement -> INR memory .)
    INR             reduce using rule 54 (statement -> INR memory .)
    DCR             reduce using rule 54 (statement -> INR memory .)
    INX             reduce using rule 54 (statement -> INR memory .)
    DCX             reduce using rule 54 (statement -> INR memory .)
    DAD             reduce using rule 54 (statement -> INR memory .)
    ANA             reduce using rule 54 (statement -> INR memory .)
    ORA             reduce using rule 54 (statement -> INR memory .)
    XRA             reduce using rule 54 (statement -> INR memory .)
    ANI             reduce using rule 54 (statement -> INR memory .)
    ORI             reduce using rule 54 (statement -> INR memory .)
    XRI             reduce using rule 54 (statement -> INR memory .)
    CMA             reduce using rule 54 (statement -> INR memory .)
    RLC             reduce using rule 54 (statement -> INR memory .)
    RAL             reduce using rule 54 (statement -> INR memory .)
    RRC             reduce using rule 54 (statement -> INR memory .)
    RAR             reduce using rule 54 (statement -> INR memory .)
    CMP             reduce using rule 54 (statement -> INR memory .)
    CPI             reduce using rule 54 (statement -> INR memory .)
    CMC             reduce using rule 54 (statement -> INR memory .)
    STC             reduce using rule 54 (statement -> INR memory .)
    DAA             reduce using rule 54 (statement -> INR memory .)
    JMP             reduce using rule 54 (statement -> INR memory .)
    JC              reduce using rule 54 (statement -> INR memory .)
    JNC             reduce using rule 54 (statement -> INR memory .)
    JZ              reduce using rule 54 (statement -> INR memory .)
    JNZ             reduce using rule 54 (statement -> INR memory .)
    JP              reduce using rule 54 (statement -> INR memory .)
    JM              reduce using rule 54 (statement -> INR memory .)
    JPE             reduce using rule 54 (statement -> INR memory .)
    JPO             reduce using rule 54 (statement -> INR memory .)
    CALL            reduce using rule 54 (statement -> INR memory .)
    RET             reduce using rule 54 (statement -> INR memory .)
    MACHINE         reduce using rule 54 (statement -> INR memory .)
    $end            reduce using rule 54 (statement -> INR memory .)


state 97

    (57) statement -> DCR register .

    MOV             reduce using rule 57 (statement -> DCR register .)
    LABEL           reduce using rule 57 (statement -> DCR register .)
    MVI             reduce using rule 57 (statement -> DCR register .)
    LXI             reduce using rule 57 (statement -> DCR register .)
    LDAX            reduce using rule 57 (statement -> DCR register .)
    STAX            reduce using rule 57 (statement -> DCR register .)
    LDA             reduce using rule 57 (statement -> DCR register .)
    STA             reduce using rule 57 (statement -> DCR register .)
    LHLD            reduce using rule 57 (statement -> DCR register .)
    SHLD            reduce using rule 57 (statement -> DCR register .)
    XCHG            reduce using rule 57 (statement -> DCR register .)
    ADD             reduce using rule 57 (statement -> DCR register .)
    ADI             reduce using rule 57 (statement -> DCR register .)
    ADC             reduce using rule 57 (statement -> DCR register .)
    ACI             reduce using rule 57 (statement -> DCR register .)
    SUB             reduce using rule 57 (statement -> DCR register .)
    SUI             reduce using rule 57 (statement -> DCR register .)
    SBB             reduce using rule 57 (statement -> DCR register .)
    SBI             reduce using rule 57 (statement -> DCR register .)
    INR             reduce using rule 57 (statement -> DCR register .)
    DCR             reduce using rule 57 (statement -> DCR register .)
    INX             reduce using rule 57 (statement -> DCR register .)
    DCX             reduce using rule 57 (statement -> DCR register .)
    DAD             reduce using rule 57 (statement -> DCR register .)
    ANA             reduce using rule 57 (statement -> DCR register .)
    ORA             reduce using rule 57 (statement -> DCR register .)
    XRA             reduce using rule 57 (statement -> DCR register .)
    ANI             reduce using rule 57 (statement -> DCR register .)
    ORI             reduce using rule 57 (statement -> DCR register .)
    XRI             reduce using rule 57 (statement -> DCR register .)
    CMA             reduce using rule 57 (statement -> DCR register .)
    RLC             reduce using rule 57 (statement -> DCR register .)
    RAL             reduce using rule 57 (statement -> DCR register .)
    RRC             reduce using rule 57 (statement -> DCR register .)
    RAR             reduce using rule 57 (statement -> DCR register .)
    CMP             reduce using rule 57 (statement -> DCR register .)
    CPI             reduce using rule 57 (statement -> DCR register .)
    CMC             reduce using rule 57 (statement -> DCR register .)
    STC             reduce using rule 57 (statement -> DCR register .)
    DAA             reduce using rule 57 (statement -> DCR register .)
    JMP             reduce using rule 57 (statement -> DCR register .)
    JC              reduce using rule 57 (statement -> DCR register .)
    JNC             reduce using rule 57 (statement -> DCR register .)
    JZ              reduce using rule 57 (statement -> DCR register .)
    JNZ             reduce using rule 57 (statement -> DCR register .)
    JP              reduce using rule 57 (statement -> DCR register .)
    JM              reduce using rule 57 (statement -> DCR register .)
    JPE             reduce using rule 57 (statement -> DCR register .)
    JPO             reduce using rule 57 (statement -> DCR register .)
    CALL            reduce using rule 57 (statement -> DCR register .)
    RET             reduce using rule 57 (statement -> DCR register .)
    MACHINE         reduce using rule 57 (statement -> DCR register .)
    $end            reduce using rule 57 (statement -> DCR register .)


state 98

    (58) statement -> DCR memory .

    MOV             reduce using rule 58 (statement -> DCR memory .)
    LABEL           reduce using rule 58 (statement -> DCR memory .)
    MVI             reduce using rule 58 (statement -> DCR memory .)
    LXI             reduce using rule 58 (statement -> DCR memory .)
    LDAX            reduce using rule 58 (statement -> DCR memory .)
    STAX            reduce using rule 58 (statement -> DCR memory .)
    LDA             reduce using rule 58 (statement -> DCR memory .)
    STA             reduce using rule 58 (statement -> DCR memory .)
    LHLD            reduce using rule 58 (statement -> DCR memory .)
    SHLD            reduce using rule 58 (statement -> DCR memory .)
    XCHG            reduce using rule 58 (statement -> DCR memory .)
    ADD             reduce using rule 58 (statement -> DCR memory .)
    ADI             reduce using rule 58 (statement -> DCR memory .)
    ADC             reduce using rule 58 (statement -> DCR memory .)
    ACI             reduce using rule 58 (statement -> DCR memory .)
    SUB             reduce using rule 58 (statement -> DCR memory .)
    SUI             reduce using rule 58 (statement -> DCR memory .)
    SBB             reduce using rule 58 (statement -> DCR memory .)
    SBI             reduce using rule 58 (statement -> DCR memory .)
    INR             reduce using rule 58 (statement -> DCR memory .)
    DCR             reduce using rule 58 (statement -> DCR memory .)
    INX             reduce using rule 58 (statement -> DCR memory .)
    DCX             reduce using rule 58 (statement -> DCR memory .)
    DAD             reduce using rule 58 (statement -> DCR memory .)
    ANA             reduce using rule 58 (statement -> DCR memory .)
    ORA             reduce using rule 58 (statement -> DCR memory .)
    XRA             reduce using rule 58 (statement -> DCR memory .)
    ANI             reduce using rule 58 (statement -> DCR memory .)
    ORI             reduce using rule 58 (statement -> DCR memory .)
    XRI             reduce using rule 58 (statement -> DCR memory .)
    CMA             reduce using rule 58 (statement -> DCR memory .)
    RLC             reduce using rule 58 (statement -> DCR memory .)
    RAL             reduce using rule 58 (statement -> DCR memory .)
    RRC             reduce using rule 58 (statement -> DCR memory .)
    RAR             reduce using rule 58 (statement -> DCR memory .)
    CMP             reduce using rule 58 (statement -> DCR memory .)
    CPI             reduce using rule 58 (statement -> DCR memory .)
    CMC             reduce using rule 58 (statement -> DCR memory .)
    STC             reduce using rule 58 (statement -> DCR memory .)
    DAA             reduce using rule 58 (statement -> DCR memory .)
    JMP             reduce using rule 58 (statement -> DCR memory .)
    JC              reduce using rule 58 (statement -> DCR memory .)
    JNC             reduce using rule 58 (statement -> DCR memory .)
    JZ              reduce using rule 58 (statement -> DCR memory .)
    JNZ             reduce using rule 58 (statement -> DCR memory .)
    JP              reduce using rule 58 (statement -> DCR memory .)
    JM              reduce using rule 58 (statement -> DCR memory .)
    JPE             reduce using rule 58 (statement -> DCR memory .)
    JPO             reduce using rule 58 (statement -> DCR memory .)
    CALL            reduce using rule 58 (statement -> DCR memory .)
    RET             reduce using rule 58 (statement -> DCR memory .)
    MACHINE         reduce using rule 58 (statement -> DCR memory .)
    $end            reduce using rule 58 (statement -> DCR memory .)


state 99

    (61) statement -> INX register_pair_3 .

    MOV             reduce using rule 61 (statement -> INX register_pair_3 .)
    LABEL           reduce using rule 61 (statement -> INX register_pair_3 .)
    MVI             reduce using rule 61 (statement -> INX register_pair_3 .)
    LXI             reduce using rule 61 (statement -> INX register_pair_3 .)
    LDAX            reduce using rule 61 (statement -> INX register_pair_3 .)
    STAX            reduce using rule 61 (statement -> INX register_pair_3 .)
    LDA             reduce using rule 61 (statement -> INX register_pair_3 .)
    STA             reduce using rule 61 (statement -> INX register_pair_3 .)
    LHLD            reduce using rule 61 (statement -> INX register_pair_3 .)
    SHLD            reduce using rule 61 (statement -> INX register_pair_3 .)
    XCHG            reduce using rule 61 (statement -> INX register_pair_3 .)
    ADD             reduce using rule 61 (statement -> INX register_pair_3 .)
    ADI             reduce using rule 61 (statement -> INX register_pair_3 .)
    ADC             reduce using rule 61 (statement -> INX register_pair_3 .)
    ACI             reduce using rule 61 (statement -> INX register_pair_3 .)
    SUB             reduce using rule 61 (statement -> INX register_pair_3 .)
    SUI             reduce using rule 61 (statement -> INX register_pair_3 .)
    SBB             reduce using rule 61 (statement -> INX register_pair_3 .)
    SBI             reduce using rule 61 (statement -> INX register_pair_3 .)
    INR             reduce using rule 61 (statement -> INX register_pair_3 .)
    DCR             reduce using rule 61 (statement -> INX register_pair_3 .)
    INX             reduce using rule 61 (statement -> INX register_pair_3 .)
    DCX             reduce using rule 61 (statement -> INX register_pair_3 .)
    DAD             reduce using rule 61 (statement -> INX register_pair_3 .)
    ANA             reduce using rule 61 (statement -> INX register_pair_3 .)
    ORA             reduce using rule 61 (statement -> INX register_pair_3 .)
    XRA             reduce using rule 61 (statement -> INX register_pair_3 .)
    ANI             reduce using rule 61 (statement -> INX register_pair_3 .)
    ORI             reduce using rule 61 (statement -> INX register_pair_3 .)
    XRI             reduce using rule 61 (statement -> INX register_pair_3 .)
    CMA             reduce using rule 61 (statement -> INX register_pair_3 .)
    RLC             reduce using rule 61 (statement -> INX register_pair_3 .)
    RAL             reduce using rule 61 (statement -> INX register_pair_3 .)
    RRC             reduce using rule 61 (statement -> INX register_pair_3 .)
    RAR             reduce using rule 61 (statement -> INX register_pair_3 .)
    CMP             reduce using rule 61 (statement -> INX register_pair_3 .)
    CPI             reduce using rule 61 (statement -> INX register_pair_3 .)
    CMC             reduce using rule 61 (statement -> INX register_pair_3 .)
    STC             reduce using rule 61 (statement -> INX register_pair_3 .)
    DAA             reduce using rule 61 (statement -> INX register_pair_3 .)
    JMP             reduce using rule 61 (statement -> INX register_pair_3 .)
    JC              reduce using rule 61 (statement -> INX register_pair_3 .)
    JNC             reduce using rule 61 (statement -> INX register_pair_3 .)
    JZ              reduce using rule 61 (statement -> INX register_pair_3 .)
    JNZ             reduce using rule 61 (statement -> INX register_pair_3 .)
    JP              reduce using rule 61 (statement -> INX register_pair_3 .)
    JM              reduce using rule 61 (statement -> INX register_pair_3 .)
    JPE             reduce using rule 61 (statement -> INX register_pair_3 .)
    JPO             reduce using rule 61 (statement -> INX register_pair_3 .)
    CALL            reduce using rule 61 (statement -> INX register_pair_3 .)
    RET             reduce using rule 61 (statement -> INX register_pair_3 .)
    MACHINE         reduce using rule 61 (statement -> INX register_pair_3 .)
    $end            reduce using rule 61 (statement -> INX register_pair_3 .)


state 100

    (63) statement -> DCX register_pair_3 .

    MOV             reduce using rule 63 (statement -> DCX register_pair_3 .)
    LABEL           reduce using rule 63 (statement -> DCX register_pair_3 .)
    MVI             reduce using rule 63 (statement -> DCX register_pair_3 .)
    LXI             reduce using rule 63 (statement -> DCX register_pair_3 .)
    LDAX            reduce using rule 63 (statement -> DCX register_pair_3 .)
    STAX            reduce using rule 63 (statement -> DCX register_pair_3 .)
    LDA             reduce using rule 63 (statement -> DCX register_pair_3 .)
    STA             reduce using rule 63 (statement -> DCX register_pair_3 .)
    LHLD            reduce using rule 63 (statement -> DCX register_pair_3 .)
    SHLD            reduce using rule 63 (statement -> DCX register_pair_3 .)
    XCHG            reduce using rule 63 (statement -> DCX register_pair_3 .)
    ADD             reduce using rule 63 (statement -> DCX register_pair_3 .)
    ADI             reduce using rule 63 (statement -> DCX register_pair_3 .)
    ADC             reduce using rule 63 (statement -> DCX register_pair_3 .)
    ACI             reduce using rule 63 (statement -> DCX register_pair_3 .)
    SUB             reduce using rule 63 (statement -> DCX register_pair_3 .)
    SUI             reduce using rule 63 (statement -> DCX register_pair_3 .)
    SBB             reduce using rule 63 (statement -> DCX register_pair_3 .)
    SBI             reduce using rule 63 (statement -> DCX register_pair_3 .)
    INR             reduce using rule 63 (statement -> DCX register_pair_3 .)
    DCR             reduce using rule 63 (statement -> DCX register_pair_3 .)
    INX             reduce using rule 63 (statement -> DCX register_pair_3 .)
    DCX             reduce using rule 63 (statement -> DCX register_pair_3 .)
    DAD             reduce using rule 63 (statement -> DCX register_pair_3 .)
    ANA             reduce using rule 63 (statement -> DCX register_pair_3 .)
    ORA             reduce using rule 63 (statement -> DCX register_pair_3 .)
    XRA             reduce using rule 63 (statement -> DCX register_pair_3 .)
    ANI             reduce using rule 63 (statement -> DCX register_pair_3 .)
    ORI             reduce using rule 63 (statement -> DCX register_pair_3 .)
    XRI             reduce using rule 63 (statement -> DCX register_pair_3 .)
    CMA             reduce using rule 63 (statement -> DCX register_pair_3 .)
    RLC             reduce using rule 63 (statement -> DCX register_pair_3 .)
    RAL             reduce using rule 63 (statement -> DCX register_pair_3 .)
    RRC             reduce using rule 63 (statement -> DCX register_pair_3 .)
    RAR             reduce using rule 63 (statement -> DCX register_pair_3 .)
    CMP             reduce using rule 63 (statement -> DCX register_pair_3 .)
    CPI             reduce using rule 63 (statement -> DCX register_pair_3 .)
    CMC             reduce using rule 63 (statement -> DCX register_pair_3 .)
    STC             reduce using rule 63 (statement -> DCX register_pair_3 .)
    DAA             reduce using rule 63 (statement -> DCX register_pair_3 .)
    JMP             reduce using rule 63 (statement -> DCX register_pair_3 .)
    JC              reduce using rule 63 (statement -> DCX register_pair_3 .)
    JNC             reduce using rule 63 (statement -> DCX register_pair_3 .)
    JZ              reduce using rule 63 (statement -> DCX register_pair_3 .)
    JNZ             reduce using rule 63 (statement -> DCX register_pair_3 .)
    JP              reduce using rule 63 (statement -> DCX register_pair_3 .)
    JM              reduce using rule 63 (statement -> DCX register_pair_3 .)
    JPE             reduce using rule 63 (statement -> DCX register_pair_3 .)
    JPO             reduce using rule 63 (statement -> DCX register_pair_3 .)
    CALL            reduce using rule 63 (statement -> DCX register_pair_3 .)
    RET             reduce using rule 63 (statement -> DCX register_pair_3 .)
    MACHINE         reduce using rule 63 (statement -> DCX register_pair_3 .)
    $end            reduce using rule 63 (statement -> DCX register_pair_3 .)


state 101

    (65) statement -> DAD register_pair_3 .

    MOV             reduce using rule 65 (statement -> DAD register_pair_3 .)
    LABEL           reduce using rule 65 (statement -> DAD register_pair_3 .)
    MVI             reduce using rule 65 (statement -> DAD register_pair_3 .)
    LXI             reduce using rule 65 (statement -> DAD register_pair_3 .)
    LDAX            reduce using rule 65 (statement -> DAD register_pair_3 .)
    STAX            reduce using rule 65 (statement -> DAD register_pair_3 .)
    LDA             reduce using rule 65 (statement -> DAD register_pair_3 .)
    STA             reduce using rule 65 (statement -> DAD register_pair_3 .)
    LHLD            reduce using rule 65 (statement -> DAD register_pair_3 .)
    SHLD            reduce using rule 65 (statement -> DAD register_pair_3 .)
    XCHG            reduce using rule 65 (statement -> DAD register_pair_3 .)
    ADD             reduce using rule 65 (statement -> DAD register_pair_3 .)
    ADI             reduce using rule 65 (statement -> DAD register_pair_3 .)
    ADC             reduce using rule 65 (statement -> DAD register_pair_3 .)
    ACI             reduce using rule 65 (statement -> DAD register_pair_3 .)
    SUB             reduce using rule 65 (statement -> DAD register_pair_3 .)
    SUI             reduce using rule 65 (statement -> DAD register_pair_3 .)
    SBB             reduce using rule 65 (statement -> DAD register_pair_3 .)
    SBI             reduce using rule 65 (statement -> DAD register_pair_3 .)
    INR             reduce using rule 65 (statement -> DAD register_pair_3 .)
    DCR             reduce using rule 65 (statement -> DAD register_pair_3 .)
    INX             reduce using rule 65 (statement -> DAD register_pair_3 .)
    DCX             reduce using rule 65 (statement -> DAD register_pair_3 .)
    DAD             reduce using rule 65 (statement -> DAD register_pair_3 .)
    ANA             reduce using rule 65 (statement -> DAD register_pair_3 .)
    ORA             reduce using rule 65 (statement -> DAD register_pair_3 .)
    XRA             reduce using rule 65 (statement -> DAD register_pair_3 .)
    ANI             reduce using rule 65 (statement -> DAD register_pair_3 .)
    ORI             reduce using rule 65 (statement -> DAD register_pair_3 .)
    XRI             reduce using rule 65 (statement -> DAD register_pair_3 .)
    CMA             reduce using rule 65 (statement -> DAD register_pair_3 .)
    RLC             reduce using rule 65 (statement -> DAD register_pair_3 .)
    RAL             reduce using rule 65 (statement -> DAD register_pair_3 .)
    RRC             reduce using rule 65 (statement -> DAD register_pair_3 .)
    RAR             reduce using rule 65 (statement -> DAD register_pair_3 .)
    CMP             reduce using rule 65 (statement -> DAD register_pair_3 .)
    CPI             reduce using rule 65 (statement -> DAD register_pair_3 .)
    CMC             reduce using rule 65 (statement -> DAD register_pair_3 .)
    STC             reduce using rule 65 (statement -> DAD register_pair_3 .)
    DAA             reduce using rule 65 (statement -> DAD register_pair_3 .)
    JMP             reduce using rule 65 (statement -> DAD register_pair_3 .)
    JC              reduce using rule 65 (statement -> DAD register_pair_3 .)
    JNC             reduce using rule 65 (statement -> DAD register_pair_3 .)
    JZ              reduce using rule 65 (statement -> DAD register_pair_3 .)
    JNZ             reduce using rule 65 (statement -> DAD register_pair_3 .)
    JP              reduce using rule 65 (statement -> DAD register_pair_3 .)
    JM              reduce using rule 65 (statement -> DAD register_pair_3 .)
    JPE             reduce using rule 65 (statement -> DAD register_pair_3 .)
    JPO             reduce using rule 65 (statement -> DAD register_pair_3 .)
    CALL            reduce using rule 65 (statement -> DAD register_pair_3 .)
    RET             reduce using rule 65 (statement -> DAD register_pair_3 .)
    MACHINE         reduce using rule 65 (statement -> DAD register_pair_3 .)
    $end            reduce using rule 65 (statement -> DAD register_pair_3 .)


state 102

    (67) statement -> ANA register .

    MOV             reduce using rule 67 (statement -> ANA register .)
    LABEL           reduce using rule 67 (statement -> ANA register .)
    MVI             reduce using rule 67 (statement -> ANA register .)
    LXI             reduce using rule 67 (statement -> ANA register .)
    LDAX            reduce using rule 67 (statement -> ANA register .)
    STAX            reduce using rule 67 (statement -> ANA register .)
    LDA             reduce using rule 67 (statement -> ANA register .)
    STA             reduce using rule 67 (statement -> ANA register .)
    LHLD            reduce using rule 67 (statement -> ANA register .)
    SHLD            reduce using rule 67 (statement -> ANA register .)
    XCHG            reduce using rule 67 (statement -> ANA register .)
    ADD             reduce using rule 67 (statement -> ANA register .)
    ADI             reduce using rule 67 (statement -> ANA register .)
    ADC             reduce using rule 67 (statement -> ANA register .)
    ACI             reduce using rule 67 (statement -> ANA register .)
    SUB             reduce using rule 67 (statement -> ANA register .)
    SUI             reduce using rule 67 (statement -> ANA register .)
    SBB             reduce using rule 67 (statement -> ANA register .)
    SBI             reduce using rule 67 (statement -> ANA register .)
    INR             reduce using rule 67 (statement -> ANA register .)
    DCR             reduce using rule 67 (statement -> ANA register .)
    INX             reduce using rule 67 (statement -> ANA register .)
    DCX             reduce using rule 67 (statement -> ANA register .)
    DAD             reduce using rule 67 (statement -> ANA register .)
    ANA             reduce using rule 67 (statement -> ANA register .)
    ORA             reduce using rule 67 (statement -> ANA register .)
    XRA             reduce using rule 67 (statement -> ANA register .)
    ANI             reduce using rule 67 (statement -> ANA register .)
    ORI             reduce using rule 67 (statement -> ANA register .)
    XRI             reduce using rule 67 (statement -> ANA register .)
    CMA             reduce using rule 67 (statement -> ANA register .)
    RLC             reduce using rule 67 (statement -> ANA register .)
    RAL             reduce using rule 67 (statement -> ANA register .)
    RRC             reduce using rule 67 (statement -> ANA register .)
    RAR             reduce using rule 67 (statement -> ANA register .)
    CMP             reduce using rule 67 (statement -> ANA register .)
    CPI             reduce using rule 67 (statement -> ANA register .)
    CMC             reduce using rule 67 (statement -> ANA register .)
    STC             reduce using rule 67 (statement -> ANA register .)
    DAA             reduce using rule 67 (statement -> ANA register .)
    JMP             reduce using rule 67 (statement -> ANA register .)
    JC              reduce using rule 67 (statement -> ANA register .)
    JNC             reduce using rule 67 (statement -> ANA register .)
    JZ              reduce using rule 67 (statement -> ANA register .)
    JNZ             reduce using rule 67 (statement -> ANA register .)
    JP              reduce using rule 67 (statement -> ANA register .)
    JM              reduce using rule 67 (statement -> ANA register .)
    JPE             reduce using rule 67 (statement -> ANA register .)
    JPO             reduce using rule 67 (statement -> ANA register .)
    CALL            reduce using rule 67 (statement -> ANA register .)
    RET             reduce using rule 67 (statement -> ANA register .)
    MACHINE         reduce using rule 67 (statement -> ANA register .)
    $end            reduce using rule 67 (statement -> ANA register .)


state 103

    (68) statement -> ANA memory .

    MOV             reduce using rule 68 (statement -> ANA memory .)
    LABEL           reduce using rule 68 (statement -> ANA memory .)
    MVI             reduce using rule 68 (statement -> ANA memory .)
    LXI             reduce using rule 68 (statement -> ANA memory .)
    LDAX            reduce using rule 68 (statement -> ANA memory .)
    STAX            reduce using rule 68 (statement -> ANA memory .)
    LDA             reduce using rule 68 (statement -> ANA memory .)
    STA             reduce using rule 68 (statement -> ANA memory .)
    LHLD            reduce using rule 68 (statement -> ANA memory .)
    SHLD            reduce using rule 68 (statement -> ANA memory .)
    XCHG            reduce using rule 68 (statement -> ANA memory .)
    ADD             reduce using rule 68 (statement -> ANA memory .)
    ADI             reduce using rule 68 (statement -> ANA memory .)
    ADC             reduce using rule 68 (statement -> ANA memory .)
    ACI             reduce using rule 68 (statement -> ANA memory .)
    SUB             reduce using rule 68 (statement -> ANA memory .)
    SUI             reduce using rule 68 (statement -> ANA memory .)
    SBB             reduce using rule 68 (statement -> ANA memory .)
    SBI             reduce using rule 68 (statement -> ANA memory .)
    INR             reduce using rule 68 (statement -> ANA memory .)
    DCR             reduce using rule 68 (statement -> ANA memory .)
    INX             reduce using rule 68 (statement -> ANA memory .)
    DCX             reduce using rule 68 (statement -> ANA memory .)
    DAD             reduce using rule 68 (statement -> ANA memory .)
    ANA             reduce using rule 68 (statement -> ANA memory .)
    ORA             reduce using rule 68 (statement -> ANA memory .)
    XRA             reduce using rule 68 (statement -> ANA memory .)
    ANI             reduce using rule 68 (statement -> ANA memory .)
    ORI             reduce using rule 68 (statement -> ANA memory .)
    XRI             reduce using rule 68 (statement -> ANA memory .)
    CMA             reduce using rule 68 (statement -> ANA memory .)
    RLC             reduce using rule 68 (statement -> ANA memory .)
    RAL             reduce using rule 68 (statement -> ANA memory .)
    RRC             reduce using rule 68 (statement -> ANA memory .)
    RAR             reduce using rule 68 (statement -> ANA memory .)
    CMP             reduce using rule 68 (statement -> ANA memory .)
    CPI             reduce using rule 68 (statement -> ANA memory .)
    CMC             reduce using rule 68 (statement -> ANA memory .)
    STC             reduce using rule 68 (statement -> ANA memory .)
    DAA             reduce using rule 68 (statement -> ANA memory .)
    JMP             reduce using rule 68 (statement -> ANA memory .)
    JC              reduce using rule 68 (statement -> ANA memory .)
    JNC             reduce using rule 68 (statement -> ANA memory .)
    JZ              reduce using rule 68 (statement -> ANA memory .)
    JNZ             reduce using rule 68 (statement -> ANA memory .)
    JP              reduce using rule 68 (statement -> ANA memory .)
    JM              reduce using rule 68 (statement -> ANA memory .)
    JPE             reduce using rule 68 (statement -> ANA memory .)
    JPO             reduce using rule 68 (statement -> ANA memory .)
    CALL            reduce using rule 68 (statement -> ANA memory .)
    RET             reduce using rule 68 (statement -> ANA memory .)
    MACHINE         reduce using rule 68 (statement -> ANA memory .)
    $end            reduce using rule 68 (statement -> ANA memory .)


state 104

    (71) statement -> ORA register .

    MOV             reduce using rule 71 (statement -> ORA register .)
    LABEL           reduce using rule 71 (statement -> ORA register .)
    MVI             reduce using rule 71 (statement -> ORA register .)
    LXI             reduce using rule 71 (statement -> ORA register .)
    LDAX            reduce using rule 71 (statement -> ORA register .)
    STAX            reduce using rule 71 (statement -> ORA register .)
    LDA             reduce using rule 71 (statement -> ORA register .)
    STA             reduce using rule 71 (statement -> ORA register .)
    LHLD            reduce using rule 71 (statement -> ORA register .)
    SHLD            reduce using rule 71 (statement -> ORA register .)
    XCHG            reduce using rule 71 (statement -> ORA register .)
    ADD             reduce using rule 71 (statement -> ORA register .)
    ADI             reduce using rule 71 (statement -> ORA register .)
    ADC             reduce using rule 71 (statement -> ORA register .)
    ACI             reduce using rule 71 (statement -> ORA register .)
    SUB             reduce using rule 71 (statement -> ORA register .)
    SUI             reduce using rule 71 (statement -> ORA register .)
    SBB             reduce using rule 71 (statement -> ORA register .)
    SBI             reduce using rule 71 (statement -> ORA register .)
    INR             reduce using rule 71 (statement -> ORA register .)
    DCR             reduce using rule 71 (statement -> ORA register .)
    INX             reduce using rule 71 (statement -> ORA register .)
    DCX             reduce using rule 71 (statement -> ORA register .)
    DAD             reduce using rule 71 (statement -> ORA register .)
    ANA             reduce using rule 71 (statement -> ORA register .)
    ORA             reduce using rule 71 (statement -> ORA register .)
    XRA             reduce using rule 71 (statement -> ORA register .)
    ANI             reduce using rule 71 (statement -> ORA register .)
    ORI             reduce using rule 71 (statement -> ORA register .)
    XRI             reduce using rule 71 (statement -> ORA register .)
    CMA             reduce using rule 71 (statement -> ORA register .)
    RLC             reduce using rule 71 (statement -> ORA register .)
    RAL             reduce using rule 71 (statement -> ORA register .)
    RRC             reduce using rule 71 (statement -> ORA register .)
    RAR             reduce using rule 71 (statement -> ORA register .)
    CMP             reduce using rule 71 (statement -> ORA register .)
    CPI             reduce using rule 71 (statement -> ORA register .)
    CMC             reduce using rule 71 (statement -> ORA register .)
    STC             reduce using rule 71 (statement -> ORA register .)
    DAA             reduce using rule 71 (statement -> ORA register .)
    JMP             reduce using rule 71 (statement -> ORA register .)
    JC              reduce using rule 71 (statement -> ORA register .)
    JNC             reduce using rule 71 (statement -> ORA register .)
    JZ              reduce using rule 71 (statement -> ORA register .)
    JNZ             reduce using rule 71 (statement -> ORA register .)
    JP              reduce using rule 71 (statement -> ORA register .)
    JM              reduce using rule 71 (statement -> ORA register .)
    JPE             reduce using rule 71 (statement -> ORA register .)
    JPO             reduce using rule 71 (statement -> ORA register .)
    CALL            reduce using rule 71 (statement -> ORA register .)
    RET             reduce using rule 71 (statement -> ORA register .)
    MACHINE         reduce using rule 71 (statement -> ORA register .)
    $end            reduce using rule 71 (statement -> ORA register .)


state 105

    (72) statement -> ORA memory .

    MOV             reduce using rule 72 (statement -> ORA memory .)
    LABEL           reduce using rule 72 (statement -> ORA memory .)
    MVI             reduce using rule 72 (statement -> ORA memory .)
    LXI             reduce using rule 72 (statement -> ORA memory .)
    LDAX            reduce using rule 72 (statement -> ORA memory .)
    STAX            reduce using rule 72 (statement -> ORA memory .)
    LDA             reduce using rule 72 (statement -> ORA memory .)
    STA             reduce using rule 72 (statement -> ORA memory .)
    LHLD            reduce using rule 72 (statement -> ORA memory .)
    SHLD            reduce using rule 72 (statement -> ORA memory .)
    XCHG            reduce using rule 72 (statement -> ORA memory .)
    ADD             reduce using rule 72 (statement -> ORA memory .)
    ADI             reduce using rule 72 (statement -> ORA memory .)
    ADC             reduce using rule 72 (statement -> ORA memory .)
    ACI             reduce using rule 72 (statement -> ORA memory .)
    SUB             reduce using rule 72 (statement -> ORA memory .)
    SUI             reduce using rule 72 (statement -> ORA memory .)
    SBB             reduce using rule 72 (statement -> ORA memory .)
    SBI             reduce using rule 72 (statement -> ORA memory .)
    INR             reduce using rule 72 (statement -> ORA memory .)
    DCR             reduce using rule 72 (statement -> ORA memory .)
    INX             reduce using rule 72 (statement -> ORA memory .)
    DCX             reduce using rule 72 (statement -> ORA memory .)
    DAD             reduce using rule 72 (statement -> ORA memory .)
    ANA             reduce using rule 72 (statement -> ORA memory .)
    ORA             reduce using rule 72 (statement -> ORA memory .)
    XRA             reduce using rule 72 (statement -> ORA memory .)
    ANI             reduce using rule 72 (statement -> ORA memory .)
    ORI             reduce using rule 72 (statement -> ORA memory .)
    XRI             reduce using rule 72 (statement -> ORA memory .)
    CMA             reduce using rule 72 (statement -> ORA memory .)
    RLC             reduce using rule 72 (statement -> ORA memory .)
    RAL             reduce using rule 72 (statement -> ORA memory .)
    RRC             reduce using rule 72 (statement -> ORA memory .)
    RAR             reduce using rule 72 (statement -> ORA memory .)
    CMP             reduce using rule 72 (statement -> ORA memory .)
    CPI             reduce using rule 72 (statement -> ORA memory .)
    CMC             reduce using rule 72 (statement -> ORA memory .)
    STC             reduce using rule 72 (statement -> ORA memory .)
    DAA             reduce using rule 72 (statement -> ORA memory .)
    JMP             reduce using rule 72 (statement -> ORA memory .)
    JC              reduce using rule 72 (statement -> ORA memory .)
    JNC             reduce using rule 72 (statement -> ORA memory .)
    JZ              reduce using rule 72 (statement -> ORA memory .)
    JNZ             reduce using rule 72 (statement -> ORA memory .)
    JP              reduce using rule 72 (statement -> ORA memory .)
    JM              reduce using rule 72 (statement -> ORA memory .)
    JPE             reduce using rule 72 (statement -> ORA memory .)
    JPO             reduce using rule 72 (statement -> ORA memory .)
    CALL            reduce using rule 72 (statement -> ORA memory .)
    RET             reduce using rule 72 (statement -> ORA memory .)
    MACHINE         reduce using rule 72 (statement -> ORA memory .)
    $end            reduce using rule 72 (statement -> ORA memory .)


state 106

    (75) statement -> XRA register .

    MOV             reduce using rule 75 (statement -> XRA register .)
    LABEL           reduce using rule 75 (statement -> XRA register .)
    MVI             reduce using rule 75 (statement -> XRA register .)
    LXI             reduce using rule 75 (statement -> XRA register .)
    LDAX            reduce using rule 75 (statement -> XRA register .)
    STAX            reduce using rule 75 (statement -> XRA register .)
    LDA             reduce using rule 75 (statement -> XRA register .)
    STA             reduce using rule 75 (statement -> XRA register .)
    LHLD            reduce using rule 75 (statement -> XRA register .)
    SHLD            reduce using rule 75 (statement -> XRA register .)
    XCHG            reduce using rule 75 (statement -> XRA register .)
    ADD             reduce using rule 75 (statement -> XRA register .)
    ADI             reduce using rule 75 (statement -> XRA register .)
    ADC             reduce using rule 75 (statement -> XRA register .)
    ACI             reduce using rule 75 (statement -> XRA register .)
    SUB             reduce using rule 75 (statement -> XRA register .)
    SUI             reduce using rule 75 (statement -> XRA register .)
    SBB             reduce using rule 75 (statement -> XRA register .)
    SBI             reduce using rule 75 (statement -> XRA register .)
    INR             reduce using rule 75 (statement -> XRA register .)
    DCR             reduce using rule 75 (statement -> XRA register .)
    INX             reduce using rule 75 (statement -> XRA register .)
    DCX             reduce using rule 75 (statement -> XRA register .)
    DAD             reduce using rule 75 (statement -> XRA register .)
    ANA             reduce using rule 75 (statement -> XRA register .)
    ORA             reduce using rule 75 (statement -> XRA register .)
    XRA             reduce using rule 75 (statement -> XRA register .)
    ANI             reduce using rule 75 (statement -> XRA register .)
    ORI             reduce using rule 75 (statement -> XRA register .)
    XRI             reduce using rule 75 (statement -> XRA register .)
    CMA             reduce using rule 75 (statement -> XRA register .)
    RLC             reduce using rule 75 (statement -> XRA register .)
    RAL             reduce using rule 75 (statement -> XRA register .)
    RRC             reduce using rule 75 (statement -> XRA register .)
    RAR             reduce using rule 75 (statement -> XRA register .)
    CMP             reduce using rule 75 (statement -> XRA register .)
    CPI             reduce using rule 75 (statement -> XRA register .)
    CMC             reduce using rule 75 (statement -> XRA register .)
    STC             reduce using rule 75 (statement -> XRA register .)
    DAA             reduce using rule 75 (statement -> XRA register .)
    JMP             reduce using rule 75 (statement -> XRA register .)
    JC              reduce using rule 75 (statement -> XRA register .)
    JNC             reduce using rule 75 (statement -> XRA register .)
    JZ              reduce using rule 75 (statement -> XRA register .)
    JNZ             reduce using rule 75 (statement -> XRA register .)
    JP              reduce using rule 75 (statement -> XRA register .)
    JM              reduce using rule 75 (statement -> XRA register .)
    JPE             reduce using rule 75 (statement -> XRA register .)
    JPO             reduce using rule 75 (statement -> XRA register .)
    CALL            reduce using rule 75 (statement -> XRA register .)
    RET             reduce using rule 75 (statement -> XRA register .)
    MACHINE         reduce using rule 75 (statement -> XRA register .)
    $end            reduce using rule 75 (statement -> XRA register .)


state 107

    (76) statement -> XRA memory .

    MOV             reduce using rule 76 (statement -> XRA memory .)
    LABEL           reduce using rule 76 (statement -> XRA memory .)
    MVI             reduce using rule 76 (statement -> XRA memory .)
    LXI             reduce using rule 76 (statement -> XRA memory .)
    LDAX            reduce using rule 76 (statement -> XRA memory .)
    STAX            reduce using rule 76 (statement -> XRA memory .)
    LDA             reduce using rule 76 (statement -> XRA memory .)
    STA             reduce using rule 76 (statement -> XRA memory .)
    LHLD            reduce using rule 76 (statement -> XRA memory .)
    SHLD            reduce using rule 76 (statement -> XRA memory .)
    XCHG            reduce using rule 76 (statement -> XRA memory .)
    ADD             reduce using rule 76 (statement -> XRA memory .)
    ADI             reduce using rule 76 (statement -> XRA memory .)
    ADC             reduce using rule 76 (statement -> XRA memory .)
    ACI             reduce using rule 76 (statement -> XRA memory .)
    SUB             reduce using rule 76 (statement -> XRA memory .)
    SUI             reduce using rule 76 (statement -> XRA memory .)
    SBB             reduce using rule 76 (statement -> XRA memory .)
    SBI             reduce using rule 76 (statement -> XRA memory .)
    INR             reduce using rule 76 (statement -> XRA memory .)
    DCR             reduce using rule 76 (statement -> XRA memory .)
    INX             reduce using rule 76 (statement -> XRA memory .)
    DCX             reduce using rule 76 (statement -> XRA memory .)
    DAD             reduce using rule 76 (statement -> XRA memory .)
    ANA             reduce using rule 76 (statement -> XRA memory .)
    ORA             reduce using rule 76 (statement -> XRA memory .)
    XRA             reduce using rule 76 (statement -> XRA memory .)
    ANI             reduce using rule 76 (statement -> XRA memory .)
    ORI             reduce using rule 76 (statement -> XRA memory .)
    XRI             reduce using rule 76 (statement -> XRA memory .)
    CMA             reduce using rule 76 (statement -> XRA memory .)
    RLC             reduce using rule 76 (statement -> XRA memory .)
    RAL             reduce using rule 76 (statement -> XRA memory .)
    RRC             reduce using rule 76 (statement -> XRA memory .)
    RAR             reduce using rule 76 (statement -> XRA memory .)
    CMP             reduce using rule 76 (statement -> XRA memory .)
    CPI             reduce using rule 76 (statement -> XRA memory .)
    CMC             reduce using rule 76 (statement -> XRA memory .)
    STC             reduce using rule 76 (statement -> XRA memory .)
    DAA             reduce using rule 76 (statement -> XRA memory .)
    JMP             reduce using rule 76 (statement -> XRA memory .)
    JC              reduce using rule 76 (statement -> XRA memory .)
    JNC             reduce using rule 76 (statement -> XRA memory .)
    JZ              reduce using rule 76 (statement -> XRA memory .)
    JNZ             reduce using rule 76 (statement -> XRA memory .)
    JP              reduce using rule 76 (statement -> XRA memory .)
    JM              reduce using rule 76 (statement -> XRA memory .)
    JPE             reduce using rule 76 (statement -> XRA memory .)
    JPO             reduce using rule 76 (statement -> XRA memory .)
    CALL            reduce using rule 76 (statement -> XRA memory .)
    RET             reduce using rule 76 (statement -> XRA memory .)
    MACHINE         reduce using rule 76 (statement -> XRA memory .)
    $end            reduce using rule 76 (statement -> XRA memory .)


state 108

    (79) statement -> ANI byte_8 .

    MOV             reduce using rule 79 (statement -> ANI byte_8 .)
    LABEL           reduce using rule 79 (statement -> ANI byte_8 .)
    MVI             reduce using rule 79 (statement -> ANI byte_8 .)
    LXI             reduce using rule 79 (statement -> ANI byte_8 .)
    LDAX            reduce using rule 79 (statement -> ANI byte_8 .)
    STAX            reduce using rule 79 (statement -> ANI byte_8 .)
    LDA             reduce using rule 79 (statement -> ANI byte_8 .)
    STA             reduce using rule 79 (statement -> ANI byte_8 .)
    LHLD            reduce using rule 79 (statement -> ANI byte_8 .)
    SHLD            reduce using rule 79 (statement -> ANI byte_8 .)
    XCHG            reduce using rule 79 (statement -> ANI byte_8 .)
    ADD             reduce using rule 79 (statement -> ANI byte_8 .)
    ADI             reduce using rule 79 (statement -> ANI byte_8 .)
    ADC             reduce using rule 79 (statement -> ANI byte_8 .)
    ACI             reduce using rule 79 (statement -> ANI byte_8 .)
    SUB             reduce using rule 79 (statement -> ANI byte_8 .)
    SUI             reduce using rule 79 (statement -> ANI byte_8 .)
    SBB             reduce using rule 79 (statement -> ANI byte_8 .)
    SBI             reduce using rule 79 (statement -> ANI byte_8 .)
    INR             reduce using rule 79 (statement -> ANI byte_8 .)
    DCR             reduce using rule 79 (statement -> ANI byte_8 .)
    INX             reduce using rule 79 (statement -> ANI byte_8 .)
    DCX             reduce using rule 79 (statement -> ANI byte_8 .)
    DAD             reduce using rule 79 (statement -> ANI byte_8 .)
    ANA             reduce using rule 79 (statement -> ANI byte_8 .)
    ORA             reduce using rule 79 (statement -> ANI byte_8 .)
    XRA             reduce using rule 79 (statement -> ANI byte_8 .)
    ANI             reduce using rule 79 (statement -> ANI byte_8 .)
    ORI             reduce using rule 79 (statement -> ANI byte_8 .)
    XRI             reduce using rule 79 (statement -> ANI byte_8 .)
    CMA             reduce using rule 79 (statement -> ANI byte_8 .)
    RLC             reduce using rule 79 (statement -> ANI byte_8 .)
    RAL             reduce using rule 79 (statement -> ANI byte_8 .)
    RRC             reduce using rule 79 (statement -> ANI byte_8 .)
    RAR             reduce using rule 79 (statement -> ANI byte_8 .)
    CMP             reduce using rule 79 (statement -> ANI byte_8 .)
    CPI             reduce using rule 79 (statement -> ANI byte_8 .)
    CMC             reduce using rule 79 (statement -> ANI byte_8 .)
    STC             reduce using rule 79 (statement -> ANI byte_8 .)
    DAA             reduce using rule 79 (statement -> ANI byte_8 .)
    JMP             reduce using rule 79 (statement -> ANI byte_8 .)
    JC              reduce using rule 79 (statement -> ANI byte_8 .)
    JNC             reduce using rule 79 (statement -> ANI byte_8 .)
    JZ              reduce using rule 79 (statement -> ANI byte_8 .)
    JNZ             reduce using rule 79 (statement -> ANI byte_8 .)
    JP              reduce using rule 79 (statement -> ANI byte_8 .)
    JM              reduce using rule 79 (statement -> ANI byte_8 .)
    JPE             reduce using rule 79 (statement -> ANI byte_8 .)
    JPO             reduce using rule 79 (statement -> ANI byte_8 .)
    CALL            reduce using rule 79 (statement -> ANI byte_8 .)
    RET             reduce using rule 79 (statement -> ANI byte_8 .)
    MACHINE         reduce using rule 79 (statement -> ANI byte_8 .)
    $end            reduce using rule 79 (statement -> ANI byte_8 .)


state 109

    (81) statement -> ORI byte_8 .

    MOV             reduce using rule 81 (statement -> ORI byte_8 .)
    LABEL           reduce using rule 81 (statement -> ORI byte_8 .)
    MVI             reduce using rule 81 (statement -> ORI byte_8 .)
    LXI             reduce using rule 81 (statement -> ORI byte_8 .)
    LDAX            reduce using rule 81 (statement -> ORI byte_8 .)
    STAX            reduce using rule 81 (statement -> ORI byte_8 .)
    LDA             reduce using rule 81 (statement -> ORI byte_8 .)
    STA             reduce using rule 81 (statement -> ORI byte_8 .)
    LHLD            reduce using rule 81 (statement -> ORI byte_8 .)
    SHLD            reduce using rule 81 (statement -> ORI byte_8 .)
    XCHG            reduce using rule 81 (statement -> ORI byte_8 .)
    ADD             reduce using rule 81 (statement -> ORI byte_8 .)
    ADI             reduce using rule 81 (statement -> ORI byte_8 .)
    ADC             reduce using rule 81 (statement -> ORI byte_8 .)
    ACI             reduce using rule 81 (statement -> ORI byte_8 .)
    SUB             reduce using rule 81 (statement -> ORI byte_8 .)
    SUI             reduce using rule 81 (statement -> ORI byte_8 .)
    SBB             reduce using rule 81 (statement -> ORI byte_8 .)
    SBI             reduce using rule 81 (statement -> ORI byte_8 .)
    INR             reduce using rule 81 (statement -> ORI byte_8 .)
    DCR             reduce using rule 81 (statement -> ORI byte_8 .)
    INX             reduce using rule 81 (statement -> ORI byte_8 .)
    DCX             reduce using rule 81 (statement -> ORI byte_8 .)
    DAD             reduce using rule 81 (statement -> ORI byte_8 .)
    ANA             reduce using rule 81 (statement -> ORI byte_8 .)
    ORA             reduce using rule 81 (statement -> ORI byte_8 .)
    XRA             reduce using rule 81 (statement -> ORI byte_8 .)
    ANI             reduce using rule 81 (statement -> ORI byte_8 .)
    ORI             reduce using rule 81 (statement -> ORI byte_8 .)
    XRI             reduce using rule 81 (statement -> ORI byte_8 .)
    CMA             reduce using rule 81 (statement -> ORI byte_8 .)
    RLC             reduce using rule 81 (statement -> ORI byte_8 .)
    RAL             reduce using rule 81 (statement -> ORI byte_8 .)
    RRC             reduce using rule 81 (statement -> ORI byte_8 .)
    RAR             reduce using rule 81 (statement -> ORI byte_8 .)
    CMP             reduce using rule 81 (statement -> ORI byte_8 .)
    CPI             reduce using rule 81 (statement -> ORI byte_8 .)
    CMC             reduce using rule 81 (statement -> ORI byte_8 .)
    STC             reduce using rule 81 (statement -> ORI byte_8 .)
    DAA             reduce using rule 81 (statement -> ORI byte_8 .)
    JMP             reduce using rule 81 (statement -> ORI byte_8 .)
    JC              reduce using rule 81 (statement -> ORI byte_8 .)
    JNC             reduce using rule 81 (statement -> ORI byte_8 .)
    JZ              reduce using rule 81 (statement -> ORI byte_8 .)
    JNZ             reduce using rule 81 (statement -> ORI byte_8 .)
    JP              reduce using rule 81 (statement -> ORI byte_8 .)
    JM              reduce using rule 81 (statement -> ORI byte_8 .)
    JPE             reduce using rule 81 (statement -> ORI byte_8 .)
    JPO             reduce using rule 81 (statement -> ORI byte_8 .)
    CALL            reduce using rule 81 (statement -> ORI byte_8 .)
    RET             reduce using rule 81 (statement -> ORI byte_8 .)
    MACHINE         reduce using rule 81 (statement -> ORI byte_8 .)
    $end            reduce using rule 81 (statement -> ORI byte_8 .)


state 110

    (83) statement -> XRI byte_8 .

    MOV             reduce using rule 83 (statement -> XRI byte_8 .)
    LABEL           reduce using rule 83 (statement -> XRI byte_8 .)
    MVI             reduce using rule 83 (statement -> XRI byte_8 .)
    LXI             reduce using rule 83 (statement -> XRI byte_8 .)
    LDAX            reduce using rule 83 (statement -> XRI byte_8 .)
    STAX            reduce using rule 83 (statement -> XRI byte_8 .)
    LDA             reduce using rule 83 (statement -> XRI byte_8 .)
    STA             reduce using rule 83 (statement -> XRI byte_8 .)
    LHLD            reduce using rule 83 (statement -> XRI byte_8 .)
    SHLD            reduce using rule 83 (statement -> XRI byte_8 .)
    XCHG            reduce using rule 83 (statement -> XRI byte_8 .)
    ADD             reduce using rule 83 (statement -> XRI byte_8 .)
    ADI             reduce using rule 83 (statement -> XRI byte_8 .)
    ADC             reduce using rule 83 (statement -> XRI byte_8 .)
    ACI             reduce using rule 83 (statement -> XRI byte_8 .)
    SUB             reduce using rule 83 (statement -> XRI byte_8 .)
    SUI             reduce using rule 83 (statement -> XRI byte_8 .)
    SBB             reduce using rule 83 (statement -> XRI byte_8 .)
    SBI             reduce using rule 83 (statement -> XRI byte_8 .)
    INR             reduce using rule 83 (statement -> XRI byte_8 .)
    DCR             reduce using rule 83 (statement -> XRI byte_8 .)
    INX             reduce using rule 83 (statement -> XRI byte_8 .)
    DCX             reduce using rule 83 (statement -> XRI byte_8 .)
    DAD             reduce using rule 83 (statement -> XRI byte_8 .)
    ANA             reduce using rule 83 (statement -> XRI byte_8 .)
    ORA             reduce using rule 83 (statement -> XRI byte_8 .)
    XRA             reduce using rule 83 (statement -> XRI byte_8 .)
    ANI             reduce using rule 83 (statement -> XRI byte_8 .)
    ORI             reduce using rule 83 (statement -> XRI byte_8 .)
    XRI             reduce using rule 83 (statement -> XRI byte_8 .)
    CMA             reduce using rule 83 (statement -> XRI byte_8 .)
    RLC             reduce using rule 83 (statement -> XRI byte_8 .)
    RAL             reduce using rule 83 (statement -> XRI byte_8 .)
    RRC             reduce using rule 83 (statement -> XRI byte_8 .)
    RAR             reduce using rule 83 (statement -> XRI byte_8 .)
    CMP             reduce using rule 83 (statement -> XRI byte_8 .)
    CPI             reduce using rule 83 (statement -> XRI byte_8 .)
    CMC             reduce using rule 83 (statement -> XRI byte_8 .)
    STC             reduce using rule 83 (statement -> XRI byte_8 .)
    DAA             reduce using rule 83 (statement -> XRI byte_8 .)
    JMP             reduce using rule 83 (statement -> XRI byte_8 .)
    JC              reduce using rule 83 (statement -> XRI byte_8 .)
    JNC             reduce using rule 83 (statement -> XRI byte_8 .)
    JZ              reduce using rule 83 (statement -> XRI byte_8 .)
    JNZ             reduce using rule 83 (statement -> XRI byte_8 .)
    JP              reduce using rule 83 (statement -> XRI byte_8 .)
    JM              reduce using rule 83 (statement -> XRI byte_8 .)
    JPE             reduce using rule 83 (statement -> XRI byte_8 .)
    JPO             reduce using rule 83 (statement -> XRI byte_8 .)
    CALL            reduce using rule 83 (statement -> XRI byte_8 .)
    RET             reduce using rule 83 (statement -> XRI byte_8 .)
    MACHINE         reduce using rule 83 (statement -> XRI byte_8 .)
    $end            reduce using rule 83 (statement -> XRI byte_8 .)


state 111

    (95) statement -> CMP register .

    MOV             reduce using rule 95 (statement -> CMP register .)
    LABEL           reduce using rule 95 (statement -> CMP register .)
    MVI             reduce using rule 95 (statement -> CMP register .)
    LXI             reduce using rule 95 (statement -> CMP register .)
    LDAX            reduce using rule 95 (statement -> CMP register .)
    STAX            reduce using rule 95 (statement -> CMP register .)
    LDA             reduce using rule 95 (statement -> CMP register .)
    STA             reduce using rule 95 (statement -> CMP register .)
    LHLD            reduce using rule 95 (statement -> CMP register .)
    SHLD            reduce using rule 95 (statement -> CMP register .)
    XCHG            reduce using rule 95 (statement -> CMP register .)
    ADD             reduce using rule 95 (statement -> CMP register .)
    ADI             reduce using rule 95 (statement -> CMP register .)
    ADC             reduce using rule 95 (statement -> CMP register .)
    ACI             reduce using rule 95 (statement -> CMP register .)
    SUB             reduce using rule 95 (statement -> CMP register .)
    SUI             reduce using rule 95 (statement -> CMP register .)
    SBB             reduce using rule 95 (statement -> CMP register .)
    SBI             reduce using rule 95 (statement -> CMP register .)
    INR             reduce using rule 95 (statement -> CMP register .)
    DCR             reduce using rule 95 (statement -> CMP register .)
    INX             reduce using rule 95 (statement -> CMP register .)
    DCX             reduce using rule 95 (statement -> CMP register .)
    DAD             reduce using rule 95 (statement -> CMP register .)
    ANA             reduce using rule 95 (statement -> CMP register .)
    ORA             reduce using rule 95 (statement -> CMP register .)
    XRA             reduce using rule 95 (statement -> CMP register .)
    ANI             reduce using rule 95 (statement -> CMP register .)
    ORI             reduce using rule 95 (statement -> CMP register .)
    XRI             reduce using rule 95 (statement -> CMP register .)
    CMA             reduce using rule 95 (statement -> CMP register .)
    RLC             reduce using rule 95 (statement -> CMP register .)
    RAL             reduce using rule 95 (statement -> CMP register .)
    RRC             reduce using rule 95 (statement -> CMP register .)
    RAR             reduce using rule 95 (statement -> CMP register .)
    CMP             reduce using rule 95 (statement -> CMP register .)
    CPI             reduce using rule 95 (statement -> CMP register .)
    CMC             reduce using rule 95 (statement -> CMP register .)
    STC             reduce using rule 95 (statement -> CMP register .)
    DAA             reduce using rule 95 (statement -> CMP register .)
    JMP             reduce using rule 95 (statement -> CMP register .)
    JC              reduce using rule 95 (statement -> CMP register .)
    JNC             reduce using rule 95 (statement -> CMP register .)
    JZ              reduce using rule 95 (statement -> CMP register .)
    JNZ             reduce using rule 95 (statement -> CMP register .)
    JP              reduce using rule 95 (statement -> CMP register .)
    JM              reduce using rule 95 (statement -> CMP register .)
    JPE             reduce using rule 95 (statement -> CMP register .)
    JPO             reduce using rule 95 (statement -> CMP register .)
    CALL            reduce using rule 95 (statement -> CMP register .)
    RET             reduce using rule 95 (statement -> CMP register .)
    MACHINE         reduce using rule 95 (statement -> CMP register .)
    $end            reduce using rule 95 (statement -> CMP register .)


state 112

    (96) statement -> CMP memory .

    MOV             reduce using rule 96 (statement -> CMP memory .)
    LABEL           reduce using rule 96 (statement -> CMP memory .)
    MVI             reduce using rule 96 (statement -> CMP memory .)
    LXI             reduce using rule 96 (statement -> CMP memory .)
    LDAX            reduce using rule 96 (statement -> CMP memory .)
    STAX            reduce using rule 96 (statement -> CMP memory .)
    LDA             reduce using rule 96 (statement -> CMP memory .)
    STA             reduce using rule 96 (statement -> CMP memory .)
    LHLD            reduce using rule 96 (statement -> CMP memory .)
    SHLD            reduce using rule 96 (statement -> CMP memory .)
    XCHG            reduce using rule 96 (statement -> CMP memory .)
    ADD             reduce using rule 96 (statement -> CMP memory .)
    ADI             reduce using rule 96 (statement -> CMP memory .)
    ADC             reduce using rule 96 (statement -> CMP memory .)
    ACI             reduce using rule 96 (statement -> CMP memory .)
    SUB             reduce using rule 96 (statement -> CMP memory .)
    SUI             reduce using rule 96 (statement -> CMP memory .)
    SBB             reduce using rule 96 (statement -> CMP memory .)
    SBI             reduce using rule 96 (statement -> CMP memory .)
    INR             reduce using rule 96 (statement -> CMP memory .)
    DCR             reduce using rule 96 (statement -> CMP memory .)
    INX             reduce using rule 96 (statement -> CMP memory .)
    DCX             reduce using rule 96 (statement -> CMP memory .)
    DAD             reduce using rule 96 (statement -> CMP memory .)
    ANA             reduce using rule 96 (statement -> CMP memory .)
    ORA             reduce using rule 96 (statement -> CMP memory .)
    XRA             reduce using rule 96 (statement -> CMP memory .)
    ANI             reduce using rule 96 (statement -> CMP memory .)
    ORI             reduce using rule 96 (statement -> CMP memory .)
    XRI             reduce using rule 96 (statement -> CMP memory .)
    CMA             reduce using rule 96 (statement -> CMP memory .)
    RLC             reduce using rule 96 (statement -> CMP memory .)
    RAL             reduce using rule 96 (statement -> CMP memory .)
    RRC             reduce using rule 96 (statement -> CMP memory .)
    RAR             reduce using rule 96 (statement -> CMP memory .)
    CMP             reduce using rule 96 (statement -> CMP memory .)
    CPI             reduce using rule 96 (statement -> CMP memory .)
    CMC             reduce using rule 96 (statement -> CMP memory .)
    STC             reduce using rule 96 (statement -> CMP memory .)
    DAA             reduce using rule 96 (statement -> CMP memory .)
    JMP             reduce using rule 96 (statement -> CMP memory .)
    JC              reduce using rule 96 (statement -> CMP memory .)
    JNC             reduce using rule 96 (statement -> CMP memory .)
    JZ              reduce using rule 96 (statement -> CMP memory .)
    JNZ             reduce using rule 96 (statement -> CMP memory .)
    JP              reduce using rule 96 (statement -> CMP memory .)
    JM              reduce using rule 96 (statement -> CMP memory .)
    JPE             reduce using rule 96 (statement -> CMP memory .)
    JPO             reduce using rule 96 (statement -> CMP memory .)
    CALL            reduce using rule 96 (statement -> CMP memory .)
    RET             reduce using rule 96 (statement -> CMP memory .)
    MACHINE         reduce using rule 96 (statement -> CMP memory .)
    $end            reduce using rule 96 (statement -> CMP memory .)


state 113

    (99) statement -> CPI byte_8 .

    MOV             reduce using rule 99 (statement -> CPI byte_8 .)
    LABEL           reduce using rule 99 (statement -> CPI byte_8 .)
    MVI             reduce using rule 99 (statement -> CPI byte_8 .)
    LXI             reduce using rule 99 (statement -> CPI byte_8 .)
    LDAX            reduce using rule 99 (statement -> CPI byte_8 .)
    STAX            reduce using rule 99 (statement -> CPI byte_8 .)
    LDA             reduce using rule 99 (statement -> CPI byte_8 .)
    STA             reduce using rule 99 (statement -> CPI byte_8 .)
    LHLD            reduce using rule 99 (statement -> CPI byte_8 .)
    SHLD            reduce using rule 99 (statement -> CPI byte_8 .)
    XCHG            reduce using rule 99 (statement -> CPI byte_8 .)
    ADD             reduce using rule 99 (statement -> CPI byte_8 .)
    ADI             reduce using rule 99 (statement -> CPI byte_8 .)
    ADC             reduce using rule 99 (statement -> CPI byte_8 .)
    ACI             reduce using rule 99 (statement -> CPI byte_8 .)
    SUB             reduce using rule 99 (statement -> CPI byte_8 .)
    SUI             reduce using rule 99 (statement -> CPI byte_8 .)
    SBB             reduce using rule 99 (statement -> CPI byte_8 .)
    SBI             reduce using rule 99 (statement -> CPI byte_8 .)
    INR             reduce using rule 99 (statement -> CPI byte_8 .)
    DCR             reduce using rule 99 (statement -> CPI byte_8 .)
    INX             reduce using rule 99 (statement -> CPI byte_8 .)
    DCX             reduce using rule 99 (statement -> CPI byte_8 .)
    DAD             reduce using rule 99 (statement -> CPI byte_8 .)
    ANA             reduce using rule 99 (statement -> CPI byte_8 .)
    ORA             reduce using rule 99 (statement -> CPI byte_8 .)
    XRA             reduce using rule 99 (statement -> CPI byte_8 .)
    ANI             reduce using rule 99 (statement -> CPI byte_8 .)
    ORI             reduce using rule 99 (statement -> CPI byte_8 .)
    XRI             reduce using rule 99 (statement -> CPI byte_8 .)
    CMA             reduce using rule 99 (statement -> CPI byte_8 .)
    RLC             reduce using rule 99 (statement -> CPI byte_8 .)
    RAL             reduce using rule 99 (statement -> CPI byte_8 .)
    RRC             reduce using rule 99 (statement -> CPI byte_8 .)
    RAR             reduce using rule 99 (statement -> CPI byte_8 .)
    CMP             reduce using rule 99 (statement -> CPI byte_8 .)
    CPI             reduce using rule 99 (statement -> CPI byte_8 .)
    CMC             reduce using rule 99 (statement -> CPI byte_8 .)
    STC             reduce using rule 99 (statement -> CPI byte_8 .)
    DAA             reduce using rule 99 (statement -> CPI byte_8 .)
    JMP             reduce using rule 99 (statement -> CPI byte_8 .)
    JC              reduce using rule 99 (statement -> CPI byte_8 .)
    JNC             reduce using rule 99 (statement -> CPI byte_8 .)
    JZ              reduce using rule 99 (statement -> CPI byte_8 .)
    JNZ             reduce using rule 99 (statement -> CPI byte_8 .)
    JP              reduce using rule 99 (statement -> CPI byte_8 .)
    JM              reduce using rule 99 (statement -> CPI byte_8 .)
    JPE             reduce using rule 99 (statement -> CPI byte_8 .)
    JPO             reduce using rule 99 (statement -> CPI byte_8 .)
    CALL            reduce using rule 99 (statement -> CPI byte_8 .)
    RET             reduce using rule 99 (statement -> CPI byte_8 .)
    MACHINE         reduce using rule 99 (statement -> CPI byte_8 .)
    $end            reduce using rule 99 (statement -> CPI byte_8 .)


state 114

    (107) statement -> JMP byte_16 .

    MOV             reduce using rule 107 (statement -> JMP byte_16 .)
    LABEL           reduce using rule 107 (statement -> JMP byte_16 .)
    MVI             reduce using rule 107 (statement -> JMP byte_16 .)
    LXI             reduce using rule 107 (statement -> JMP byte_16 .)
    LDAX            reduce using rule 107 (statement -> JMP byte_16 .)
    STAX            reduce using rule 107 (statement -> JMP byte_16 .)
    LDA             reduce using rule 107 (statement -> JMP byte_16 .)
    STA             reduce using rule 107 (statement -> JMP byte_16 .)
    LHLD            reduce using rule 107 (statement -> JMP byte_16 .)
    SHLD            reduce using rule 107 (statement -> JMP byte_16 .)
    XCHG            reduce using rule 107 (statement -> JMP byte_16 .)
    ADD             reduce using rule 107 (statement -> JMP byte_16 .)
    ADI             reduce using rule 107 (statement -> JMP byte_16 .)
    ADC             reduce using rule 107 (statement -> JMP byte_16 .)
    ACI             reduce using rule 107 (statement -> JMP byte_16 .)
    SUB             reduce using rule 107 (statement -> JMP byte_16 .)
    SUI             reduce using rule 107 (statement -> JMP byte_16 .)
    SBB             reduce using rule 107 (statement -> JMP byte_16 .)
    SBI             reduce using rule 107 (statement -> JMP byte_16 .)
    INR             reduce using rule 107 (statement -> JMP byte_16 .)
    DCR             reduce using rule 107 (statement -> JMP byte_16 .)
    INX             reduce using rule 107 (statement -> JMP byte_16 .)
    DCX             reduce using rule 107 (statement -> JMP byte_16 .)
    DAD             reduce using rule 107 (statement -> JMP byte_16 .)
    ANA             reduce using rule 107 (statement -> JMP byte_16 .)
    ORA             reduce using rule 107 (statement -> JMP byte_16 .)
    XRA             reduce using rule 107 (statement -> JMP byte_16 .)
    ANI             reduce using rule 107 (statement -> JMP byte_16 .)
    ORI             reduce using rule 107 (statement -> JMP byte_16 .)
    XRI             reduce using rule 107 (statement -> JMP byte_16 .)
    CMA             reduce using rule 107 (statement -> JMP byte_16 .)
    RLC             reduce using rule 107 (statement -> JMP byte_16 .)
    RAL             reduce using rule 107 (statement -> JMP byte_16 .)
    RRC             reduce using rule 107 (statement -> JMP byte_16 .)
    RAR             reduce using rule 107 (statement -> JMP byte_16 .)
    CMP             reduce using rule 107 (statement -> JMP byte_16 .)
    CPI             reduce using rule 107 (statement -> JMP byte_16 .)
    CMC             reduce using rule 107 (statement -> JMP byte_16 .)
    STC             reduce using rule 107 (statement -> JMP byte_16 .)
    DAA             reduce using rule 107 (statement -> JMP byte_16 .)
    JMP             reduce using rule 107 (statement -> JMP byte_16 .)
    JC              reduce using rule 107 (statement -> JMP byte_16 .)
    JNC             reduce using rule 107 (statement -> JMP byte_16 .)
    JZ              reduce using rule 107 (statement -> JMP byte_16 .)
    JNZ             reduce using rule 107 (statement -> JMP byte_16 .)
    JP              reduce using rule 107 (statement -> JMP byte_16 .)
    JM              reduce using rule 107 (statement -> JMP byte_16 .)
    JPE             reduce using rule 107 (statement -> JMP byte_16 .)
    JPO             reduce using rule 107 (statement -> JMP byte_16 .)
    CALL            reduce using rule 107 (statement -> JMP byte_16 .)
    RET             reduce using rule 107 (statement -> JMP byte_16 .)
    MACHINE         reduce using rule 107 (statement -> JMP byte_16 .)
    $end            reduce using rule 107 (statement -> JMP byte_16 .)


state 115

    (108) statement -> JMP LABEL .

    MOV             reduce using rule 108 (statement -> JMP LABEL .)
    LABEL           reduce using rule 108 (statement -> JMP LABEL .)
    MVI             reduce using rule 108 (statement -> JMP LABEL .)
    LXI             reduce using rule 108 (statement -> JMP LABEL .)
    LDAX            reduce using rule 108 (statement -> JMP LABEL .)
    STAX            reduce using rule 108 (statement -> JMP LABEL .)
    LDA             reduce using rule 108 (statement -> JMP LABEL .)
    STA             reduce using rule 108 (statement -> JMP LABEL .)
    LHLD            reduce using rule 108 (statement -> JMP LABEL .)
    SHLD            reduce using rule 108 (statement -> JMP LABEL .)
    XCHG            reduce using rule 108 (statement -> JMP LABEL .)
    ADD             reduce using rule 108 (statement -> JMP LABEL .)
    ADI             reduce using rule 108 (statement -> JMP LABEL .)
    ADC             reduce using rule 108 (statement -> JMP LABEL .)
    ACI             reduce using rule 108 (statement -> JMP LABEL .)
    SUB             reduce using rule 108 (statement -> JMP LABEL .)
    SUI             reduce using rule 108 (statement -> JMP LABEL .)
    SBB             reduce using rule 108 (statement -> JMP LABEL .)
    SBI             reduce using rule 108 (statement -> JMP LABEL .)
    INR             reduce using rule 108 (statement -> JMP LABEL .)
    DCR             reduce using rule 108 (statement -> JMP LABEL .)
    INX             reduce using rule 108 (statement -> JMP LABEL .)
    DCX             reduce using rule 108 (statement -> JMP LABEL .)
    DAD             reduce using rule 108 (statement -> JMP LABEL .)
    ANA             reduce using rule 108 (statement -> JMP LABEL .)
    ORA             reduce using rule 108 (statement -> JMP LABEL .)
    XRA             reduce using rule 108 (statement -> JMP LABEL .)
    ANI             reduce using rule 108 (statement -> JMP LABEL .)
    ORI             reduce using rule 108 (statement -> JMP LABEL .)
    XRI             reduce using rule 108 (statement -> JMP LABEL .)
    CMA             reduce using rule 108 (statement -> JMP LABEL .)
    RLC             reduce using rule 108 (statement -> JMP LABEL .)
    RAL             reduce using rule 108 (statement -> JMP LABEL .)
    RRC             reduce using rule 108 (statement -> JMP LABEL .)
    RAR             reduce using rule 108 (statement -> JMP LABEL .)
    CMP             reduce using rule 108 (statement -> JMP LABEL .)
    CPI             reduce using rule 108 (statement -> JMP LABEL .)
    CMC             reduce using rule 108 (statement -> JMP LABEL .)
    STC             reduce using rule 108 (statement -> JMP LABEL .)
    DAA             reduce using rule 108 (statement -> JMP LABEL .)
    JMP             reduce using rule 108 (statement -> JMP LABEL .)
    JC              reduce using rule 108 (statement -> JMP LABEL .)
    JNC             reduce using rule 108 (statement -> JMP LABEL .)
    JZ              reduce using rule 108 (statement -> JMP LABEL .)
    JNZ             reduce using rule 108 (statement -> JMP LABEL .)
    JP              reduce using rule 108 (statement -> JMP LABEL .)
    JM              reduce using rule 108 (statement -> JMP LABEL .)
    JPE             reduce using rule 108 (statement -> JMP LABEL .)
    JPO             reduce using rule 108 (statement -> JMP LABEL .)
    CALL            reduce using rule 108 (statement -> JMP LABEL .)
    RET             reduce using rule 108 (statement -> JMP LABEL .)
    MACHINE         reduce using rule 108 (statement -> JMP LABEL .)
    $end            reduce using rule 108 (statement -> JMP LABEL .)


state 116

    (111) statement -> JC byte_16 .

    MOV             reduce using rule 111 (statement -> JC byte_16 .)
    LABEL           reduce using rule 111 (statement -> JC byte_16 .)
    MVI             reduce using rule 111 (statement -> JC byte_16 .)
    LXI             reduce using rule 111 (statement -> JC byte_16 .)
    LDAX            reduce using rule 111 (statement -> JC byte_16 .)
    STAX            reduce using rule 111 (statement -> JC byte_16 .)
    LDA             reduce using rule 111 (statement -> JC byte_16 .)
    STA             reduce using rule 111 (statement -> JC byte_16 .)
    LHLD            reduce using rule 111 (statement -> JC byte_16 .)
    SHLD            reduce using rule 111 (statement -> JC byte_16 .)
    XCHG            reduce using rule 111 (statement -> JC byte_16 .)
    ADD             reduce using rule 111 (statement -> JC byte_16 .)
    ADI             reduce using rule 111 (statement -> JC byte_16 .)
    ADC             reduce using rule 111 (statement -> JC byte_16 .)
    ACI             reduce using rule 111 (statement -> JC byte_16 .)
    SUB             reduce using rule 111 (statement -> JC byte_16 .)
    SUI             reduce using rule 111 (statement -> JC byte_16 .)
    SBB             reduce using rule 111 (statement -> JC byte_16 .)
    SBI             reduce using rule 111 (statement -> JC byte_16 .)
    INR             reduce using rule 111 (statement -> JC byte_16 .)
    DCR             reduce using rule 111 (statement -> JC byte_16 .)
    INX             reduce using rule 111 (statement -> JC byte_16 .)
    DCX             reduce using rule 111 (statement -> JC byte_16 .)
    DAD             reduce using rule 111 (statement -> JC byte_16 .)
    ANA             reduce using rule 111 (statement -> JC byte_16 .)
    ORA             reduce using rule 111 (statement -> JC byte_16 .)
    XRA             reduce using rule 111 (statement -> JC byte_16 .)
    ANI             reduce using rule 111 (statement -> JC byte_16 .)
    ORI             reduce using rule 111 (statement -> JC byte_16 .)
    XRI             reduce using rule 111 (statement -> JC byte_16 .)
    CMA             reduce using rule 111 (statement -> JC byte_16 .)
    RLC             reduce using rule 111 (statement -> JC byte_16 .)
    RAL             reduce using rule 111 (statement -> JC byte_16 .)
    RRC             reduce using rule 111 (statement -> JC byte_16 .)
    RAR             reduce using rule 111 (statement -> JC byte_16 .)
    CMP             reduce using rule 111 (statement -> JC byte_16 .)
    CPI             reduce using rule 111 (statement -> JC byte_16 .)
    CMC             reduce using rule 111 (statement -> JC byte_16 .)
    STC             reduce using rule 111 (statement -> JC byte_16 .)
    DAA             reduce using rule 111 (statement -> JC byte_16 .)
    JMP             reduce using rule 111 (statement -> JC byte_16 .)
    JC              reduce using rule 111 (statement -> JC byte_16 .)
    JNC             reduce using rule 111 (statement -> JC byte_16 .)
    JZ              reduce using rule 111 (statement -> JC byte_16 .)
    JNZ             reduce using rule 111 (statement -> JC byte_16 .)
    JP              reduce using rule 111 (statement -> JC byte_16 .)
    JM              reduce using rule 111 (statement -> JC byte_16 .)
    JPE             reduce using rule 111 (statement -> JC byte_16 .)
    JPO             reduce using rule 111 (statement -> JC byte_16 .)
    CALL            reduce using rule 111 (statement -> JC byte_16 .)
    RET             reduce using rule 111 (statement -> JC byte_16 .)
    MACHINE         reduce using rule 111 (statement -> JC byte_16 .)
    $end            reduce using rule 111 (statement -> JC byte_16 .)


state 117

    (112) statement -> JC LABEL .

    MOV             reduce using rule 112 (statement -> JC LABEL .)
    LABEL           reduce using rule 112 (statement -> JC LABEL .)
    MVI             reduce using rule 112 (statement -> JC LABEL .)
    LXI             reduce using rule 112 (statement -> JC LABEL .)
    LDAX            reduce using rule 112 (statement -> JC LABEL .)
    STAX            reduce using rule 112 (statement -> JC LABEL .)
    LDA             reduce using rule 112 (statement -> JC LABEL .)
    STA             reduce using rule 112 (statement -> JC LABEL .)
    LHLD            reduce using rule 112 (statement -> JC LABEL .)
    SHLD            reduce using rule 112 (statement -> JC LABEL .)
    XCHG            reduce using rule 112 (statement -> JC LABEL .)
    ADD             reduce using rule 112 (statement -> JC LABEL .)
    ADI             reduce using rule 112 (statement -> JC LABEL .)
    ADC             reduce using rule 112 (statement -> JC LABEL .)
    ACI             reduce using rule 112 (statement -> JC LABEL .)
    SUB             reduce using rule 112 (statement -> JC LABEL .)
    SUI             reduce using rule 112 (statement -> JC LABEL .)
    SBB             reduce using rule 112 (statement -> JC LABEL .)
    SBI             reduce using rule 112 (statement -> JC LABEL .)
    INR             reduce using rule 112 (statement -> JC LABEL .)
    DCR             reduce using rule 112 (statement -> JC LABEL .)
    INX             reduce using rule 112 (statement -> JC LABEL .)
    DCX             reduce using rule 112 (statement -> JC LABEL .)
    DAD             reduce using rule 112 (statement -> JC LABEL .)
    ANA             reduce using rule 112 (statement -> JC LABEL .)
    ORA             reduce using rule 112 (statement -> JC LABEL .)
    XRA             reduce using rule 112 (statement -> JC LABEL .)
    ANI             reduce using rule 112 (statement -> JC LABEL .)
    ORI             reduce using rule 112 (statement -> JC LABEL .)
    XRI             reduce using rule 112 (statement -> JC LABEL .)
    CMA             reduce using rule 112 (statement -> JC LABEL .)
    RLC             reduce using rule 112 (statement -> JC LABEL .)
    RAL             reduce using rule 112 (statement -> JC LABEL .)
    RRC             reduce using rule 112 (statement -> JC LABEL .)
    RAR             reduce using rule 112 (statement -> JC LABEL .)
    CMP             reduce using rule 112 (statement -> JC LABEL .)
    CPI             reduce using rule 112 (statement -> JC LABEL .)
    CMC             reduce using rule 112 (statement -> JC LABEL .)
    STC             reduce using rule 112 (statement -> JC LABEL .)
    DAA             reduce using rule 112 (statement -> JC LABEL .)
    JMP             reduce using rule 112 (statement -> JC LABEL .)
    JC              reduce using rule 112 (statement -> JC LABEL .)
    JNC             reduce using rule 112 (statement -> JC LABEL .)
    JZ              reduce using rule 112 (statement -> JC LABEL .)
    JNZ             reduce using rule 112 (statement -> JC LABEL .)
    JP              reduce using rule 112 (statement -> JC LABEL .)
    JM              reduce using rule 112 (statement -> JC LABEL .)
    JPE             reduce using rule 112 (statement -> JC LABEL .)
    JPO             reduce using rule 112 (statement -> JC LABEL .)
    CALL            reduce using rule 112 (statement -> JC LABEL .)
    RET             reduce using rule 112 (statement -> JC LABEL .)
    MACHINE         reduce using rule 112 (statement -> JC LABEL .)
    $end            reduce using rule 112 (statement -> JC LABEL .)


state 118

    (115) statement -> JNC byte_16 .

    MOV             reduce using rule 115 (statement -> JNC byte_16 .)
    LABEL           reduce using rule 115 (statement -> JNC byte_16 .)
    MVI             reduce using rule 115 (statement -> JNC byte_16 .)
    LXI             reduce using rule 115 (statement -> JNC byte_16 .)
    LDAX            reduce using rule 115 (statement -> JNC byte_16 .)
    STAX            reduce using rule 115 (statement -> JNC byte_16 .)
    LDA             reduce using rule 115 (statement -> JNC byte_16 .)
    STA             reduce using rule 115 (statement -> JNC byte_16 .)
    LHLD            reduce using rule 115 (statement -> JNC byte_16 .)
    SHLD            reduce using rule 115 (statement -> JNC byte_16 .)
    XCHG            reduce using rule 115 (statement -> JNC byte_16 .)
    ADD             reduce using rule 115 (statement -> JNC byte_16 .)
    ADI             reduce using rule 115 (statement -> JNC byte_16 .)
    ADC             reduce using rule 115 (statement -> JNC byte_16 .)
    ACI             reduce using rule 115 (statement -> JNC byte_16 .)
    SUB             reduce using rule 115 (statement -> JNC byte_16 .)
    SUI             reduce using rule 115 (statement -> JNC byte_16 .)
    SBB             reduce using rule 115 (statement -> JNC byte_16 .)
    SBI             reduce using rule 115 (statement -> JNC byte_16 .)
    INR             reduce using rule 115 (statement -> JNC byte_16 .)
    DCR             reduce using rule 115 (statement -> JNC byte_16 .)
    INX             reduce using rule 115 (statement -> JNC byte_16 .)
    DCX             reduce using rule 115 (statement -> JNC byte_16 .)
    DAD             reduce using rule 115 (statement -> JNC byte_16 .)
    ANA             reduce using rule 115 (statement -> JNC byte_16 .)
    ORA             reduce using rule 115 (statement -> JNC byte_16 .)
    XRA             reduce using rule 115 (statement -> JNC byte_16 .)
    ANI             reduce using rule 115 (statement -> JNC byte_16 .)
    ORI             reduce using rule 115 (statement -> JNC byte_16 .)
    XRI             reduce using rule 115 (statement -> JNC byte_16 .)
    CMA             reduce using rule 115 (statement -> JNC byte_16 .)
    RLC             reduce using rule 115 (statement -> JNC byte_16 .)
    RAL             reduce using rule 115 (statement -> JNC byte_16 .)
    RRC             reduce using rule 115 (statement -> JNC byte_16 .)
    RAR             reduce using rule 115 (statement -> JNC byte_16 .)
    CMP             reduce using rule 115 (statement -> JNC byte_16 .)
    CPI             reduce using rule 115 (statement -> JNC byte_16 .)
    CMC             reduce using rule 115 (statement -> JNC byte_16 .)
    STC             reduce using rule 115 (statement -> JNC byte_16 .)
    DAA             reduce using rule 115 (statement -> JNC byte_16 .)
    JMP             reduce using rule 115 (statement -> JNC byte_16 .)
    JC              reduce using rule 115 (statement -> JNC byte_16 .)
    JNC             reduce using rule 115 (statement -> JNC byte_16 .)
    JZ              reduce using rule 115 (statement -> JNC byte_16 .)
    JNZ             reduce using rule 115 (statement -> JNC byte_16 .)
    JP              reduce using rule 115 (statement -> JNC byte_16 .)
    JM              reduce using rule 115 (statement -> JNC byte_16 .)
    JPE             reduce using rule 115 (statement -> JNC byte_16 .)
    JPO             reduce using rule 115 (statement -> JNC byte_16 .)
    CALL            reduce using rule 115 (statement -> JNC byte_16 .)
    RET             reduce using rule 115 (statement -> JNC byte_16 .)
    MACHINE         reduce using rule 115 (statement -> JNC byte_16 .)
    $end            reduce using rule 115 (statement -> JNC byte_16 .)


state 119

    (116) statement -> JNC LABEL .

    MOV             reduce using rule 116 (statement -> JNC LABEL .)
    LABEL           reduce using rule 116 (statement -> JNC LABEL .)
    MVI             reduce using rule 116 (statement -> JNC LABEL .)
    LXI             reduce using rule 116 (statement -> JNC LABEL .)
    LDAX            reduce using rule 116 (statement -> JNC LABEL .)
    STAX            reduce using rule 116 (statement -> JNC LABEL .)
    LDA             reduce using rule 116 (statement -> JNC LABEL .)
    STA             reduce using rule 116 (statement -> JNC LABEL .)
    LHLD            reduce using rule 116 (statement -> JNC LABEL .)
    SHLD            reduce using rule 116 (statement -> JNC LABEL .)
    XCHG            reduce using rule 116 (statement -> JNC LABEL .)
    ADD             reduce using rule 116 (statement -> JNC LABEL .)
    ADI             reduce using rule 116 (statement -> JNC LABEL .)
    ADC             reduce using rule 116 (statement -> JNC LABEL .)
    ACI             reduce using rule 116 (statement -> JNC LABEL .)
    SUB             reduce using rule 116 (statement -> JNC LABEL .)
    SUI             reduce using rule 116 (statement -> JNC LABEL .)
    SBB             reduce using rule 116 (statement -> JNC LABEL .)
    SBI             reduce using rule 116 (statement -> JNC LABEL .)
    INR             reduce using rule 116 (statement -> JNC LABEL .)
    DCR             reduce using rule 116 (statement -> JNC LABEL .)
    INX             reduce using rule 116 (statement -> JNC LABEL .)
    DCX             reduce using rule 116 (statement -> JNC LABEL .)
    DAD             reduce using rule 116 (statement -> JNC LABEL .)
    ANA             reduce using rule 116 (statement -> JNC LABEL .)
    ORA             reduce using rule 116 (statement -> JNC LABEL .)
    XRA             reduce using rule 116 (statement -> JNC LABEL .)
    ANI             reduce using rule 116 (statement -> JNC LABEL .)
    ORI             reduce using rule 116 (statement -> JNC LABEL .)
    XRI             reduce using rule 116 (statement -> JNC LABEL .)
    CMA             reduce using rule 116 (statement -> JNC LABEL .)
    RLC             reduce using rule 116 (statement -> JNC LABEL .)
    RAL             reduce using rule 116 (statement -> JNC LABEL .)
    RRC             reduce using rule 116 (statement -> JNC LABEL .)
    RAR             reduce using rule 116 (statement -> JNC LABEL .)
    CMP             reduce using rule 116 (statement -> JNC LABEL .)
    CPI             reduce using rule 116 (statement -> JNC LABEL .)
    CMC             reduce using rule 116 (statement -> JNC LABEL .)
    STC             reduce using rule 116 (statement -> JNC LABEL .)
    DAA             reduce using rule 116 (statement -> JNC LABEL .)
    JMP             reduce using rule 116 (statement -> JNC LABEL .)
    JC              reduce using rule 116 (statement -> JNC LABEL .)
    JNC             reduce using rule 116 (statement -> JNC LABEL .)
    JZ              reduce using rule 116 (statement -> JNC LABEL .)
    JNZ             reduce using rule 116 (statement -> JNC LABEL .)
    JP              reduce using rule 116 (statement -> JNC LABEL .)
    JM              reduce using rule 116 (statement -> JNC LABEL .)
    JPE             reduce using rule 116 (statement -> JNC LABEL .)
    JPO             reduce using rule 116 (statement -> JNC LABEL .)
    CALL            reduce using rule 116 (statement -> JNC LABEL .)
    RET             reduce using rule 116 (statement -> JNC LABEL .)
    MACHINE         reduce using rule 116 (statement -> JNC LABEL .)
    $end            reduce using rule 116 (statement -> JNC LABEL .)


state 120

    (119) statement -> JZ byte_16 .

    MOV             reduce using rule 119 (statement -> JZ byte_16 .)
    LABEL           reduce using rule 119 (statement -> JZ byte_16 .)
    MVI             reduce using rule 119 (statement -> JZ byte_16 .)
    LXI             reduce using rule 119 (statement -> JZ byte_16 .)
    LDAX            reduce using rule 119 (statement -> JZ byte_16 .)
    STAX            reduce using rule 119 (statement -> JZ byte_16 .)
    LDA             reduce using rule 119 (statement -> JZ byte_16 .)
    STA             reduce using rule 119 (statement -> JZ byte_16 .)
    LHLD            reduce using rule 119 (statement -> JZ byte_16 .)
    SHLD            reduce using rule 119 (statement -> JZ byte_16 .)
    XCHG            reduce using rule 119 (statement -> JZ byte_16 .)
    ADD             reduce using rule 119 (statement -> JZ byte_16 .)
    ADI             reduce using rule 119 (statement -> JZ byte_16 .)
    ADC             reduce using rule 119 (statement -> JZ byte_16 .)
    ACI             reduce using rule 119 (statement -> JZ byte_16 .)
    SUB             reduce using rule 119 (statement -> JZ byte_16 .)
    SUI             reduce using rule 119 (statement -> JZ byte_16 .)
    SBB             reduce using rule 119 (statement -> JZ byte_16 .)
    SBI             reduce using rule 119 (statement -> JZ byte_16 .)
    INR             reduce using rule 119 (statement -> JZ byte_16 .)
    DCR             reduce using rule 119 (statement -> JZ byte_16 .)
    INX             reduce using rule 119 (statement -> JZ byte_16 .)
    DCX             reduce using rule 119 (statement -> JZ byte_16 .)
    DAD             reduce using rule 119 (statement -> JZ byte_16 .)
    ANA             reduce using rule 119 (statement -> JZ byte_16 .)
    ORA             reduce using rule 119 (statement -> JZ byte_16 .)
    XRA             reduce using rule 119 (statement -> JZ byte_16 .)
    ANI             reduce using rule 119 (statement -> JZ byte_16 .)
    ORI             reduce using rule 119 (statement -> JZ byte_16 .)
    XRI             reduce using rule 119 (statement -> JZ byte_16 .)
    CMA             reduce using rule 119 (statement -> JZ byte_16 .)
    RLC             reduce using rule 119 (statement -> JZ byte_16 .)
    RAL             reduce using rule 119 (statement -> JZ byte_16 .)
    RRC             reduce using rule 119 (statement -> JZ byte_16 .)
    RAR             reduce using rule 119 (statement -> JZ byte_16 .)
    CMP             reduce using rule 119 (statement -> JZ byte_16 .)
    CPI             reduce using rule 119 (statement -> JZ byte_16 .)
    CMC             reduce using rule 119 (statement -> JZ byte_16 .)
    STC             reduce using rule 119 (statement -> JZ byte_16 .)
    DAA             reduce using rule 119 (statement -> JZ byte_16 .)
    JMP             reduce using rule 119 (statement -> JZ byte_16 .)
    JC              reduce using rule 119 (statement -> JZ byte_16 .)
    JNC             reduce using rule 119 (statement -> JZ byte_16 .)
    JZ              reduce using rule 119 (statement -> JZ byte_16 .)
    JNZ             reduce using rule 119 (statement -> JZ byte_16 .)
    JP              reduce using rule 119 (statement -> JZ byte_16 .)
    JM              reduce using rule 119 (statement -> JZ byte_16 .)
    JPE             reduce using rule 119 (statement -> JZ byte_16 .)
    JPO             reduce using rule 119 (statement -> JZ byte_16 .)
    CALL            reduce using rule 119 (statement -> JZ byte_16 .)
    RET             reduce using rule 119 (statement -> JZ byte_16 .)
    MACHINE         reduce using rule 119 (statement -> JZ byte_16 .)
    $end            reduce using rule 119 (statement -> JZ byte_16 .)


state 121

    (120) statement -> JZ LABEL .

    MOV             reduce using rule 120 (statement -> JZ LABEL .)
    LABEL           reduce using rule 120 (statement -> JZ LABEL .)
    MVI             reduce using rule 120 (statement -> JZ LABEL .)
    LXI             reduce using rule 120 (statement -> JZ LABEL .)
    LDAX            reduce using rule 120 (statement -> JZ LABEL .)
    STAX            reduce using rule 120 (statement -> JZ LABEL .)
    LDA             reduce using rule 120 (statement -> JZ LABEL .)
    STA             reduce using rule 120 (statement -> JZ LABEL .)
    LHLD            reduce using rule 120 (statement -> JZ LABEL .)
    SHLD            reduce using rule 120 (statement -> JZ LABEL .)
    XCHG            reduce using rule 120 (statement -> JZ LABEL .)
    ADD             reduce using rule 120 (statement -> JZ LABEL .)
    ADI             reduce using rule 120 (statement -> JZ LABEL .)
    ADC             reduce using rule 120 (statement -> JZ LABEL .)
    ACI             reduce using rule 120 (statement -> JZ LABEL .)
    SUB             reduce using rule 120 (statement -> JZ LABEL .)
    SUI             reduce using rule 120 (statement -> JZ LABEL .)
    SBB             reduce using rule 120 (statement -> JZ LABEL .)
    SBI             reduce using rule 120 (statement -> JZ LABEL .)
    INR             reduce using rule 120 (statement -> JZ LABEL .)
    DCR             reduce using rule 120 (statement -> JZ LABEL .)
    INX             reduce using rule 120 (statement -> JZ LABEL .)
    DCX             reduce using rule 120 (statement -> JZ LABEL .)
    DAD             reduce using rule 120 (statement -> JZ LABEL .)
    ANA             reduce using rule 120 (statement -> JZ LABEL .)
    ORA             reduce using rule 120 (statement -> JZ LABEL .)
    XRA             reduce using rule 120 (statement -> JZ LABEL .)
    ANI             reduce using rule 120 (statement -> JZ LABEL .)
    ORI             reduce using rule 120 (statement -> JZ LABEL .)
    XRI             reduce using rule 120 (statement -> JZ LABEL .)
    CMA             reduce using rule 120 (statement -> JZ LABEL .)
    RLC             reduce using rule 120 (statement -> JZ LABEL .)
    RAL             reduce using rule 120 (statement -> JZ LABEL .)
    RRC             reduce using rule 120 (statement -> JZ LABEL .)
    RAR             reduce using rule 120 (statement -> JZ LABEL .)
    CMP             reduce using rule 120 (statement -> JZ LABEL .)
    CPI             reduce using rule 120 (statement -> JZ LABEL .)
    CMC             reduce using rule 120 (statement -> JZ LABEL .)
    STC             reduce using rule 120 (statement -> JZ LABEL .)
    DAA             reduce using rule 120 (statement -> JZ LABEL .)
    JMP             reduce using rule 120 (statement -> JZ LABEL .)
    JC              reduce using rule 120 (statement -> JZ LABEL .)
    JNC             reduce using rule 120 (statement -> JZ LABEL .)
    JZ              reduce using rule 120 (statement -> JZ LABEL .)
    JNZ             reduce using rule 120 (statement -> JZ LABEL .)
    JP              reduce using rule 120 (statement -> JZ LABEL .)
    JM              reduce using rule 120 (statement -> JZ LABEL .)
    JPE             reduce using rule 120 (statement -> JZ LABEL .)
    JPO             reduce using rule 120 (statement -> JZ LABEL .)
    CALL            reduce using rule 120 (statement -> JZ LABEL .)
    RET             reduce using rule 120 (statement -> JZ LABEL .)
    MACHINE         reduce using rule 120 (statement -> JZ LABEL .)
    $end            reduce using rule 120 (statement -> JZ LABEL .)


state 122

    (123) statement -> JNZ byte_16 .

    MOV             reduce using rule 123 (statement -> JNZ byte_16 .)
    LABEL           reduce using rule 123 (statement -> JNZ byte_16 .)
    MVI             reduce using rule 123 (statement -> JNZ byte_16 .)
    LXI             reduce using rule 123 (statement -> JNZ byte_16 .)
    LDAX            reduce using rule 123 (statement -> JNZ byte_16 .)
    STAX            reduce using rule 123 (statement -> JNZ byte_16 .)
    LDA             reduce using rule 123 (statement -> JNZ byte_16 .)
    STA             reduce using rule 123 (statement -> JNZ byte_16 .)
    LHLD            reduce using rule 123 (statement -> JNZ byte_16 .)
    SHLD            reduce using rule 123 (statement -> JNZ byte_16 .)
    XCHG            reduce using rule 123 (statement -> JNZ byte_16 .)
    ADD             reduce using rule 123 (statement -> JNZ byte_16 .)
    ADI             reduce using rule 123 (statement -> JNZ byte_16 .)
    ADC             reduce using rule 123 (statement -> JNZ byte_16 .)
    ACI             reduce using rule 123 (statement -> JNZ byte_16 .)
    SUB             reduce using rule 123 (statement -> JNZ byte_16 .)
    SUI             reduce using rule 123 (statement -> JNZ byte_16 .)
    SBB             reduce using rule 123 (statement -> JNZ byte_16 .)
    SBI             reduce using rule 123 (statement -> JNZ byte_16 .)
    INR             reduce using rule 123 (statement -> JNZ byte_16 .)
    DCR             reduce using rule 123 (statement -> JNZ byte_16 .)
    INX             reduce using rule 123 (statement -> JNZ byte_16 .)
    DCX             reduce using rule 123 (statement -> JNZ byte_16 .)
    DAD             reduce using rule 123 (statement -> JNZ byte_16 .)
    ANA             reduce using rule 123 (statement -> JNZ byte_16 .)
    ORA             reduce using rule 123 (statement -> JNZ byte_16 .)
    XRA             reduce using rule 123 (statement -> JNZ byte_16 .)
    ANI             reduce using rule 123 (statement -> JNZ byte_16 .)
    ORI             reduce using rule 123 (statement -> JNZ byte_16 .)
    XRI             reduce using rule 123 (statement -> JNZ byte_16 .)
    CMA             reduce using rule 123 (statement -> JNZ byte_16 .)
    RLC             reduce using rule 123 (statement -> JNZ byte_16 .)
    RAL             reduce using rule 123 (statement -> JNZ byte_16 .)
    RRC             reduce using rule 123 (statement -> JNZ byte_16 .)
    RAR             reduce using rule 123 (statement -> JNZ byte_16 .)
    CMP             reduce using rule 123 (statement -> JNZ byte_16 .)
    CPI             reduce using rule 123 (statement -> JNZ byte_16 .)
    CMC             reduce using rule 123 (statement -> JNZ byte_16 .)
    STC             reduce using rule 123 (statement -> JNZ byte_16 .)
    DAA             reduce using rule 123 (statement -> JNZ byte_16 .)
    JMP             reduce using rule 123 (statement -> JNZ byte_16 .)
    JC              reduce using rule 123 (statement -> JNZ byte_16 .)
    JNC             reduce using rule 123 (statement -> JNZ byte_16 .)
    JZ              reduce using rule 123 (statement -> JNZ byte_16 .)
    JNZ             reduce using rule 123 (statement -> JNZ byte_16 .)
    JP              reduce using rule 123 (statement -> JNZ byte_16 .)
    JM              reduce using rule 123 (statement -> JNZ byte_16 .)
    JPE             reduce using rule 123 (statement -> JNZ byte_16 .)
    JPO             reduce using rule 123 (statement -> JNZ byte_16 .)
    CALL            reduce using rule 123 (statement -> JNZ byte_16 .)
    RET             reduce using rule 123 (statement -> JNZ byte_16 .)
    MACHINE         reduce using rule 123 (statement -> JNZ byte_16 .)
    $end            reduce using rule 123 (statement -> JNZ byte_16 .)


state 123

    (124) statement -> JNZ LABEL .

    MOV             reduce using rule 124 (statement -> JNZ LABEL .)
    LABEL           reduce using rule 124 (statement -> JNZ LABEL .)
    MVI             reduce using rule 124 (statement -> JNZ LABEL .)
    LXI             reduce using rule 124 (statement -> JNZ LABEL .)
    LDAX            reduce using rule 124 (statement -> JNZ LABEL .)
    STAX            reduce using rule 124 (statement -> JNZ LABEL .)
    LDA             reduce using rule 124 (statement -> JNZ LABEL .)
    STA             reduce using rule 124 (statement -> JNZ LABEL .)
    LHLD            reduce using rule 124 (statement -> JNZ LABEL .)
    SHLD            reduce using rule 124 (statement -> JNZ LABEL .)
    XCHG            reduce using rule 124 (statement -> JNZ LABEL .)
    ADD             reduce using rule 124 (statement -> JNZ LABEL .)
    ADI             reduce using rule 124 (statement -> JNZ LABEL .)
    ADC             reduce using rule 124 (statement -> JNZ LABEL .)
    ACI             reduce using rule 124 (statement -> JNZ LABEL .)
    SUB             reduce using rule 124 (statement -> JNZ LABEL .)
    SUI             reduce using rule 124 (statement -> JNZ LABEL .)
    SBB             reduce using rule 124 (statement -> JNZ LABEL .)
    SBI             reduce using rule 124 (statement -> JNZ LABEL .)
    INR             reduce using rule 124 (statement -> JNZ LABEL .)
    DCR             reduce using rule 124 (statement -> JNZ LABEL .)
    INX             reduce using rule 124 (statement -> JNZ LABEL .)
    DCX             reduce using rule 124 (statement -> JNZ LABEL .)
    DAD             reduce using rule 124 (statement -> JNZ LABEL .)
    ANA             reduce using rule 124 (statement -> JNZ LABEL .)
    ORA             reduce using rule 124 (statement -> JNZ LABEL .)
    XRA             reduce using rule 124 (statement -> JNZ LABEL .)
    ANI             reduce using rule 124 (statement -> JNZ LABEL .)
    ORI             reduce using rule 124 (statement -> JNZ LABEL .)
    XRI             reduce using rule 124 (statement -> JNZ LABEL .)
    CMA             reduce using rule 124 (statement -> JNZ LABEL .)
    RLC             reduce using rule 124 (statement -> JNZ LABEL .)
    RAL             reduce using rule 124 (statement -> JNZ LABEL .)
    RRC             reduce using rule 124 (statement -> JNZ LABEL .)
    RAR             reduce using rule 124 (statement -> JNZ LABEL .)
    CMP             reduce using rule 124 (statement -> JNZ LABEL .)
    CPI             reduce using rule 124 (statement -> JNZ LABEL .)
    CMC             reduce using rule 124 (statement -> JNZ LABEL .)
    STC             reduce using rule 124 (statement -> JNZ LABEL .)
    DAA             reduce using rule 124 (statement -> JNZ LABEL .)
    JMP             reduce using rule 124 (statement -> JNZ LABEL .)
    JC              reduce using rule 124 (statement -> JNZ LABEL .)
    JNC             reduce using rule 124 (statement -> JNZ LABEL .)
    JZ              reduce using rule 124 (statement -> JNZ LABEL .)
    JNZ             reduce using rule 124 (statement -> JNZ LABEL .)
    JP              reduce using rule 124 (statement -> JNZ LABEL .)
    JM              reduce using rule 124 (statement -> JNZ LABEL .)
    JPE             reduce using rule 124 (statement -> JNZ LABEL .)
    JPO             reduce using rule 124 (statement -> JNZ LABEL .)
    CALL            reduce using rule 124 (statement -> JNZ LABEL .)
    RET             reduce using rule 124 (statement -> JNZ LABEL .)
    MACHINE         reduce using rule 124 (statement -> JNZ LABEL .)
    $end            reduce using rule 124 (statement -> JNZ LABEL .)


state 124

    (127) statement -> JP byte_16 .

    MOV             reduce using rule 127 (statement -> JP byte_16 .)
    LABEL           reduce using rule 127 (statement -> JP byte_16 .)
    MVI             reduce using rule 127 (statement -> JP byte_16 .)
    LXI             reduce using rule 127 (statement -> JP byte_16 .)
    LDAX            reduce using rule 127 (statement -> JP byte_16 .)
    STAX            reduce using rule 127 (statement -> JP byte_16 .)
    LDA             reduce using rule 127 (statement -> JP byte_16 .)
    STA             reduce using rule 127 (statement -> JP byte_16 .)
    LHLD            reduce using rule 127 (statement -> JP byte_16 .)
    SHLD            reduce using rule 127 (statement -> JP byte_16 .)
    XCHG            reduce using rule 127 (statement -> JP byte_16 .)
    ADD             reduce using rule 127 (statement -> JP byte_16 .)
    ADI             reduce using rule 127 (statement -> JP byte_16 .)
    ADC             reduce using rule 127 (statement -> JP byte_16 .)
    ACI             reduce using rule 127 (statement -> JP byte_16 .)
    SUB             reduce using rule 127 (statement -> JP byte_16 .)
    SUI             reduce using rule 127 (statement -> JP byte_16 .)
    SBB             reduce using rule 127 (statement -> JP byte_16 .)
    SBI             reduce using rule 127 (statement -> JP byte_16 .)
    INR             reduce using rule 127 (statement -> JP byte_16 .)
    DCR             reduce using rule 127 (statement -> JP byte_16 .)
    INX             reduce using rule 127 (statement -> JP byte_16 .)
    DCX             reduce using rule 127 (statement -> JP byte_16 .)
    DAD             reduce using rule 127 (statement -> JP byte_16 .)
    ANA             reduce using rule 127 (statement -> JP byte_16 .)
    ORA             reduce using rule 127 (statement -> JP byte_16 .)
    XRA             reduce using rule 127 (statement -> JP byte_16 .)
    ANI             reduce using rule 127 (statement -> JP byte_16 .)
    ORI             reduce using rule 127 (statement -> JP byte_16 .)
    XRI             reduce using rule 127 (statement -> JP byte_16 .)
    CMA             reduce using rule 127 (statement -> JP byte_16 .)
    RLC             reduce using rule 127 (statement -> JP byte_16 .)
    RAL             reduce using rule 127 (statement -> JP byte_16 .)
    RRC             reduce using rule 127 (statement -> JP byte_16 .)
    RAR             reduce using rule 127 (statement -> JP byte_16 .)
    CMP             reduce using rule 127 (statement -> JP byte_16 .)
    CPI             reduce using rule 127 (statement -> JP byte_16 .)
    CMC             reduce using rule 127 (statement -> JP byte_16 .)
    STC             reduce using rule 127 (statement -> JP byte_16 .)
    DAA             reduce using rule 127 (statement -> JP byte_16 .)
    JMP             reduce using rule 127 (statement -> JP byte_16 .)
    JC              reduce using rule 127 (statement -> JP byte_16 .)
    JNC             reduce using rule 127 (statement -> JP byte_16 .)
    JZ              reduce using rule 127 (statement -> JP byte_16 .)
    JNZ             reduce using rule 127 (statement -> JP byte_16 .)
    JP              reduce using rule 127 (statement -> JP byte_16 .)
    JM              reduce using rule 127 (statement -> JP byte_16 .)
    JPE             reduce using rule 127 (statement -> JP byte_16 .)
    JPO             reduce using rule 127 (statement -> JP byte_16 .)
    CALL            reduce using rule 127 (statement -> JP byte_16 .)
    RET             reduce using rule 127 (statement -> JP byte_16 .)
    MACHINE         reduce using rule 127 (statement -> JP byte_16 .)
    $end            reduce using rule 127 (statement -> JP byte_16 .)


state 125

    (128) statement -> JP LABEL .

    MOV             reduce using rule 128 (statement -> JP LABEL .)
    LABEL           reduce using rule 128 (statement -> JP LABEL .)
    MVI             reduce using rule 128 (statement -> JP LABEL .)
    LXI             reduce using rule 128 (statement -> JP LABEL .)
    LDAX            reduce using rule 128 (statement -> JP LABEL .)
    STAX            reduce using rule 128 (statement -> JP LABEL .)
    LDA             reduce using rule 128 (statement -> JP LABEL .)
    STA             reduce using rule 128 (statement -> JP LABEL .)
    LHLD            reduce using rule 128 (statement -> JP LABEL .)
    SHLD            reduce using rule 128 (statement -> JP LABEL .)
    XCHG            reduce using rule 128 (statement -> JP LABEL .)
    ADD             reduce using rule 128 (statement -> JP LABEL .)
    ADI             reduce using rule 128 (statement -> JP LABEL .)
    ADC             reduce using rule 128 (statement -> JP LABEL .)
    ACI             reduce using rule 128 (statement -> JP LABEL .)
    SUB             reduce using rule 128 (statement -> JP LABEL .)
    SUI             reduce using rule 128 (statement -> JP LABEL .)
    SBB             reduce using rule 128 (statement -> JP LABEL .)
    SBI             reduce using rule 128 (statement -> JP LABEL .)
    INR             reduce using rule 128 (statement -> JP LABEL .)
    DCR             reduce using rule 128 (statement -> JP LABEL .)
    INX             reduce using rule 128 (statement -> JP LABEL .)
    DCX             reduce using rule 128 (statement -> JP LABEL .)
    DAD             reduce using rule 128 (statement -> JP LABEL .)
    ANA             reduce using rule 128 (statement -> JP LABEL .)
    ORA             reduce using rule 128 (statement -> JP LABEL .)
    XRA             reduce using rule 128 (statement -> JP LABEL .)
    ANI             reduce using rule 128 (statement -> JP LABEL .)
    ORI             reduce using rule 128 (statement -> JP LABEL .)
    XRI             reduce using rule 128 (statement -> JP LABEL .)
    CMA             reduce using rule 128 (statement -> JP LABEL .)
    RLC             reduce using rule 128 (statement -> JP LABEL .)
    RAL             reduce using rule 128 (statement -> JP LABEL .)
    RRC             reduce using rule 128 (statement -> JP LABEL .)
    RAR             reduce using rule 128 (statement -> JP LABEL .)
    CMP             reduce using rule 128 (statement -> JP LABEL .)
    CPI             reduce using rule 128 (statement -> JP LABEL .)
    CMC             reduce using rule 128 (statement -> JP LABEL .)
    STC             reduce using rule 128 (statement -> JP LABEL .)
    DAA             reduce using rule 128 (statement -> JP LABEL .)
    JMP             reduce using rule 128 (statement -> JP LABEL .)
    JC              reduce using rule 128 (statement -> JP LABEL .)
    JNC             reduce using rule 128 (statement -> JP LABEL .)
    JZ              reduce using rule 128 (statement -> JP LABEL .)
    JNZ             reduce using rule 128 (statement -> JP LABEL .)
    JP              reduce using rule 128 (statement -> JP LABEL .)
    JM              reduce using rule 128 (statement -> JP LABEL .)
    JPE             reduce using rule 128 (statement -> JP LABEL .)
    JPO             reduce using rule 128 (statement -> JP LABEL .)
    CALL            reduce using rule 128 (statement -> JP LABEL .)
    RET             reduce using rule 128 (statement -> JP LABEL .)
    MACHINE         reduce using rule 128 (statement -> JP LABEL .)
    $end            reduce using rule 128 (statement -> JP LABEL .)


state 126

    (131) statement -> JM byte_16 .

    MOV             reduce using rule 131 (statement -> JM byte_16 .)
    LABEL           reduce using rule 131 (statement -> JM byte_16 .)
    MVI             reduce using rule 131 (statement -> JM byte_16 .)
    LXI             reduce using rule 131 (statement -> JM byte_16 .)
    LDAX            reduce using rule 131 (statement -> JM byte_16 .)
    STAX            reduce using rule 131 (statement -> JM byte_16 .)
    LDA             reduce using rule 131 (statement -> JM byte_16 .)
    STA             reduce using rule 131 (statement -> JM byte_16 .)
    LHLD            reduce using rule 131 (statement -> JM byte_16 .)
    SHLD            reduce using rule 131 (statement -> JM byte_16 .)
    XCHG            reduce using rule 131 (statement -> JM byte_16 .)
    ADD             reduce using rule 131 (statement -> JM byte_16 .)
    ADI             reduce using rule 131 (statement -> JM byte_16 .)
    ADC             reduce using rule 131 (statement -> JM byte_16 .)
    ACI             reduce using rule 131 (statement -> JM byte_16 .)
    SUB             reduce using rule 131 (statement -> JM byte_16 .)
    SUI             reduce using rule 131 (statement -> JM byte_16 .)
    SBB             reduce using rule 131 (statement -> JM byte_16 .)
    SBI             reduce using rule 131 (statement -> JM byte_16 .)
    INR             reduce using rule 131 (statement -> JM byte_16 .)
    DCR             reduce using rule 131 (statement -> JM byte_16 .)
    INX             reduce using rule 131 (statement -> JM byte_16 .)
    DCX             reduce using rule 131 (statement -> JM byte_16 .)
    DAD             reduce using rule 131 (statement -> JM byte_16 .)
    ANA             reduce using rule 131 (statement -> JM byte_16 .)
    ORA             reduce using rule 131 (statement -> JM byte_16 .)
    XRA             reduce using rule 131 (statement -> JM byte_16 .)
    ANI             reduce using rule 131 (statement -> JM byte_16 .)
    ORI             reduce using rule 131 (statement -> JM byte_16 .)
    XRI             reduce using rule 131 (statement -> JM byte_16 .)
    CMA             reduce using rule 131 (statement -> JM byte_16 .)
    RLC             reduce using rule 131 (statement -> JM byte_16 .)
    RAL             reduce using rule 131 (statement -> JM byte_16 .)
    RRC             reduce using rule 131 (statement -> JM byte_16 .)
    RAR             reduce using rule 131 (statement -> JM byte_16 .)
    CMP             reduce using rule 131 (statement -> JM byte_16 .)
    CPI             reduce using rule 131 (statement -> JM byte_16 .)
    CMC             reduce using rule 131 (statement -> JM byte_16 .)
    STC             reduce using rule 131 (statement -> JM byte_16 .)
    DAA             reduce using rule 131 (statement -> JM byte_16 .)
    JMP             reduce using rule 131 (statement -> JM byte_16 .)
    JC              reduce using rule 131 (statement -> JM byte_16 .)
    JNC             reduce using rule 131 (statement -> JM byte_16 .)
    JZ              reduce using rule 131 (statement -> JM byte_16 .)
    JNZ             reduce using rule 131 (statement -> JM byte_16 .)
    JP              reduce using rule 131 (statement -> JM byte_16 .)
    JM              reduce using rule 131 (statement -> JM byte_16 .)
    JPE             reduce using rule 131 (statement -> JM byte_16 .)
    JPO             reduce using rule 131 (statement -> JM byte_16 .)
    CALL            reduce using rule 131 (statement -> JM byte_16 .)
    RET             reduce using rule 131 (statement -> JM byte_16 .)
    MACHINE         reduce using rule 131 (statement -> JM byte_16 .)
    $end            reduce using rule 131 (statement -> JM byte_16 .)


state 127

    (132) statement -> JM LABEL .

    MOV             reduce using rule 132 (statement -> JM LABEL .)
    LABEL           reduce using rule 132 (statement -> JM LABEL .)
    MVI             reduce using rule 132 (statement -> JM LABEL .)
    LXI             reduce using rule 132 (statement -> JM LABEL .)
    LDAX            reduce using rule 132 (statement -> JM LABEL .)
    STAX            reduce using rule 132 (statement -> JM LABEL .)
    LDA             reduce using rule 132 (statement -> JM LABEL .)
    STA             reduce using rule 132 (statement -> JM LABEL .)
    LHLD            reduce using rule 132 (statement -> JM LABEL .)
    SHLD            reduce using rule 132 (statement -> JM LABEL .)
    XCHG            reduce using rule 132 (statement -> JM LABEL .)
    ADD             reduce using rule 132 (statement -> JM LABEL .)
    ADI             reduce using rule 132 (statement -> JM LABEL .)
    ADC             reduce using rule 132 (statement -> JM LABEL .)
    ACI             reduce using rule 132 (statement -> JM LABEL .)
    SUB             reduce using rule 132 (statement -> JM LABEL .)
    SUI             reduce using rule 132 (statement -> JM LABEL .)
    SBB             reduce using rule 132 (statement -> JM LABEL .)
    SBI             reduce using rule 132 (statement -> JM LABEL .)
    INR             reduce using rule 132 (statement -> JM LABEL .)
    DCR             reduce using rule 132 (statement -> JM LABEL .)
    INX             reduce using rule 132 (statement -> JM LABEL .)
    DCX             reduce using rule 132 (statement -> JM LABEL .)
    DAD             reduce using rule 132 (statement -> JM LABEL .)
    ANA             reduce using rule 132 (statement -> JM LABEL .)
    ORA             reduce using rule 132 (statement -> JM LABEL .)
    XRA             reduce using rule 132 (statement -> JM LABEL .)
    ANI             reduce using rule 132 (statement -> JM LABEL .)
    ORI             reduce using rule 132 (statement -> JM LABEL .)
    XRI             reduce using rule 132 (statement -> JM LABEL .)
    CMA             reduce using rule 132 (statement -> JM LABEL .)
    RLC             reduce using rule 132 (statement -> JM LABEL .)
    RAL             reduce using rule 132 (statement -> JM LABEL .)
    RRC             reduce using rule 132 (statement -> JM LABEL .)
    RAR             reduce using rule 132 (statement -> JM LABEL .)
    CMP             reduce using rule 132 (statement -> JM LABEL .)
    CPI             reduce using rule 132 (statement -> JM LABEL .)
    CMC             reduce using rule 132 (statement -> JM LABEL .)
    STC             reduce using rule 132 (statement -> JM LABEL .)
    DAA             reduce using rule 132 (statement -> JM LABEL .)
    JMP             reduce using rule 132 (statement -> JM LABEL .)
    JC              reduce using rule 132 (statement -> JM LABEL .)
    JNC             reduce using rule 132 (statement -> JM LABEL .)
    JZ              reduce using rule 132 (statement -> JM LABEL .)
    JNZ             reduce using rule 132 (statement -> JM LABEL .)
    JP              reduce using rule 132 (statement -> JM LABEL .)
    JM              reduce using rule 132 (statement -> JM LABEL .)
    JPE             reduce using rule 132 (statement -> JM LABEL .)
    JPO             reduce using rule 132 (statement -> JM LABEL .)
    CALL            reduce using rule 132 (statement -> JM LABEL .)
    RET             reduce using rule 132 (statement -> JM LABEL .)
    MACHINE         reduce using rule 132 (statement -> JM LABEL .)
    $end            reduce using rule 132 (statement -> JM LABEL .)


state 128

    (135) statement -> JPE byte_16 .

    MOV             reduce using rule 135 (statement -> JPE byte_16 .)
    LABEL           reduce using rule 135 (statement -> JPE byte_16 .)
    MVI             reduce using rule 135 (statement -> JPE byte_16 .)
    LXI             reduce using rule 135 (statement -> JPE byte_16 .)
    LDAX            reduce using rule 135 (statement -> JPE byte_16 .)
    STAX            reduce using rule 135 (statement -> JPE byte_16 .)
    LDA             reduce using rule 135 (statement -> JPE byte_16 .)
    STA             reduce using rule 135 (statement -> JPE byte_16 .)
    LHLD            reduce using rule 135 (statement -> JPE byte_16 .)
    SHLD            reduce using rule 135 (statement -> JPE byte_16 .)
    XCHG            reduce using rule 135 (statement -> JPE byte_16 .)
    ADD             reduce using rule 135 (statement -> JPE byte_16 .)
    ADI             reduce using rule 135 (statement -> JPE byte_16 .)
    ADC             reduce using rule 135 (statement -> JPE byte_16 .)
    ACI             reduce using rule 135 (statement -> JPE byte_16 .)
    SUB             reduce using rule 135 (statement -> JPE byte_16 .)
    SUI             reduce using rule 135 (statement -> JPE byte_16 .)
    SBB             reduce using rule 135 (statement -> JPE byte_16 .)
    SBI             reduce using rule 135 (statement -> JPE byte_16 .)
    INR             reduce using rule 135 (statement -> JPE byte_16 .)
    DCR             reduce using rule 135 (statement -> JPE byte_16 .)
    INX             reduce using rule 135 (statement -> JPE byte_16 .)
    DCX             reduce using rule 135 (statement -> JPE byte_16 .)
    DAD             reduce using rule 135 (statement -> JPE byte_16 .)
    ANA             reduce using rule 135 (statement -> JPE byte_16 .)
    ORA             reduce using rule 135 (statement -> JPE byte_16 .)
    XRA             reduce using rule 135 (statement -> JPE byte_16 .)
    ANI             reduce using rule 135 (statement -> JPE byte_16 .)
    ORI             reduce using rule 135 (statement -> JPE byte_16 .)
    XRI             reduce using rule 135 (statement -> JPE byte_16 .)
    CMA             reduce using rule 135 (statement -> JPE byte_16 .)
    RLC             reduce using rule 135 (statement -> JPE byte_16 .)
    RAL             reduce using rule 135 (statement -> JPE byte_16 .)
    RRC             reduce using rule 135 (statement -> JPE byte_16 .)
    RAR             reduce using rule 135 (statement -> JPE byte_16 .)
    CMP             reduce using rule 135 (statement -> JPE byte_16 .)
    CPI             reduce using rule 135 (statement -> JPE byte_16 .)
    CMC             reduce using rule 135 (statement -> JPE byte_16 .)
    STC             reduce using rule 135 (statement -> JPE byte_16 .)
    DAA             reduce using rule 135 (statement -> JPE byte_16 .)
    JMP             reduce using rule 135 (statement -> JPE byte_16 .)
    JC              reduce using rule 135 (statement -> JPE byte_16 .)
    JNC             reduce using rule 135 (statement -> JPE byte_16 .)
    JZ              reduce using rule 135 (statement -> JPE byte_16 .)
    JNZ             reduce using rule 135 (statement -> JPE byte_16 .)
    JP              reduce using rule 135 (statement -> JPE byte_16 .)
    JM              reduce using rule 135 (statement -> JPE byte_16 .)
    JPE             reduce using rule 135 (statement -> JPE byte_16 .)
    JPO             reduce using rule 135 (statement -> JPE byte_16 .)
    CALL            reduce using rule 135 (statement -> JPE byte_16 .)
    RET             reduce using rule 135 (statement -> JPE byte_16 .)
    MACHINE         reduce using rule 135 (statement -> JPE byte_16 .)
    $end            reduce using rule 135 (statement -> JPE byte_16 .)


state 129

    (136) statement -> JPE LABEL .

    MOV             reduce using rule 136 (statement -> JPE LABEL .)
    LABEL           reduce using rule 136 (statement -> JPE LABEL .)
    MVI             reduce using rule 136 (statement -> JPE LABEL .)
    LXI             reduce using rule 136 (statement -> JPE LABEL .)
    LDAX            reduce using rule 136 (statement -> JPE LABEL .)
    STAX            reduce using rule 136 (statement -> JPE LABEL .)
    LDA             reduce using rule 136 (statement -> JPE LABEL .)
    STA             reduce using rule 136 (statement -> JPE LABEL .)
    LHLD            reduce using rule 136 (statement -> JPE LABEL .)
    SHLD            reduce using rule 136 (statement -> JPE LABEL .)
    XCHG            reduce using rule 136 (statement -> JPE LABEL .)
    ADD             reduce using rule 136 (statement -> JPE LABEL .)
    ADI             reduce using rule 136 (statement -> JPE LABEL .)
    ADC             reduce using rule 136 (statement -> JPE LABEL .)
    ACI             reduce using rule 136 (statement -> JPE LABEL .)
    SUB             reduce using rule 136 (statement -> JPE LABEL .)
    SUI             reduce using rule 136 (statement -> JPE LABEL .)
    SBB             reduce using rule 136 (statement -> JPE LABEL .)
    SBI             reduce using rule 136 (statement -> JPE LABEL .)
    INR             reduce using rule 136 (statement -> JPE LABEL .)
    DCR             reduce using rule 136 (statement -> JPE LABEL .)
    INX             reduce using rule 136 (statement -> JPE LABEL .)
    DCX             reduce using rule 136 (statement -> JPE LABEL .)
    DAD             reduce using rule 136 (statement -> JPE LABEL .)
    ANA             reduce using rule 136 (statement -> JPE LABEL .)
    ORA             reduce using rule 136 (statement -> JPE LABEL .)
    XRA             reduce using rule 136 (statement -> JPE LABEL .)
    ANI             reduce using rule 136 (statement -> JPE LABEL .)
    ORI             reduce using rule 136 (statement -> JPE LABEL .)
    XRI             reduce using rule 136 (statement -> JPE LABEL .)
    CMA             reduce using rule 136 (statement -> JPE LABEL .)
    RLC             reduce using rule 136 (statement -> JPE LABEL .)
    RAL             reduce using rule 136 (statement -> JPE LABEL .)
    RRC             reduce using rule 136 (statement -> JPE LABEL .)
    RAR             reduce using rule 136 (statement -> JPE LABEL .)
    CMP             reduce using rule 136 (statement -> JPE LABEL .)
    CPI             reduce using rule 136 (statement -> JPE LABEL .)
    CMC             reduce using rule 136 (statement -> JPE LABEL .)
    STC             reduce using rule 136 (statement -> JPE LABEL .)
    DAA             reduce using rule 136 (statement -> JPE LABEL .)
    JMP             reduce using rule 136 (statement -> JPE LABEL .)
    JC              reduce using rule 136 (statement -> JPE LABEL .)
    JNC             reduce using rule 136 (statement -> JPE LABEL .)
    JZ              reduce using rule 136 (statement -> JPE LABEL .)
    JNZ             reduce using rule 136 (statement -> JPE LABEL .)
    JP              reduce using rule 136 (statement -> JPE LABEL .)
    JM              reduce using rule 136 (statement -> JPE LABEL .)
    JPE             reduce using rule 136 (statement -> JPE LABEL .)
    JPO             reduce using rule 136 (statement -> JPE LABEL .)
    CALL            reduce using rule 136 (statement -> JPE LABEL .)
    RET             reduce using rule 136 (statement -> JPE LABEL .)
    MACHINE         reduce using rule 136 (statement -> JPE LABEL .)
    $end            reduce using rule 136 (statement -> JPE LABEL .)


state 130

    (139) statement -> JPO byte_16 .

    MOV             reduce using rule 139 (statement -> JPO byte_16 .)
    LABEL           reduce using rule 139 (statement -> JPO byte_16 .)
    MVI             reduce using rule 139 (statement -> JPO byte_16 .)
    LXI             reduce using rule 139 (statement -> JPO byte_16 .)
    LDAX            reduce using rule 139 (statement -> JPO byte_16 .)
    STAX            reduce using rule 139 (statement -> JPO byte_16 .)
    LDA             reduce using rule 139 (statement -> JPO byte_16 .)
    STA             reduce using rule 139 (statement -> JPO byte_16 .)
    LHLD            reduce using rule 139 (statement -> JPO byte_16 .)
    SHLD            reduce using rule 139 (statement -> JPO byte_16 .)
    XCHG            reduce using rule 139 (statement -> JPO byte_16 .)
    ADD             reduce using rule 139 (statement -> JPO byte_16 .)
    ADI             reduce using rule 139 (statement -> JPO byte_16 .)
    ADC             reduce using rule 139 (statement -> JPO byte_16 .)
    ACI             reduce using rule 139 (statement -> JPO byte_16 .)
    SUB             reduce using rule 139 (statement -> JPO byte_16 .)
    SUI             reduce using rule 139 (statement -> JPO byte_16 .)
    SBB             reduce using rule 139 (statement -> JPO byte_16 .)
    SBI             reduce using rule 139 (statement -> JPO byte_16 .)
    INR             reduce using rule 139 (statement -> JPO byte_16 .)
    DCR             reduce using rule 139 (statement -> JPO byte_16 .)
    INX             reduce using rule 139 (statement -> JPO byte_16 .)
    DCX             reduce using rule 139 (statement -> JPO byte_16 .)
    DAD             reduce using rule 139 (statement -> JPO byte_16 .)
    ANA             reduce using rule 139 (statement -> JPO byte_16 .)
    ORA             reduce using rule 139 (statement -> JPO byte_16 .)
    XRA             reduce using rule 139 (statement -> JPO byte_16 .)
    ANI             reduce using rule 139 (statement -> JPO byte_16 .)
    ORI             reduce using rule 139 (statement -> JPO byte_16 .)
    XRI             reduce using rule 139 (statement -> JPO byte_16 .)
    CMA             reduce using rule 139 (statement -> JPO byte_16 .)
    RLC             reduce using rule 139 (statement -> JPO byte_16 .)
    RAL             reduce using rule 139 (statement -> JPO byte_16 .)
    RRC             reduce using rule 139 (statement -> JPO byte_16 .)
    RAR             reduce using rule 139 (statement -> JPO byte_16 .)
    CMP             reduce using rule 139 (statement -> JPO byte_16 .)
    CPI             reduce using rule 139 (statement -> JPO byte_16 .)
    CMC             reduce using rule 139 (statement -> JPO byte_16 .)
    STC             reduce using rule 139 (statement -> JPO byte_16 .)
    DAA             reduce using rule 139 (statement -> JPO byte_16 .)
    JMP             reduce using rule 139 (statement -> JPO byte_16 .)
    JC              reduce using rule 139 (statement -> JPO byte_16 .)
    JNC             reduce using rule 139 (statement -> JPO byte_16 .)
    JZ              reduce using rule 139 (statement -> JPO byte_16 .)
    JNZ             reduce using rule 139 (statement -> JPO byte_16 .)
    JP              reduce using rule 139 (statement -> JPO byte_16 .)
    JM              reduce using rule 139 (statement -> JPO byte_16 .)
    JPE             reduce using rule 139 (statement -> JPO byte_16 .)
    JPO             reduce using rule 139 (statement -> JPO byte_16 .)
    CALL            reduce using rule 139 (statement -> JPO byte_16 .)
    RET             reduce using rule 139 (statement -> JPO byte_16 .)
    MACHINE         reduce using rule 139 (statement -> JPO byte_16 .)
    $end            reduce using rule 139 (statement -> JPO byte_16 .)


state 131

    (140) statement -> JPO LABEL .

    MOV             reduce using rule 140 (statement -> JPO LABEL .)
    LABEL           reduce using rule 140 (statement -> JPO LABEL .)
    MVI             reduce using rule 140 (statement -> JPO LABEL .)
    LXI             reduce using rule 140 (statement -> JPO LABEL .)
    LDAX            reduce using rule 140 (statement -> JPO LABEL .)
    STAX            reduce using rule 140 (statement -> JPO LABEL .)
    LDA             reduce using rule 140 (statement -> JPO LABEL .)
    STA             reduce using rule 140 (statement -> JPO LABEL .)
    LHLD            reduce using rule 140 (statement -> JPO LABEL .)
    SHLD            reduce using rule 140 (statement -> JPO LABEL .)
    XCHG            reduce using rule 140 (statement -> JPO LABEL .)
    ADD             reduce using rule 140 (statement -> JPO LABEL .)
    ADI             reduce using rule 140 (statement -> JPO LABEL .)
    ADC             reduce using rule 140 (statement -> JPO LABEL .)
    ACI             reduce using rule 140 (statement -> JPO LABEL .)
    SUB             reduce using rule 140 (statement -> JPO LABEL .)
    SUI             reduce using rule 140 (statement -> JPO LABEL .)
    SBB             reduce using rule 140 (statement -> JPO LABEL .)
    SBI             reduce using rule 140 (statement -> JPO LABEL .)
    INR             reduce using rule 140 (statement -> JPO LABEL .)
    DCR             reduce using rule 140 (statement -> JPO LABEL .)
    INX             reduce using rule 140 (statement -> JPO LABEL .)
    DCX             reduce using rule 140 (statement -> JPO LABEL .)
    DAD             reduce using rule 140 (statement -> JPO LABEL .)
    ANA             reduce using rule 140 (statement -> JPO LABEL .)
    ORA             reduce using rule 140 (statement -> JPO LABEL .)
    XRA             reduce using rule 140 (statement -> JPO LABEL .)
    ANI             reduce using rule 140 (statement -> JPO LABEL .)
    ORI             reduce using rule 140 (statement -> JPO LABEL .)
    XRI             reduce using rule 140 (statement -> JPO LABEL .)
    CMA             reduce using rule 140 (statement -> JPO LABEL .)
    RLC             reduce using rule 140 (statement -> JPO LABEL .)
    RAL             reduce using rule 140 (statement -> JPO LABEL .)
    RRC             reduce using rule 140 (statement -> JPO LABEL .)
    RAR             reduce using rule 140 (statement -> JPO LABEL .)
    CMP             reduce using rule 140 (statement -> JPO LABEL .)
    CPI             reduce using rule 140 (statement -> JPO LABEL .)
    CMC             reduce using rule 140 (statement -> JPO LABEL .)
    STC             reduce using rule 140 (statement -> JPO LABEL .)
    DAA             reduce using rule 140 (statement -> JPO LABEL .)
    JMP             reduce using rule 140 (statement -> JPO LABEL .)
    JC              reduce using rule 140 (statement -> JPO LABEL .)
    JNC             reduce using rule 140 (statement -> JPO LABEL .)
    JZ              reduce using rule 140 (statement -> JPO LABEL .)
    JNZ             reduce using rule 140 (statement -> JPO LABEL .)
    JP              reduce using rule 140 (statement -> JPO LABEL .)
    JM              reduce using rule 140 (statement -> JPO LABEL .)
    JPE             reduce using rule 140 (statement -> JPO LABEL .)
    JPO             reduce using rule 140 (statement -> JPO LABEL .)
    CALL            reduce using rule 140 (statement -> JPO LABEL .)
    RET             reduce using rule 140 (statement -> JPO LABEL .)
    MACHINE         reduce using rule 140 (statement -> JPO LABEL .)
    $end            reduce using rule 140 (statement -> JPO LABEL .)


state 132

    (143) statement -> CALL byte_16 .

    MOV             reduce using rule 143 (statement -> CALL byte_16 .)
    LABEL           reduce using rule 143 (statement -> CALL byte_16 .)
    MVI             reduce using rule 143 (statement -> CALL byte_16 .)
    LXI             reduce using rule 143 (statement -> CALL byte_16 .)
    LDAX            reduce using rule 143 (statement -> CALL byte_16 .)
    STAX            reduce using rule 143 (statement -> CALL byte_16 .)
    LDA             reduce using rule 143 (statement -> CALL byte_16 .)
    STA             reduce using rule 143 (statement -> CALL byte_16 .)
    LHLD            reduce using rule 143 (statement -> CALL byte_16 .)
    SHLD            reduce using rule 143 (statement -> CALL byte_16 .)
    XCHG            reduce using rule 143 (statement -> CALL byte_16 .)
    ADD             reduce using rule 143 (statement -> CALL byte_16 .)
    ADI             reduce using rule 143 (statement -> CALL byte_16 .)
    ADC             reduce using rule 143 (statement -> CALL byte_16 .)
    ACI             reduce using rule 143 (statement -> CALL byte_16 .)
    SUB             reduce using rule 143 (statement -> CALL byte_16 .)
    SUI             reduce using rule 143 (statement -> CALL byte_16 .)
    SBB             reduce using rule 143 (statement -> CALL byte_16 .)
    SBI             reduce using rule 143 (statement -> CALL byte_16 .)
    INR             reduce using rule 143 (statement -> CALL byte_16 .)
    DCR             reduce using rule 143 (statement -> CALL byte_16 .)
    INX             reduce using rule 143 (statement -> CALL byte_16 .)
    DCX             reduce using rule 143 (statement -> CALL byte_16 .)
    DAD             reduce using rule 143 (statement -> CALL byte_16 .)
    ANA             reduce using rule 143 (statement -> CALL byte_16 .)
    ORA             reduce using rule 143 (statement -> CALL byte_16 .)
    XRA             reduce using rule 143 (statement -> CALL byte_16 .)
    ANI             reduce using rule 143 (statement -> CALL byte_16 .)
    ORI             reduce using rule 143 (statement -> CALL byte_16 .)
    XRI             reduce using rule 143 (statement -> CALL byte_16 .)
    CMA             reduce using rule 143 (statement -> CALL byte_16 .)
    RLC             reduce using rule 143 (statement -> CALL byte_16 .)
    RAL             reduce using rule 143 (statement -> CALL byte_16 .)
    RRC             reduce using rule 143 (statement -> CALL byte_16 .)
    RAR             reduce using rule 143 (statement -> CALL byte_16 .)
    CMP             reduce using rule 143 (statement -> CALL byte_16 .)
    CPI             reduce using rule 143 (statement -> CALL byte_16 .)
    CMC             reduce using rule 143 (statement -> CALL byte_16 .)
    STC             reduce using rule 143 (statement -> CALL byte_16 .)
    DAA             reduce using rule 143 (statement -> CALL byte_16 .)
    JMP             reduce using rule 143 (statement -> CALL byte_16 .)
    JC              reduce using rule 143 (statement -> CALL byte_16 .)
    JNC             reduce using rule 143 (statement -> CALL byte_16 .)
    JZ              reduce using rule 143 (statement -> CALL byte_16 .)
    JNZ             reduce using rule 143 (statement -> CALL byte_16 .)
    JP              reduce using rule 143 (statement -> CALL byte_16 .)
    JM              reduce using rule 143 (statement -> CALL byte_16 .)
    JPE             reduce using rule 143 (statement -> CALL byte_16 .)
    JPO             reduce using rule 143 (statement -> CALL byte_16 .)
    CALL            reduce using rule 143 (statement -> CALL byte_16 .)
    RET             reduce using rule 143 (statement -> CALL byte_16 .)
    MACHINE         reduce using rule 143 (statement -> CALL byte_16 .)
    $end            reduce using rule 143 (statement -> CALL byte_16 .)


state 133

    (144) statement -> CALL LABEL .

    MOV             reduce using rule 144 (statement -> CALL LABEL .)
    LABEL           reduce using rule 144 (statement -> CALL LABEL .)
    MVI             reduce using rule 144 (statement -> CALL LABEL .)
    LXI             reduce using rule 144 (statement -> CALL LABEL .)
    LDAX            reduce using rule 144 (statement -> CALL LABEL .)
    STAX            reduce using rule 144 (statement -> CALL LABEL .)
    LDA             reduce using rule 144 (statement -> CALL LABEL .)
    STA             reduce using rule 144 (statement -> CALL LABEL .)
    LHLD            reduce using rule 144 (statement -> CALL LABEL .)
    SHLD            reduce using rule 144 (statement -> CALL LABEL .)
    XCHG            reduce using rule 144 (statement -> CALL LABEL .)
    ADD             reduce using rule 144 (statement -> CALL LABEL .)
    ADI             reduce using rule 144 (statement -> CALL LABEL .)
    ADC             reduce using rule 144 (statement -> CALL LABEL .)
    ACI             reduce using rule 144 (statement -> CALL LABEL .)
    SUB             reduce using rule 144 (statement -> CALL LABEL .)
    SUI             reduce using rule 144 (statement -> CALL LABEL .)
    SBB             reduce using rule 144 (statement -> CALL LABEL .)
    SBI             reduce using rule 144 (statement -> CALL LABEL .)
    INR             reduce using rule 144 (statement -> CALL LABEL .)
    DCR             reduce using rule 144 (statement -> CALL LABEL .)
    INX             reduce using rule 144 (statement -> CALL LABEL .)
    DCX             reduce using rule 144 (statement -> CALL LABEL .)
    DAD             reduce using rule 144 (statement -> CALL LABEL .)
    ANA             reduce using rule 144 (statement -> CALL LABEL .)
    ORA             reduce using rule 144 (statement -> CALL LABEL .)
    XRA             reduce using rule 144 (statement -> CALL LABEL .)
    ANI             reduce using rule 144 (statement -> CALL LABEL .)
    ORI             reduce using rule 144 (statement -> CALL LABEL .)
    XRI             reduce using rule 144 (statement -> CALL LABEL .)
    CMA             reduce using rule 144 (statement -> CALL LABEL .)
    RLC             reduce using rule 144 (statement -> CALL LABEL .)
    RAL             reduce using rule 144 (statement -> CALL LABEL .)
    RRC             reduce using rule 144 (statement -> CALL LABEL .)
    RAR             reduce using rule 144 (statement -> CALL LABEL .)
    CMP             reduce using rule 144 (statement -> CALL LABEL .)
    CPI             reduce using rule 144 (statement -> CALL LABEL .)
    CMC             reduce using rule 144 (statement -> CALL LABEL .)
    STC             reduce using rule 144 (statement -> CALL LABEL .)
    DAA             reduce using rule 144 (statement -> CALL LABEL .)
    JMP             reduce using rule 144 (statement -> CALL LABEL .)
    JC              reduce using rule 144 (statement -> CALL LABEL .)
    JNC             reduce using rule 144 (statement -> CALL LABEL .)
    JZ              reduce using rule 144 (statement -> CALL LABEL .)
    JNZ             reduce using rule 144 (statement -> CALL LABEL .)
    JP              reduce using rule 144 (statement -> CALL LABEL .)
    JM              reduce using rule 144 (statement -> CALL LABEL .)
    JPE             reduce using rule 144 (statement -> CALL LABEL .)
    JPO             reduce using rule 144 (statement -> CALL LABEL .)
    CALL            reduce using rule 144 (statement -> CALL LABEL .)
    RET             reduce using rule 144 (statement -> CALL LABEL .)
    MACHINE         reduce using rule 144 (statement -> CALL LABEL .)
    $end            reduce using rule 144 (statement -> CALL LABEL .)


state 134

    (3) statement -> MOV register COMMA . register
    (4) statement -> MOV register COMMA . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 192
    memory                         shift and go to state 193

state 135

    (5) statement -> MOV memory COMMA . register
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64

    register                       shift and go to state 194

state 136

    (6) statement -> LABEL COLON MOV . register COMMA register
    (7) statement -> LABEL COLON MOV . register COMMA memory
    (8) statement -> LABEL COLON MOV . memory COMMA register
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 195
    memory                         shift and go to state 196

state 137

    (11) statement -> LABEL COLON MVI . register COMMA byte_8
    (12) statement -> LABEL COLON MVI . memory COMMA byte_8
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 197
    memory                         shift and go to state 198

state 138

    (14) statement -> LABEL COLON LXI . register_pair_3 COMMA byte_16
    (161) register_pair_3 -> . B
    (162) register_pair_3 -> . D
    (163) register_pair_3 -> . H

    B               shift and go to state 70
    D               shift and go to state 71
    H               shift and go to state 72

    register_pair_3                shift and go to state 199

state 139

    (16) statement -> LABEL COLON LDAX . register_pair_2
    (159) register_pair_2 -> . B
    (160) register_pair_2 -> . D

    B               shift and go to state 74
    D               shift and go to state 75

    register_pair_2                shift and go to state 200

state 140

    (18) statement -> LABEL COLON STAX . register_pair_2
    (159) register_pair_2 -> . B
    (160) register_pair_2 -> . D

    B               shift and go to state 74
    D               shift and go to state 75

    register_pair_2                shift and go to state 201

state 141

    (20) statement -> LABEL COLON LDA . byte_16
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 202

state 142

    (22) statement -> LABEL COLON STA . byte_16
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 203

state 143

    (24) statement -> LABEL COLON LHLD . byte_16
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 204

state 144

    (26) statement -> LABEL COLON SHLD . byte_16
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 205

state 145

    (28) statement -> LABEL COLON XCHG .

    MOV             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    LABEL           reduce using rule 28 (statement -> LABEL COLON XCHG .)
    MVI             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    LXI             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    LDAX            reduce using rule 28 (statement -> LABEL COLON XCHG .)
    STAX            reduce using rule 28 (statement -> LABEL COLON XCHG .)
    LDA             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    STA             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    LHLD            reduce using rule 28 (statement -> LABEL COLON XCHG .)
    SHLD            reduce using rule 28 (statement -> LABEL COLON XCHG .)
    XCHG            reduce using rule 28 (statement -> LABEL COLON XCHG .)
    ADD             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    ADI             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    ADC             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    ACI             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    SUB             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    SUI             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    SBB             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    SBI             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    INR             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    DCR             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    INX             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    DCX             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    DAD             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    ANA             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    ORA             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    XRA             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    ANI             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    ORI             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    XRI             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    CMA             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    RLC             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    RAL             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    RRC             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    RAR             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    CMP             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    CPI             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    CMC             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    STC             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    DAA             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    JMP             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    JC              reduce using rule 28 (statement -> LABEL COLON XCHG .)
    JNC             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    JZ              reduce using rule 28 (statement -> LABEL COLON XCHG .)
    JNZ             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    JP              reduce using rule 28 (statement -> LABEL COLON XCHG .)
    JM              reduce using rule 28 (statement -> LABEL COLON XCHG .)
    JPE             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    JPO             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    CALL            reduce using rule 28 (statement -> LABEL COLON XCHG .)
    RET             reduce using rule 28 (statement -> LABEL COLON XCHG .)
    MACHINE         reduce using rule 28 (statement -> LABEL COLON XCHG .)
    $end            reduce using rule 28 (statement -> LABEL COLON XCHG .)


state 146

    (31) statement -> LABEL COLON ADD . register
    (32) statement -> LABEL COLON ADD . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 206
    memory                         shift and go to state 207

state 147

    (34) statement -> LABEL COLON ADI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 208

state 148

    (37) statement -> LABEL COLON ADC . register
    (38) statement -> LABEL COLON ADC . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 209
    memory                         shift and go to state 210

state 149

    (40) statement -> LABEL COLON ACI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 211

state 150

    (43) statement -> LABEL COLON SUB . register
    (44) statement -> LABEL COLON SUB . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 212
    memory                         shift and go to state 213

state 151

    (46) statement -> LABEL COLON SUI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 214

state 152

    (49) statement -> LABEL COLON SBB . register
    (50) statement -> LABEL COLON SBB . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 215
    memory                         shift and go to state 216

state 153

    (52) statement -> LABEL COLON SBI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 217

state 154

    (55) statement -> LABEL COLON INR . register
    (56) statement -> LABEL COLON INR . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 218
    memory                         shift and go to state 219

state 155

    (59) statement -> LABEL COLON DCR . register
    (60) statement -> LABEL COLON DCR . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 220
    memory                         shift and go to state 221

state 156

    (62) statement -> LABEL COLON INX . register_pair_3
    (161) register_pair_3 -> . B
    (162) register_pair_3 -> . D
    (163) register_pair_3 -> . H

    B               shift and go to state 70
    D               shift and go to state 71
    H               shift and go to state 72

    register_pair_3                shift and go to state 222

state 157

    (64) statement -> LABEL COLON DCX . register_pair_3
    (161) register_pair_3 -> . B
    (162) register_pair_3 -> . D
    (163) register_pair_3 -> . H

    B               shift and go to state 70
    D               shift and go to state 71
    H               shift and go to state 72

    register_pair_3                shift and go to state 223

state 158

    (66) statement -> LABEL COLON DAD . register_pair_3
    (161) register_pair_3 -> . B
    (162) register_pair_3 -> . D
    (163) register_pair_3 -> . H

    B               shift and go to state 70
    D               shift and go to state 71
    H               shift and go to state 72

    register_pair_3                shift and go to state 224

state 159

    (69) statement -> LABEL COLON ANA . register
    (70) statement -> LABEL COLON ANA . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 225
    memory                         shift and go to state 226

state 160

    (73) statement -> LABEL COLON ORA . register
    (74) statement -> LABEL COLON ORA . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 227
    memory                         shift and go to state 228

state 161

    (77) statement -> LABEL COLON XRA . register
    (78) statement -> LABEL COLON XRA . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 229
    memory                         shift and go to state 230

state 162

    (80) statement -> LABEL COLON ANI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 231

state 163

    (82) statement -> LABEL COLON ORI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 232

state 164

    (84) statement -> LABEL COLON XRI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 233

state 165

    (86) statement -> LABEL COLON CMA .

    MOV             reduce using rule 86 (statement -> LABEL COLON CMA .)
    LABEL           reduce using rule 86 (statement -> LABEL COLON CMA .)
    MVI             reduce using rule 86 (statement -> LABEL COLON CMA .)
    LXI             reduce using rule 86 (statement -> LABEL COLON CMA .)
    LDAX            reduce using rule 86 (statement -> LABEL COLON CMA .)
    STAX            reduce using rule 86 (statement -> LABEL COLON CMA .)
    LDA             reduce using rule 86 (statement -> LABEL COLON CMA .)
    STA             reduce using rule 86 (statement -> LABEL COLON CMA .)
    LHLD            reduce using rule 86 (statement -> LABEL COLON CMA .)
    SHLD            reduce using rule 86 (statement -> LABEL COLON CMA .)
    XCHG            reduce using rule 86 (statement -> LABEL COLON CMA .)
    ADD             reduce using rule 86 (statement -> LABEL COLON CMA .)
    ADI             reduce using rule 86 (statement -> LABEL COLON CMA .)
    ADC             reduce using rule 86 (statement -> LABEL COLON CMA .)
    ACI             reduce using rule 86 (statement -> LABEL COLON CMA .)
    SUB             reduce using rule 86 (statement -> LABEL COLON CMA .)
    SUI             reduce using rule 86 (statement -> LABEL COLON CMA .)
    SBB             reduce using rule 86 (statement -> LABEL COLON CMA .)
    SBI             reduce using rule 86 (statement -> LABEL COLON CMA .)
    INR             reduce using rule 86 (statement -> LABEL COLON CMA .)
    DCR             reduce using rule 86 (statement -> LABEL COLON CMA .)
    INX             reduce using rule 86 (statement -> LABEL COLON CMA .)
    DCX             reduce using rule 86 (statement -> LABEL COLON CMA .)
    DAD             reduce using rule 86 (statement -> LABEL COLON CMA .)
    ANA             reduce using rule 86 (statement -> LABEL COLON CMA .)
    ORA             reduce using rule 86 (statement -> LABEL COLON CMA .)
    XRA             reduce using rule 86 (statement -> LABEL COLON CMA .)
    ANI             reduce using rule 86 (statement -> LABEL COLON CMA .)
    ORI             reduce using rule 86 (statement -> LABEL COLON CMA .)
    XRI             reduce using rule 86 (statement -> LABEL COLON CMA .)
    CMA             reduce using rule 86 (statement -> LABEL COLON CMA .)
    RLC             reduce using rule 86 (statement -> LABEL COLON CMA .)
    RAL             reduce using rule 86 (statement -> LABEL COLON CMA .)
    RRC             reduce using rule 86 (statement -> LABEL COLON CMA .)
    RAR             reduce using rule 86 (statement -> LABEL COLON CMA .)
    CMP             reduce using rule 86 (statement -> LABEL COLON CMA .)
    CPI             reduce using rule 86 (statement -> LABEL COLON CMA .)
    CMC             reduce using rule 86 (statement -> LABEL COLON CMA .)
    STC             reduce using rule 86 (statement -> LABEL COLON CMA .)
    DAA             reduce using rule 86 (statement -> LABEL COLON CMA .)
    JMP             reduce using rule 86 (statement -> LABEL COLON CMA .)
    JC              reduce using rule 86 (statement -> LABEL COLON CMA .)
    JNC             reduce using rule 86 (statement -> LABEL COLON CMA .)
    JZ              reduce using rule 86 (statement -> LABEL COLON CMA .)
    JNZ             reduce using rule 86 (statement -> LABEL COLON CMA .)
    JP              reduce using rule 86 (statement -> LABEL COLON CMA .)
    JM              reduce using rule 86 (statement -> LABEL COLON CMA .)
    JPE             reduce using rule 86 (statement -> LABEL COLON CMA .)
    JPO             reduce using rule 86 (statement -> LABEL COLON CMA .)
    CALL            reduce using rule 86 (statement -> LABEL COLON CMA .)
    RET             reduce using rule 86 (statement -> LABEL COLON CMA .)
    MACHINE         reduce using rule 86 (statement -> LABEL COLON CMA .)
    $end            reduce using rule 86 (statement -> LABEL COLON CMA .)


state 166

    (88) statement -> LABEL COLON RLC .

    MOV             reduce using rule 88 (statement -> LABEL COLON RLC .)
    LABEL           reduce using rule 88 (statement -> LABEL COLON RLC .)
    MVI             reduce using rule 88 (statement -> LABEL COLON RLC .)
    LXI             reduce using rule 88 (statement -> LABEL COLON RLC .)
    LDAX            reduce using rule 88 (statement -> LABEL COLON RLC .)
    STAX            reduce using rule 88 (statement -> LABEL COLON RLC .)
    LDA             reduce using rule 88 (statement -> LABEL COLON RLC .)
    STA             reduce using rule 88 (statement -> LABEL COLON RLC .)
    LHLD            reduce using rule 88 (statement -> LABEL COLON RLC .)
    SHLD            reduce using rule 88 (statement -> LABEL COLON RLC .)
    XCHG            reduce using rule 88 (statement -> LABEL COLON RLC .)
    ADD             reduce using rule 88 (statement -> LABEL COLON RLC .)
    ADI             reduce using rule 88 (statement -> LABEL COLON RLC .)
    ADC             reduce using rule 88 (statement -> LABEL COLON RLC .)
    ACI             reduce using rule 88 (statement -> LABEL COLON RLC .)
    SUB             reduce using rule 88 (statement -> LABEL COLON RLC .)
    SUI             reduce using rule 88 (statement -> LABEL COLON RLC .)
    SBB             reduce using rule 88 (statement -> LABEL COLON RLC .)
    SBI             reduce using rule 88 (statement -> LABEL COLON RLC .)
    INR             reduce using rule 88 (statement -> LABEL COLON RLC .)
    DCR             reduce using rule 88 (statement -> LABEL COLON RLC .)
    INX             reduce using rule 88 (statement -> LABEL COLON RLC .)
    DCX             reduce using rule 88 (statement -> LABEL COLON RLC .)
    DAD             reduce using rule 88 (statement -> LABEL COLON RLC .)
    ANA             reduce using rule 88 (statement -> LABEL COLON RLC .)
    ORA             reduce using rule 88 (statement -> LABEL COLON RLC .)
    XRA             reduce using rule 88 (statement -> LABEL COLON RLC .)
    ANI             reduce using rule 88 (statement -> LABEL COLON RLC .)
    ORI             reduce using rule 88 (statement -> LABEL COLON RLC .)
    XRI             reduce using rule 88 (statement -> LABEL COLON RLC .)
    CMA             reduce using rule 88 (statement -> LABEL COLON RLC .)
    RLC             reduce using rule 88 (statement -> LABEL COLON RLC .)
    RAL             reduce using rule 88 (statement -> LABEL COLON RLC .)
    RRC             reduce using rule 88 (statement -> LABEL COLON RLC .)
    RAR             reduce using rule 88 (statement -> LABEL COLON RLC .)
    CMP             reduce using rule 88 (statement -> LABEL COLON RLC .)
    CPI             reduce using rule 88 (statement -> LABEL COLON RLC .)
    CMC             reduce using rule 88 (statement -> LABEL COLON RLC .)
    STC             reduce using rule 88 (statement -> LABEL COLON RLC .)
    DAA             reduce using rule 88 (statement -> LABEL COLON RLC .)
    JMP             reduce using rule 88 (statement -> LABEL COLON RLC .)
    JC              reduce using rule 88 (statement -> LABEL COLON RLC .)
    JNC             reduce using rule 88 (statement -> LABEL COLON RLC .)
    JZ              reduce using rule 88 (statement -> LABEL COLON RLC .)
    JNZ             reduce using rule 88 (statement -> LABEL COLON RLC .)
    JP              reduce using rule 88 (statement -> LABEL COLON RLC .)
    JM              reduce using rule 88 (statement -> LABEL COLON RLC .)
    JPE             reduce using rule 88 (statement -> LABEL COLON RLC .)
    JPO             reduce using rule 88 (statement -> LABEL COLON RLC .)
    CALL            reduce using rule 88 (statement -> LABEL COLON RLC .)
    RET             reduce using rule 88 (statement -> LABEL COLON RLC .)
    MACHINE         reduce using rule 88 (statement -> LABEL COLON RLC .)
    $end            reduce using rule 88 (statement -> LABEL COLON RLC .)


state 167

    (90) statement -> LABEL COLON RAL .

    MOV             reduce using rule 90 (statement -> LABEL COLON RAL .)
    LABEL           reduce using rule 90 (statement -> LABEL COLON RAL .)
    MVI             reduce using rule 90 (statement -> LABEL COLON RAL .)
    LXI             reduce using rule 90 (statement -> LABEL COLON RAL .)
    LDAX            reduce using rule 90 (statement -> LABEL COLON RAL .)
    STAX            reduce using rule 90 (statement -> LABEL COLON RAL .)
    LDA             reduce using rule 90 (statement -> LABEL COLON RAL .)
    STA             reduce using rule 90 (statement -> LABEL COLON RAL .)
    LHLD            reduce using rule 90 (statement -> LABEL COLON RAL .)
    SHLD            reduce using rule 90 (statement -> LABEL COLON RAL .)
    XCHG            reduce using rule 90 (statement -> LABEL COLON RAL .)
    ADD             reduce using rule 90 (statement -> LABEL COLON RAL .)
    ADI             reduce using rule 90 (statement -> LABEL COLON RAL .)
    ADC             reduce using rule 90 (statement -> LABEL COLON RAL .)
    ACI             reduce using rule 90 (statement -> LABEL COLON RAL .)
    SUB             reduce using rule 90 (statement -> LABEL COLON RAL .)
    SUI             reduce using rule 90 (statement -> LABEL COLON RAL .)
    SBB             reduce using rule 90 (statement -> LABEL COLON RAL .)
    SBI             reduce using rule 90 (statement -> LABEL COLON RAL .)
    INR             reduce using rule 90 (statement -> LABEL COLON RAL .)
    DCR             reduce using rule 90 (statement -> LABEL COLON RAL .)
    INX             reduce using rule 90 (statement -> LABEL COLON RAL .)
    DCX             reduce using rule 90 (statement -> LABEL COLON RAL .)
    DAD             reduce using rule 90 (statement -> LABEL COLON RAL .)
    ANA             reduce using rule 90 (statement -> LABEL COLON RAL .)
    ORA             reduce using rule 90 (statement -> LABEL COLON RAL .)
    XRA             reduce using rule 90 (statement -> LABEL COLON RAL .)
    ANI             reduce using rule 90 (statement -> LABEL COLON RAL .)
    ORI             reduce using rule 90 (statement -> LABEL COLON RAL .)
    XRI             reduce using rule 90 (statement -> LABEL COLON RAL .)
    CMA             reduce using rule 90 (statement -> LABEL COLON RAL .)
    RLC             reduce using rule 90 (statement -> LABEL COLON RAL .)
    RAL             reduce using rule 90 (statement -> LABEL COLON RAL .)
    RRC             reduce using rule 90 (statement -> LABEL COLON RAL .)
    RAR             reduce using rule 90 (statement -> LABEL COLON RAL .)
    CMP             reduce using rule 90 (statement -> LABEL COLON RAL .)
    CPI             reduce using rule 90 (statement -> LABEL COLON RAL .)
    CMC             reduce using rule 90 (statement -> LABEL COLON RAL .)
    STC             reduce using rule 90 (statement -> LABEL COLON RAL .)
    DAA             reduce using rule 90 (statement -> LABEL COLON RAL .)
    JMP             reduce using rule 90 (statement -> LABEL COLON RAL .)
    JC              reduce using rule 90 (statement -> LABEL COLON RAL .)
    JNC             reduce using rule 90 (statement -> LABEL COLON RAL .)
    JZ              reduce using rule 90 (statement -> LABEL COLON RAL .)
    JNZ             reduce using rule 90 (statement -> LABEL COLON RAL .)
    JP              reduce using rule 90 (statement -> LABEL COLON RAL .)
    JM              reduce using rule 90 (statement -> LABEL COLON RAL .)
    JPE             reduce using rule 90 (statement -> LABEL COLON RAL .)
    JPO             reduce using rule 90 (statement -> LABEL COLON RAL .)
    CALL            reduce using rule 90 (statement -> LABEL COLON RAL .)
    RET             reduce using rule 90 (statement -> LABEL COLON RAL .)
    MACHINE         reduce using rule 90 (statement -> LABEL COLON RAL .)
    $end            reduce using rule 90 (statement -> LABEL COLON RAL .)


state 168

    (92) statement -> LABEL COLON RRC .

    MOV             reduce using rule 92 (statement -> LABEL COLON RRC .)
    LABEL           reduce using rule 92 (statement -> LABEL COLON RRC .)
    MVI             reduce using rule 92 (statement -> LABEL COLON RRC .)
    LXI             reduce using rule 92 (statement -> LABEL COLON RRC .)
    LDAX            reduce using rule 92 (statement -> LABEL COLON RRC .)
    STAX            reduce using rule 92 (statement -> LABEL COLON RRC .)
    LDA             reduce using rule 92 (statement -> LABEL COLON RRC .)
    STA             reduce using rule 92 (statement -> LABEL COLON RRC .)
    LHLD            reduce using rule 92 (statement -> LABEL COLON RRC .)
    SHLD            reduce using rule 92 (statement -> LABEL COLON RRC .)
    XCHG            reduce using rule 92 (statement -> LABEL COLON RRC .)
    ADD             reduce using rule 92 (statement -> LABEL COLON RRC .)
    ADI             reduce using rule 92 (statement -> LABEL COLON RRC .)
    ADC             reduce using rule 92 (statement -> LABEL COLON RRC .)
    ACI             reduce using rule 92 (statement -> LABEL COLON RRC .)
    SUB             reduce using rule 92 (statement -> LABEL COLON RRC .)
    SUI             reduce using rule 92 (statement -> LABEL COLON RRC .)
    SBB             reduce using rule 92 (statement -> LABEL COLON RRC .)
    SBI             reduce using rule 92 (statement -> LABEL COLON RRC .)
    INR             reduce using rule 92 (statement -> LABEL COLON RRC .)
    DCR             reduce using rule 92 (statement -> LABEL COLON RRC .)
    INX             reduce using rule 92 (statement -> LABEL COLON RRC .)
    DCX             reduce using rule 92 (statement -> LABEL COLON RRC .)
    DAD             reduce using rule 92 (statement -> LABEL COLON RRC .)
    ANA             reduce using rule 92 (statement -> LABEL COLON RRC .)
    ORA             reduce using rule 92 (statement -> LABEL COLON RRC .)
    XRA             reduce using rule 92 (statement -> LABEL COLON RRC .)
    ANI             reduce using rule 92 (statement -> LABEL COLON RRC .)
    ORI             reduce using rule 92 (statement -> LABEL COLON RRC .)
    XRI             reduce using rule 92 (statement -> LABEL COLON RRC .)
    CMA             reduce using rule 92 (statement -> LABEL COLON RRC .)
    RLC             reduce using rule 92 (statement -> LABEL COLON RRC .)
    RAL             reduce using rule 92 (statement -> LABEL COLON RRC .)
    RRC             reduce using rule 92 (statement -> LABEL COLON RRC .)
    RAR             reduce using rule 92 (statement -> LABEL COLON RRC .)
    CMP             reduce using rule 92 (statement -> LABEL COLON RRC .)
    CPI             reduce using rule 92 (statement -> LABEL COLON RRC .)
    CMC             reduce using rule 92 (statement -> LABEL COLON RRC .)
    STC             reduce using rule 92 (statement -> LABEL COLON RRC .)
    DAA             reduce using rule 92 (statement -> LABEL COLON RRC .)
    JMP             reduce using rule 92 (statement -> LABEL COLON RRC .)
    JC              reduce using rule 92 (statement -> LABEL COLON RRC .)
    JNC             reduce using rule 92 (statement -> LABEL COLON RRC .)
    JZ              reduce using rule 92 (statement -> LABEL COLON RRC .)
    JNZ             reduce using rule 92 (statement -> LABEL COLON RRC .)
    JP              reduce using rule 92 (statement -> LABEL COLON RRC .)
    JM              reduce using rule 92 (statement -> LABEL COLON RRC .)
    JPE             reduce using rule 92 (statement -> LABEL COLON RRC .)
    JPO             reduce using rule 92 (statement -> LABEL COLON RRC .)
    CALL            reduce using rule 92 (statement -> LABEL COLON RRC .)
    RET             reduce using rule 92 (statement -> LABEL COLON RRC .)
    MACHINE         reduce using rule 92 (statement -> LABEL COLON RRC .)
    $end            reduce using rule 92 (statement -> LABEL COLON RRC .)


state 169

    (94) statement -> LABEL COLON RAR .

    MOV             reduce using rule 94 (statement -> LABEL COLON RAR .)
    LABEL           reduce using rule 94 (statement -> LABEL COLON RAR .)
    MVI             reduce using rule 94 (statement -> LABEL COLON RAR .)
    LXI             reduce using rule 94 (statement -> LABEL COLON RAR .)
    LDAX            reduce using rule 94 (statement -> LABEL COLON RAR .)
    STAX            reduce using rule 94 (statement -> LABEL COLON RAR .)
    LDA             reduce using rule 94 (statement -> LABEL COLON RAR .)
    STA             reduce using rule 94 (statement -> LABEL COLON RAR .)
    LHLD            reduce using rule 94 (statement -> LABEL COLON RAR .)
    SHLD            reduce using rule 94 (statement -> LABEL COLON RAR .)
    XCHG            reduce using rule 94 (statement -> LABEL COLON RAR .)
    ADD             reduce using rule 94 (statement -> LABEL COLON RAR .)
    ADI             reduce using rule 94 (statement -> LABEL COLON RAR .)
    ADC             reduce using rule 94 (statement -> LABEL COLON RAR .)
    ACI             reduce using rule 94 (statement -> LABEL COLON RAR .)
    SUB             reduce using rule 94 (statement -> LABEL COLON RAR .)
    SUI             reduce using rule 94 (statement -> LABEL COLON RAR .)
    SBB             reduce using rule 94 (statement -> LABEL COLON RAR .)
    SBI             reduce using rule 94 (statement -> LABEL COLON RAR .)
    INR             reduce using rule 94 (statement -> LABEL COLON RAR .)
    DCR             reduce using rule 94 (statement -> LABEL COLON RAR .)
    INX             reduce using rule 94 (statement -> LABEL COLON RAR .)
    DCX             reduce using rule 94 (statement -> LABEL COLON RAR .)
    DAD             reduce using rule 94 (statement -> LABEL COLON RAR .)
    ANA             reduce using rule 94 (statement -> LABEL COLON RAR .)
    ORA             reduce using rule 94 (statement -> LABEL COLON RAR .)
    XRA             reduce using rule 94 (statement -> LABEL COLON RAR .)
    ANI             reduce using rule 94 (statement -> LABEL COLON RAR .)
    ORI             reduce using rule 94 (statement -> LABEL COLON RAR .)
    XRI             reduce using rule 94 (statement -> LABEL COLON RAR .)
    CMA             reduce using rule 94 (statement -> LABEL COLON RAR .)
    RLC             reduce using rule 94 (statement -> LABEL COLON RAR .)
    RAL             reduce using rule 94 (statement -> LABEL COLON RAR .)
    RRC             reduce using rule 94 (statement -> LABEL COLON RAR .)
    RAR             reduce using rule 94 (statement -> LABEL COLON RAR .)
    CMP             reduce using rule 94 (statement -> LABEL COLON RAR .)
    CPI             reduce using rule 94 (statement -> LABEL COLON RAR .)
    CMC             reduce using rule 94 (statement -> LABEL COLON RAR .)
    STC             reduce using rule 94 (statement -> LABEL COLON RAR .)
    DAA             reduce using rule 94 (statement -> LABEL COLON RAR .)
    JMP             reduce using rule 94 (statement -> LABEL COLON RAR .)
    JC              reduce using rule 94 (statement -> LABEL COLON RAR .)
    JNC             reduce using rule 94 (statement -> LABEL COLON RAR .)
    JZ              reduce using rule 94 (statement -> LABEL COLON RAR .)
    JNZ             reduce using rule 94 (statement -> LABEL COLON RAR .)
    JP              reduce using rule 94 (statement -> LABEL COLON RAR .)
    JM              reduce using rule 94 (statement -> LABEL COLON RAR .)
    JPE             reduce using rule 94 (statement -> LABEL COLON RAR .)
    JPO             reduce using rule 94 (statement -> LABEL COLON RAR .)
    CALL            reduce using rule 94 (statement -> LABEL COLON RAR .)
    RET             reduce using rule 94 (statement -> LABEL COLON RAR .)
    MACHINE         reduce using rule 94 (statement -> LABEL COLON RAR .)
    $end            reduce using rule 94 (statement -> LABEL COLON RAR .)


state 170

    (97) statement -> LABEL COLON CMP . register
    (98) statement -> LABEL COLON CMP . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 234
    memory                         shift and go to state 235

state 171

    (100) statement -> LABEL COLON CPI . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 236

state 172

    (102) statement -> LABEL COLON CMC .

    MOV             reduce using rule 102 (statement -> LABEL COLON CMC .)
    LABEL           reduce using rule 102 (statement -> LABEL COLON CMC .)
    MVI             reduce using rule 102 (statement -> LABEL COLON CMC .)
    LXI             reduce using rule 102 (statement -> LABEL COLON CMC .)
    LDAX            reduce using rule 102 (statement -> LABEL COLON CMC .)
    STAX            reduce using rule 102 (statement -> LABEL COLON CMC .)
    LDA             reduce using rule 102 (statement -> LABEL COLON CMC .)
    STA             reduce using rule 102 (statement -> LABEL COLON CMC .)
    LHLD            reduce using rule 102 (statement -> LABEL COLON CMC .)
    SHLD            reduce using rule 102 (statement -> LABEL COLON CMC .)
    XCHG            reduce using rule 102 (statement -> LABEL COLON CMC .)
    ADD             reduce using rule 102 (statement -> LABEL COLON CMC .)
    ADI             reduce using rule 102 (statement -> LABEL COLON CMC .)
    ADC             reduce using rule 102 (statement -> LABEL COLON CMC .)
    ACI             reduce using rule 102 (statement -> LABEL COLON CMC .)
    SUB             reduce using rule 102 (statement -> LABEL COLON CMC .)
    SUI             reduce using rule 102 (statement -> LABEL COLON CMC .)
    SBB             reduce using rule 102 (statement -> LABEL COLON CMC .)
    SBI             reduce using rule 102 (statement -> LABEL COLON CMC .)
    INR             reduce using rule 102 (statement -> LABEL COLON CMC .)
    DCR             reduce using rule 102 (statement -> LABEL COLON CMC .)
    INX             reduce using rule 102 (statement -> LABEL COLON CMC .)
    DCX             reduce using rule 102 (statement -> LABEL COLON CMC .)
    DAD             reduce using rule 102 (statement -> LABEL COLON CMC .)
    ANA             reduce using rule 102 (statement -> LABEL COLON CMC .)
    ORA             reduce using rule 102 (statement -> LABEL COLON CMC .)
    XRA             reduce using rule 102 (statement -> LABEL COLON CMC .)
    ANI             reduce using rule 102 (statement -> LABEL COLON CMC .)
    ORI             reduce using rule 102 (statement -> LABEL COLON CMC .)
    XRI             reduce using rule 102 (statement -> LABEL COLON CMC .)
    CMA             reduce using rule 102 (statement -> LABEL COLON CMC .)
    RLC             reduce using rule 102 (statement -> LABEL COLON CMC .)
    RAL             reduce using rule 102 (statement -> LABEL COLON CMC .)
    RRC             reduce using rule 102 (statement -> LABEL COLON CMC .)
    RAR             reduce using rule 102 (statement -> LABEL COLON CMC .)
    CMP             reduce using rule 102 (statement -> LABEL COLON CMC .)
    CPI             reduce using rule 102 (statement -> LABEL COLON CMC .)
    CMC             reduce using rule 102 (statement -> LABEL COLON CMC .)
    STC             reduce using rule 102 (statement -> LABEL COLON CMC .)
    DAA             reduce using rule 102 (statement -> LABEL COLON CMC .)
    JMP             reduce using rule 102 (statement -> LABEL COLON CMC .)
    JC              reduce using rule 102 (statement -> LABEL COLON CMC .)
    JNC             reduce using rule 102 (statement -> LABEL COLON CMC .)
    JZ              reduce using rule 102 (statement -> LABEL COLON CMC .)
    JNZ             reduce using rule 102 (statement -> LABEL COLON CMC .)
    JP              reduce using rule 102 (statement -> LABEL COLON CMC .)
    JM              reduce using rule 102 (statement -> LABEL COLON CMC .)
    JPE             reduce using rule 102 (statement -> LABEL COLON CMC .)
    JPO             reduce using rule 102 (statement -> LABEL COLON CMC .)
    CALL            reduce using rule 102 (statement -> LABEL COLON CMC .)
    RET             reduce using rule 102 (statement -> LABEL COLON CMC .)
    MACHINE         reduce using rule 102 (statement -> LABEL COLON CMC .)
    $end            reduce using rule 102 (statement -> LABEL COLON CMC .)


state 173

    (104) statement -> LABEL COLON STC .

    MOV             reduce using rule 104 (statement -> LABEL COLON STC .)
    LABEL           reduce using rule 104 (statement -> LABEL COLON STC .)
    MVI             reduce using rule 104 (statement -> LABEL COLON STC .)
    LXI             reduce using rule 104 (statement -> LABEL COLON STC .)
    LDAX            reduce using rule 104 (statement -> LABEL COLON STC .)
    STAX            reduce using rule 104 (statement -> LABEL COLON STC .)
    LDA             reduce using rule 104 (statement -> LABEL COLON STC .)
    STA             reduce using rule 104 (statement -> LABEL COLON STC .)
    LHLD            reduce using rule 104 (statement -> LABEL COLON STC .)
    SHLD            reduce using rule 104 (statement -> LABEL COLON STC .)
    XCHG            reduce using rule 104 (statement -> LABEL COLON STC .)
    ADD             reduce using rule 104 (statement -> LABEL COLON STC .)
    ADI             reduce using rule 104 (statement -> LABEL COLON STC .)
    ADC             reduce using rule 104 (statement -> LABEL COLON STC .)
    ACI             reduce using rule 104 (statement -> LABEL COLON STC .)
    SUB             reduce using rule 104 (statement -> LABEL COLON STC .)
    SUI             reduce using rule 104 (statement -> LABEL COLON STC .)
    SBB             reduce using rule 104 (statement -> LABEL COLON STC .)
    SBI             reduce using rule 104 (statement -> LABEL COLON STC .)
    INR             reduce using rule 104 (statement -> LABEL COLON STC .)
    DCR             reduce using rule 104 (statement -> LABEL COLON STC .)
    INX             reduce using rule 104 (statement -> LABEL COLON STC .)
    DCX             reduce using rule 104 (statement -> LABEL COLON STC .)
    DAD             reduce using rule 104 (statement -> LABEL COLON STC .)
    ANA             reduce using rule 104 (statement -> LABEL COLON STC .)
    ORA             reduce using rule 104 (statement -> LABEL COLON STC .)
    XRA             reduce using rule 104 (statement -> LABEL COLON STC .)
    ANI             reduce using rule 104 (statement -> LABEL COLON STC .)
    ORI             reduce using rule 104 (statement -> LABEL COLON STC .)
    XRI             reduce using rule 104 (statement -> LABEL COLON STC .)
    CMA             reduce using rule 104 (statement -> LABEL COLON STC .)
    RLC             reduce using rule 104 (statement -> LABEL COLON STC .)
    RAL             reduce using rule 104 (statement -> LABEL COLON STC .)
    RRC             reduce using rule 104 (statement -> LABEL COLON STC .)
    RAR             reduce using rule 104 (statement -> LABEL COLON STC .)
    CMP             reduce using rule 104 (statement -> LABEL COLON STC .)
    CPI             reduce using rule 104 (statement -> LABEL COLON STC .)
    CMC             reduce using rule 104 (statement -> LABEL COLON STC .)
    STC             reduce using rule 104 (statement -> LABEL COLON STC .)
    DAA             reduce using rule 104 (statement -> LABEL COLON STC .)
    JMP             reduce using rule 104 (statement -> LABEL COLON STC .)
    JC              reduce using rule 104 (statement -> LABEL COLON STC .)
    JNC             reduce using rule 104 (statement -> LABEL COLON STC .)
    JZ              reduce using rule 104 (statement -> LABEL COLON STC .)
    JNZ             reduce using rule 104 (statement -> LABEL COLON STC .)
    JP              reduce using rule 104 (statement -> LABEL COLON STC .)
    JM              reduce using rule 104 (statement -> LABEL COLON STC .)
    JPE             reduce using rule 104 (statement -> LABEL COLON STC .)
    JPO             reduce using rule 104 (statement -> LABEL COLON STC .)
    CALL            reduce using rule 104 (statement -> LABEL COLON STC .)
    RET             reduce using rule 104 (statement -> LABEL COLON STC .)
    MACHINE         reduce using rule 104 (statement -> LABEL COLON STC .)
    $end            reduce using rule 104 (statement -> LABEL COLON STC .)


state 174

    (106) statement -> LABEL COLON DAA .

    MOV             reduce using rule 106 (statement -> LABEL COLON DAA .)
    LABEL           reduce using rule 106 (statement -> LABEL COLON DAA .)
    MVI             reduce using rule 106 (statement -> LABEL COLON DAA .)
    LXI             reduce using rule 106 (statement -> LABEL COLON DAA .)
    LDAX            reduce using rule 106 (statement -> LABEL COLON DAA .)
    STAX            reduce using rule 106 (statement -> LABEL COLON DAA .)
    LDA             reduce using rule 106 (statement -> LABEL COLON DAA .)
    STA             reduce using rule 106 (statement -> LABEL COLON DAA .)
    LHLD            reduce using rule 106 (statement -> LABEL COLON DAA .)
    SHLD            reduce using rule 106 (statement -> LABEL COLON DAA .)
    XCHG            reduce using rule 106 (statement -> LABEL COLON DAA .)
    ADD             reduce using rule 106 (statement -> LABEL COLON DAA .)
    ADI             reduce using rule 106 (statement -> LABEL COLON DAA .)
    ADC             reduce using rule 106 (statement -> LABEL COLON DAA .)
    ACI             reduce using rule 106 (statement -> LABEL COLON DAA .)
    SUB             reduce using rule 106 (statement -> LABEL COLON DAA .)
    SUI             reduce using rule 106 (statement -> LABEL COLON DAA .)
    SBB             reduce using rule 106 (statement -> LABEL COLON DAA .)
    SBI             reduce using rule 106 (statement -> LABEL COLON DAA .)
    INR             reduce using rule 106 (statement -> LABEL COLON DAA .)
    DCR             reduce using rule 106 (statement -> LABEL COLON DAA .)
    INX             reduce using rule 106 (statement -> LABEL COLON DAA .)
    DCX             reduce using rule 106 (statement -> LABEL COLON DAA .)
    DAD             reduce using rule 106 (statement -> LABEL COLON DAA .)
    ANA             reduce using rule 106 (statement -> LABEL COLON DAA .)
    ORA             reduce using rule 106 (statement -> LABEL COLON DAA .)
    XRA             reduce using rule 106 (statement -> LABEL COLON DAA .)
    ANI             reduce using rule 106 (statement -> LABEL COLON DAA .)
    ORI             reduce using rule 106 (statement -> LABEL COLON DAA .)
    XRI             reduce using rule 106 (statement -> LABEL COLON DAA .)
    CMA             reduce using rule 106 (statement -> LABEL COLON DAA .)
    RLC             reduce using rule 106 (statement -> LABEL COLON DAA .)
    RAL             reduce using rule 106 (statement -> LABEL COLON DAA .)
    RRC             reduce using rule 106 (statement -> LABEL COLON DAA .)
    RAR             reduce using rule 106 (statement -> LABEL COLON DAA .)
    CMP             reduce using rule 106 (statement -> LABEL COLON DAA .)
    CPI             reduce using rule 106 (statement -> LABEL COLON DAA .)
    CMC             reduce using rule 106 (statement -> LABEL COLON DAA .)
    STC             reduce using rule 106 (statement -> LABEL COLON DAA .)
    DAA             reduce using rule 106 (statement -> LABEL COLON DAA .)
    JMP             reduce using rule 106 (statement -> LABEL COLON DAA .)
    JC              reduce using rule 106 (statement -> LABEL COLON DAA .)
    JNC             reduce using rule 106 (statement -> LABEL COLON DAA .)
    JZ              reduce using rule 106 (statement -> LABEL COLON DAA .)
    JNZ             reduce using rule 106 (statement -> LABEL COLON DAA .)
    JP              reduce using rule 106 (statement -> LABEL COLON DAA .)
    JM              reduce using rule 106 (statement -> LABEL COLON DAA .)
    JPE             reduce using rule 106 (statement -> LABEL COLON DAA .)
    JPO             reduce using rule 106 (statement -> LABEL COLON DAA .)
    CALL            reduce using rule 106 (statement -> LABEL COLON DAA .)
    RET             reduce using rule 106 (statement -> LABEL COLON DAA .)
    MACHINE         reduce using rule 106 (statement -> LABEL COLON DAA .)
    $end            reduce using rule 106 (statement -> LABEL COLON DAA .)


state 175

    (109) statement -> LABEL COLON JMP . byte_16
    (110) statement -> LABEL COLON JMP . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 237
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 238

state 176

    (113) statement -> LABEL COLON JC . byte_16
    (114) statement -> LABEL COLON JC . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 239
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 240

state 177

    (117) statement -> LABEL COLON JNC . byte_16
    (118) statement -> LABEL COLON JNC . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 241
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 242

state 178

    (121) statement -> LABEL COLON JZ . byte_16
    (122) statement -> LABEL COLON JZ . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 243
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 244

state 179

    (125) statement -> LABEL COLON JNZ . byte_16
    (126) statement -> LABEL COLON JNZ . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 245
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 246

state 180

    (129) statement -> LABEL COLON JP . byte_16
    (130) statement -> LABEL COLON JP . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 247
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 248

state 181

    (133) statement -> LABEL COLON JM . byte_16
    (134) statement -> LABEL COLON JM . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 249
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 250

state 182

    (137) statement -> LABEL COLON JPE . byte_16
    (138) statement -> LABEL COLON JPE . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 251
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 252

state 183

    (141) statement -> LABEL COLON JPO . byte_16
    (142) statement -> LABEL COLON JPO . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 253
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 254

state 184

    (145) statement -> LABEL COLON CALL . byte_16
    (146) statement -> LABEL COLON CALL . LABEL
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    LABEL           shift and go to state 255
    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 256

state 185

    (148) statement -> LABEL COLON RET .

    MOV             reduce using rule 148 (statement -> LABEL COLON RET .)
    LABEL           reduce using rule 148 (statement -> LABEL COLON RET .)
    MVI             reduce using rule 148 (statement -> LABEL COLON RET .)
    LXI             reduce using rule 148 (statement -> LABEL COLON RET .)
    LDAX            reduce using rule 148 (statement -> LABEL COLON RET .)
    STAX            reduce using rule 148 (statement -> LABEL COLON RET .)
    LDA             reduce using rule 148 (statement -> LABEL COLON RET .)
    STA             reduce using rule 148 (statement -> LABEL COLON RET .)
    LHLD            reduce using rule 148 (statement -> LABEL COLON RET .)
    SHLD            reduce using rule 148 (statement -> LABEL COLON RET .)
    XCHG            reduce using rule 148 (statement -> LABEL COLON RET .)
    ADD             reduce using rule 148 (statement -> LABEL COLON RET .)
    ADI             reduce using rule 148 (statement -> LABEL COLON RET .)
    ADC             reduce using rule 148 (statement -> LABEL COLON RET .)
    ACI             reduce using rule 148 (statement -> LABEL COLON RET .)
    SUB             reduce using rule 148 (statement -> LABEL COLON RET .)
    SUI             reduce using rule 148 (statement -> LABEL COLON RET .)
    SBB             reduce using rule 148 (statement -> LABEL COLON RET .)
    SBI             reduce using rule 148 (statement -> LABEL COLON RET .)
    INR             reduce using rule 148 (statement -> LABEL COLON RET .)
    DCR             reduce using rule 148 (statement -> LABEL COLON RET .)
    INX             reduce using rule 148 (statement -> LABEL COLON RET .)
    DCX             reduce using rule 148 (statement -> LABEL COLON RET .)
    DAD             reduce using rule 148 (statement -> LABEL COLON RET .)
    ANA             reduce using rule 148 (statement -> LABEL COLON RET .)
    ORA             reduce using rule 148 (statement -> LABEL COLON RET .)
    XRA             reduce using rule 148 (statement -> LABEL COLON RET .)
    ANI             reduce using rule 148 (statement -> LABEL COLON RET .)
    ORI             reduce using rule 148 (statement -> LABEL COLON RET .)
    XRI             reduce using rule 148 (statement -> LABEL COLON RET .)
    CMA             reduce using rule 148 (statement -> LABEL COLON RET .)
    RLC             reduce using rule 148 (statement -> LABEL COLON RET .)
    RAL             reduce using rule 148 (statement -> LABEL COLON RET .)
    RRC             reduce using rule 148 (statement -> LABEL COLON RET .)
    RAR             reduce using rule 148 (statement -> LABEL COLON RET .)
    CMP             reduce using rule 148 (statement -> LABEL COLON RET .)
    CPI             reduce using rule 148 (statement -> LABEL COLON RET .)
    CMC             reduce using rule 148 (statement -> LABEL COLON RET .)
    STC             reduce using rule 148 (statement -> LABEL COLON RET .)
    DAA             reduce using rule 148 (statement -> LABEL COLON RET .)
    JMP             reduce using rule 148 (statement -> LABEL COLON RET .)
    JC              reduce using rule 148 (statement -> LABEL COLON RET .)
    JNC             reduce using rule 148 (statement -> LABEL COLON RET .)
    JZ              reduce using rule 148 (statement -> LABEL COLON RET .)
    JNZ             reduce using rule 148 (statement -> LABEL COLON RET .)
    JP              reduce using rule 148 (statement -> LABEL COLON RET .)
    JM              reduce using rule 148 (statement -> LABEL COLON RET .)
    JPE             reduce using rule 148 (statement -> LABEL COLON RET .)
    JPO             reduce using rule 148 (statement -> LABEL COLON RET .)
    CALL            reduce using rule 148 (statement -> LABEL COLON RET .)
    RET             reduce using rule 148 (statement -> LABEL COLON RET .)
    MACHINE         reduce using rule 148 (statement -> LABEL COLON RET .)
    $end            reduce using rule 148 (statement -> LABEL COLON RET .)


state 186

    (150) statement -> LABEL COLON MACHINE .

    MOV             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    LABEL           reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    MVI             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    LXI             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    LDAX            reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    STAX            reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    LDA             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    STA             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    LHLD            reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    SHLD            reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    XCHG            reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    ADD             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    ADI             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    ADC             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    ACI             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    SUB             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    SUI             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    SBB             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    SBI             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    INR             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    DCR             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    INX             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    DCX             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    DAD             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    ANA             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    ORA             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    XRA             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    ANI             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    ORI             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    XRI             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    CMA             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    RLC             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    RAL             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    RRC             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    RAR             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    CMP             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    CPI             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    CMC             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    STC             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    DAA             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    JMP             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    JC              reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    JNC             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    JZ              reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    JNZ             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    JP              reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    JM              reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    JPE             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    JPO             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    CALL            reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    RET             reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    MACHINE         reduce using rule 150 (statement -> LABEL COLON MACHINE .)
    $end            reduce using rule 150 (statement -> LABEL COLON MACHINE .)


state 187

    (9) statement -> MVI register COMMA . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 257

state 188

    (10) statement -> MVI memory COMMA . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 258

state 189

    (13) statement -> LXI register_pair_3 COMMA . byte_16
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 259

state 190

    (165) byte_16 -> DIGIT DIGIT . DIGIT DIGIT

    DIGIT           shift and go to state 260


state 191

    (164) byte_8 -> DIGIT DIGIT .

    MOV             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    LABEL           reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    MVI             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    LXI             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    LDAX            reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    STAX            reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    LDA             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    STA             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    LHLD            reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    SHLD            reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    XCHG            reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    ADD             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    ADI             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    ADC             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    ACI             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    SUB             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    SUI             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    SBB             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    SBI             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    INR             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    DCR             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    INX             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    DCX             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    DAD             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    ANA             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    ORA             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    XRA             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    ANI             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    ORI             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    XRI             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    CMA             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    RLC             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    RAL             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    RRC             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    RAR             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    CMP             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    CPI             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    CMC             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    STC             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    DAA             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    JMP             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    JC              reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    JNC             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    JZ              reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    JNZ             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    JP              reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    JM              reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    JPE             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    JPO             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    CALL            reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    RET             reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    MACHINE         reduce using rule 164 (byte_8 -> DIGIT DIGIT .)
    $end            reduce using rule 164 (byte_8 -> DIGIT DIGIT .)


state 192

    (3) statement -> MOV register COMMA register .

    MOV             reduce using rule 3 (statement -> MOV register COMMA register .)
    LABEL           reduce using rule 3 (statement -> MOV register COMMA register .)
    MVI             reduce using rule 3 (statement -> MOV register COMMA register .)
    LXI             reduce using rule 3 (statement -> MOV register COMMA register .)
    LDAX            reduce using rule 3 (statement -> MOV register COMMA register .)
    STAX            reduce using rule 3 (statement -> MOV register COMMA register .)
    LDA             reduce using rule 3 (statement -> MOV register COMMA register .)
    STA             reduce using rule 3 (statement -> MOV register COMMA register .)
    LHLD            reduce using rule 3 (statement -> MOV register COMMA register .)
    SHLD            reduce using rule 3 (statement -> MOV register COMMA register .)
    XCHG            reduce using rule 3 (statement -> MOV register COMMA register .)
    ADD             reduce using rule 3 (statement -> MOV register COMMA register .)
    ADI             reduce using rule 3 (statement -> MOV register COMMA register .)
    ADC             reduce using rule 3 (statement -> MOV register COMMA register .)
    ACI             reduce using rule 3 (statement -> MOV register COMMA register .)
    SUB             reduce using rule 3 (statement -> MOV register COMMA register .)
    SUI             reduce using rule 3 (statement -> MOV register COMMA register .)
    SBB             reduce using rule 3 (statement -> MOV register COMMA register .)
    SBI             reduce using rule 3 (statement -> MOV register COMMA register .)
    INR             reduce using rule 3 (statement -> MOV register COMMA register .)
    DCR             reduce using rule 3 (statement -> MOV register COMMA register .)
    INX             reduce using rule 3 (statement -> MOV register COMMA register .)
    DCX             reduce using rule 3 (statement -> MOV register COMMA register .)
    DAD             reduce using rule 3 (statement -> MOV register COMMA register .)
    ANA             reduce using rule 3 (statement -> MOV register COMMA register .)
    ORA             reduce using rule 3 (statement -> MOV register COMMA register .)
    XRA             reduce using rule 3 (statement -> MOV register COMMA register .)
    ANI             reduce using rule 3 (statement -> MOV register COMMA register .)
    ORI             reduce using rule 3 (statement -> MOV register COMMA register .)
    XRI             reduce using rule 3 (statement -> MOV register COMMA register .)
    CMA             reduce using rule 3 (statement -> MOV register COMMA register .)
    RLC             reduce using rule 3 (statement -> MOV register COMMA register .)
    RAL             reduce using rule 3 (statement -> MOV register COMMA register .)
    RRC             reduce using rule 3 (statement -> MOV register COMMA register .)
    RAR             reduce using rule 3 (statement -> MOV register COMMA register .)
    CMP             reduce using rule 3 (statement -> MOV register COMMA register .)
    CPI             reduce using rule 3 (statement -> MOV register COMMA register .)
    CMC             reduce using rule 3 (statement -> MOV register COMMA register .)
    STC             reduce using rule 3 (statement -> MOV register COMMA register .)
    DAA             reduce using rule 3 (statement -> MOV register COMMA register .)
    JMP             reduce using rule 3 (statement -> MOV register COMMA register .)
    JC              reduce using rule 3 (statement -> MOV register COMMA register .)
    JNC             reduce using rule 3 (statement -> MOV register COMMA register .)
    JZ              reduce using rule 3 (statement -> MOV register COMMA register .)
    JNZ             reduce using rule 3 (statement -> MOV register COMMA register .)
    JP              reduce using rule 3 (statement -> MOV register COMMA register .)
    JM              reduce using rule 3 (statement -> MOV register COMMA register .)
    JPE             reduce using rule 3 (statement -> MOV register COMMA register .)
    JPO             reduce using rule 3 (statement -> MOV register COMMA register .)
    CALL            reduce using rule 3 (statement -> MOV register COMMA register .)
    RET             reduce using rule 3 (statement -> MOV register COMMA register .)
    MACHINE         reduce using rule 3 (statement -> MOV register COMMA register .)
    $end            reduce using rule 3 (statement -> MOV register COMMA register .)


state 193

    (4) statement -> MOV register COMMA memory .

    MOV             reduce using rule 4 (statement -> MOV register COMMA memory .)
    LABEL           reduce using rule 4 (statement -> MOV register COMMA memory .)
    MVI             reduce using rule 4 (statement -> MOV register COMMA memory .)
    LXI             reduce using rule 4 (statement -> MOV register COMMA memory .)
    LDAX            reduce using rule 4 (statement -> MOV register COMMA memory .)
    STAX            reduce using rule 4 (statement -> MOV register COMMA memory .)
    LDA             reduce using rule 4 (statement -> MOV register COMMA memory .)
    STA             reduce using rule 4 (statement -> MOV register COMMA memory .)
    LHLD            reduce using rule 4 (statement -> MOV register COMMA memory .)
    SHLD            reduce using rule 4 (statement -> MOV register COMMA memory .)
    XCHG            reduce using rule 4 (statement -> MOV register COMMA memory .)
    ADD             reduce using rule 4 (statement -> MOV register COMMA memory .)
    ADI             reduce using rule 4 (statement -> MOV register COMMA memory .)
    ADC             reduce using rule 4 (statement -> MOV register COMMA memory .)
    ACI             reduce using rule 4 (statement -> MOV register COMMA memory .)
    SUB             reduce using rule 4 (statement -> MOV register COMMA memory .)
    SUI             reduce using rule 4 (statement -> MOV register COMMA memory .)
    SBB             reduce using rule 4 (statement -> MOV register COMMA memory .)
    SBI             reduce using rule 4 (statement -> MOV register COMMA memory .)
    INR             reduce using rule 4 (statement -> MOV register COMMA memory .)
    DCR             reduce using rule 4 (statement -> MOV register COMMA memory .)
    INX             reduce using rule 4 (statement -> MOV register COMMA memory .)
    DCX             reduce using rule 4 (statement -> MOV register COMMA memory .)
    DAD             reduce using rule 4 (statement -> MOV register COMMA memory .)
    ANA             reduce using rule 4 (statement -> MOV register COMMA memory .)
    ORA             reduce using rule 4 (statement -> MOV register COMMA memory .)
    XRA             reduce using rule 4 (statement -> MOV register COMMA memory .)
    ANI             reduce using rule 4 (statement -> MOV register COMMA memory .)
    ORI             reduce using rule 4 (statement -> MOV register COMMA memory .)
    XRI             reduce using rule 4 (statement -> MOV register COMMA memory .)
    CMA             reduce using rule 4 (statement -> MOV register COMMA memory .)
    RLC             reduce using rule 4 (statement -> MOV register COMMA memory .)
    RAL             reduce using rule 4 (statement -> MOV register COMMA memory .)
    RRC             reduce using rule 4 (statement -> MOV register COMMA memory .)
    RAR             reduce using rule 4 (statement -> MOV register COMMA memory .)
    CMP             reduce using rule 4 (statement -> MOV register COMMA memory .)
    CPI             reduce using rule 4 (statement -> MOV register COMMA memory .)
    CMC             reduce using rule 4 (statement -> MOV register COMMA memory .)
    STC             reduce using rule 4 (statement -> MOV register COMMA memory .)
    DAA             reduce using rule 4 (statement -> MOV register COMMA memory .)
    JMP             reduce using rule 4 (statement -> MOV register COMMA memory .)
    JC              reduce using rule 4 (statement -> MOV register COMMA memory .)
    JNC             reduce using rule 4 (statement -> MOV register COMMA memory .)
    JZ              reduce using rule 4 (statement -> MOV register COMMA memory .)
    JNZ             reduce using rule 4 (statement -> MOV register COMMA memory .)
    JP              reduce using rule 4 (statement -> MOV register COMMA memory .)
    JM              reduce using rule 4 (statement -> MOV register COMMA memory .)
    JPE             reduce using rule 4 (statement -> MOV register COMMA memory .)
    JPO             reduce using rule 4 (statement -> MOV register COMMA memory .)
    CALL            reduce using rule 4 (statement -> MOV register COMMA memory .)
    RET             reduce using rule 4 (statement -> MOV register COMMA memory .)
    MACHINE         reduce using rule 4 (statement -> MOV register COMMA memory .)
    $end            reduce using rule 4 (statement -> MOV register COMMA memory .)


state 194

    (5) statement -> MOV memory COMMA register .

    MOV             reduce using rule 5 (statement -> MOV memory COMMA register .)
    LABEL           reduce using rule 5 (statement -> MOV memory COMMA register .)
    MVI             reduce using rule 5 (statement -> MOV memory COMMA register .)
    LXI             reduce using rule 5 (statement -> MOV memory COMMA register .)
    LDAX            reduce using rule 5 (statement -> MOV memory COMMA register .)
    STAX            reduce using rule 5 (statement -> MOV memory COMMA register .)
    LDA             reduce using rule 5 (statement -> MOV memory COMMA register .)
    STA             reduce using rule 5 (statement -> MOV memory COMMA register .)
    LHLD            reduce using rule 5 (statement -> MOV memory COMMA register .)
    SHLD            reduce using rule 5 (statement -> MOV memory COMMA register .)
    XCHG            reduce using rule 5 (statement -> MOV memory COMMA register .)
    ADD             reduce using rule 5 (statement -> MOV memory COMMA register .)
    ADI             reduce using rule 5 (statement -> MOV memory COMMA register .)
    ADC             reduce using rule 5 (statement -> MOV memory COMMA register .)
    ACI             reduce using rule 5 (statement -> MOV memory COMMA register .)
    SUB             reduce using rule 5 (statement -> MOV memory COMMA register .)
    SUI             reduce using rule 5 (statement -> MOV memory COMMA register .)
    SBB             reduce using rule 5 (statement -> MOV memory COMMA register .)
    SBI             reduce using rule 5 (statement -> MOV memory COMMA register .)
    INR             reduce using rule 5 (statement -> MOV memory COMMA register .)
    DCR             reduce using rule 5 (statement -> MOV memory COMMA register .)
    INX             reduce using rule 5 (statement -> MOV memory COMMA register .)
    DCX             reduce using rule 5 (statement -> MOV memory COMMA register .)
    DAD             reduce using rule 5 (statement -> MOV memory COMMA register .)
    ANA             reduce using rule 5 (statement -> MOV memory COMMA register .)
    ORA             reduce using rule 5 (statement -> MOV memory COMMA register .)
    XRA             reduce using rule 5 (statement -> MOV memory COMMA register .)
    ANI             reduce using rule 5 (statement -> MOV memory COMMA register .)
    ORI             reduce using rule 5 (statement -> MOV memory COMMA register .)
    XRI             reduce using rule 5 (statement -> MOV memory COMMA register .)
    CMA             reduce using rule 5 (statement -> MOV memory COMMA register .)
    RLC             reduce using rule 5 (statement -> MOV memory COMMA register .)
    RAL             reduce using rule 5 (statement -> MOV memory COMMA register .)
    RRC             reduce using rule 5 (statement -> MOV memory COMMA register .)
    RAR             reduce using rule 5 (statement -> MOV memory COMMA register .)
    CMP             reduce using rule 5 (statement -> MOV memory COMMA register .)
    CPI             reduce using rule 5 (statement -> MOV memory COMMA register .)
    CMC             reduce using rule 5 (statement -> MOV memory COMMA register .)
    STC             reduce using rule 5 (statement -> MOV memory COMMA register .)
    DAA             reduce using rule 5 (statement -> MOV memory COMMA register .)
    JMP             reduce using rule 5 (statement -> MOV memory COMMA register .)
    JC              reduce using rule 5 (statement -> MOV memory COMMA register .)
    JNC             reduce using rule 5 (statement -> MOV memory COMMA register .)
    JZ              reduce using rule 5 (statement -> MOV memory COMMA register .)
    JNZ             reduce using rule 5 (statement -> MOV memory COMMA register .)
    JP              reduce using rule 5 (statement -> MOV memory COMMA register .)
    JM              reduce using rule 5 (statement -> MOV memory COMMA register .)
    JPE             reduce using rule 5 (statement -> MOV memory COMMA register .)
    JPO             reduce using rule 5 (statement -> MOV memory COMMA register .)
    CALL            reduce using rule 5 (statement -> MOV memory COMMA register .)
    RET             reduce using rule 5 (statement -> MOV memory COMMA register .)
    MACHINE         reduce using rule 5 (statement -> MOV memory COMMA register .)
    $end            reduce using rule 5 (statement -> MOV memory COMMA register .)


state 195

    (6) statement -> LABEL COLON MOV register . COMMA register
    (7) statement -> LABEL COLON MOV register . COMMA memory

    COMMA           shift and go to state 261


state 196

    (8) statement -> LABEL COLON MOV memory . COMMA register

    COMMA           shift and go to state 262


state 197

    (11) statement -> LABEL COLON MVI register . COMMA byte_8

    COMMA           shift and go to state 263


state 198

    (12) statement -> LABEL COLON MVI memory . COMMA byte_8

    COMMA           shift and go to state 264


state 199

    (14) statement -> LABEL COLON LXI register_pair_3 . COMMA byte_16

    COMMA           shift and go to state 265


state 200

    (16) statement -> LABEL COLON LDAX register_pair_2 .

    MOV             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    LABEL           reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    MVI             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    LXI             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    LDAX            reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    STAX            reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    LDA             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    STA             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    LHLD            reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    SHLD            reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    XCHG            reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    ADD             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    ADI             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    ADC             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    ACI             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    SUB             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    SUI             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    SBB             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    SBI             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    INR             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    DCR             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    INX             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    DCX             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    DAD             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    ANA             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    ORA             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    XRA             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    ANI             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    ORI             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    XRI             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    CMA             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    RLC             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    RAL             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    RRC             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    RAR             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    CMP             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    CPI             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    CMC             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    STC             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    DAA             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    JMP             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    JC              reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    JNC             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    JZ              reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    JNZ             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    JP              reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    JM              reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    JPE             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    JPO             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    CALL            reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    RET             reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    MACHINE         reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)
    $end            reduce using rule 16 (statement -> LABEL COLON LDAX register_pair_2 .)


state 201

    (18) statement -> LABEL COLON STAX register_pair_2 .

    MOV             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    LABEL           reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    MVI             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    LXI             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    LDAX            reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    STAX            reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    LDA             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    STA             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    LHLD            reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    SHLD            reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    XCHG            reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    ADD             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    ADI             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    ADC             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    ACI             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    SUB             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    SUI             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    SBB             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    SBI             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    INR             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    DCR             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    INX             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    DCX             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    DAD             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    ANA             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    ORA             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    XRA             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    ANI             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    ORI             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    XRI             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    CMA             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    RLC             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    RAL             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    RRC             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    RAR             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    CMP             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    CPI             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    CMC             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    STC             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    DAA             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    JMP             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    JC              reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    JNC             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    JZ              reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    JNZ             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    JP              reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    JM              reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    JPE             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    JPO             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    CALL            reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    RET             reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    MACHINE         reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)
    $end            reduce using rule 18 (statement -> LABEL COLON STAX register_pair_2 .)


state 202

    (20) statement -> LABEL COLON LDA byte_16 .

    MOV             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    LABEL           reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    MVI             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    LXI             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    LDAX            reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    STAX            reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    LDA             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    STA             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    LHLD            reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    SHLD            reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    XCHG            reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    ADD             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    ADI             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    ADC             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    ACI             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    SUB             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    SUI             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    SBB             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    SBI             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    INR             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    DCR             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    INX             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    DCX             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    DAD             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    ANA             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    ORA             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    XRA             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    ANI             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    ORI             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    XRI             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    CMA             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    RLC             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    RAL             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    RRC             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    RAR             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    CMP             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    CPI             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    CMC             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    STC             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    DAA             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    JMP             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    JC              reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    JNC             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    JZ              reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    JNZ             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    JP              reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    JM              reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    JPE             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    JPO             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    CALL            reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    RET             reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    MACHINE         reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)
    $end            reduce using rule 20 (statement -> LABEL COLON LDA byte_16 .)


state 203

    (22) statement -> LABEL COLON STA byte_16 .

    MOV             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    LABEL           reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    MVI             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    LXI             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    LDAX            reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    STAX            reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    LDA             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    STA             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    LHLD            reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    SHLD            reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    XCHG            reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    ADD             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    ADI             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    ADC             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    ACI             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    SUB             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    SUI             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    SBB             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    SBI             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    INR             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    DCR             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    INX             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    DCX             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    DAD             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    ANA             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    ORA             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    XRA             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    ANI             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    ORI             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    XRI             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    CMA             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    RLC             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    RAL             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    RRC             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    RAR             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    CMP             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    CPI             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    CMC             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    STC             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    DAA             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    JMP             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    JC              reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    JNC             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    JZ              reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    JNZ             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    JP              reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    JM              reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    JPE             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    JPO             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    CALL            reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    RET             reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    MACHINE         reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)
    $end            reduce using rule 22 (statement -> LABEL COLON STA byte_16 .)


state 204

    (24) statement -> LABEL COLON LHLD byte_16 .

    MOV             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    LABEL           reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    MVI             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    LXI             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    LDAX            reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    STAX            reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    LDA             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    STA             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    LHLD            reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    SHLD            reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    XCHG            reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    ADD             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    ADI             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    ADC             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    ACI             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    SUB             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    SUI             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    SBB             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    SBI             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    INR             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    DCR             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    INX             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    DCX             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    DAD             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    ANA             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    ORA             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    XRA             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    ANI             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    ORI             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    XRI             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    CMA             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    RLC             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    RAL             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    RRC             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    RAR             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    CMP             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    CPI             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    CMC             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    STC             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    DAA             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    JMP             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    JC              reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    JNC             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    JZ              reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    JNZ             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    JP              reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    JM              reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    JPE             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    JPO             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    CALL            reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    RET             reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    MACHINE         reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)
    $end            reduce using rule 24 (statement -> LABEL COLON LHLD byte_16 .)


state 205

    (26) statement -> LABEL COLON SHLD byte_16 .

    MOV             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    LABEL           reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    MVI             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    LXI             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    LDAX            reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    STAX            reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    LDA             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    STA             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    LHLD            reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    SHLD            reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    XCHG            reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    ADD             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    ADI             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    ADC             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    ACI             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    SUB             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    SUI             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    SBB             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    SBI             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    INR             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    DCR             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    INX             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    DCX             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    DAD             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    ANA             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    ORA             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    XRA             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    ANI             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    ORI             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    XRI             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    CMA             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    RLC             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    RAL             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    RRC             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    RAR             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    CMP             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    CPI             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    CMC             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    STC             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    DAA             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    JMP             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    JC              reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    JNC             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    JZ              reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    JNZ             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    JP              reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    JM              reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    JPE             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    JPO             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    CALL            reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    RET             reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    MACHINE         reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)
    $end            reduce using rule 26 (statement -> LABEL COLON SHLD byte_16 .)


state 206

    (31) statement -> LABEL COLON ADD register .

    MOV             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    LABEL           reduce using rule 31 (statement -> LABEL COLON ADD register .)
    MVI             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    LXI             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    LDAX            reduce using rule 31 (statement -> LABEL COLON ADD register .)
    STAX            reduce using rule 31 (statement -> LABEL COLON ADD register .)
    LDA             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    STA             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    LHLD            reduce using rule 31 (statement -> LABEL COLON ADD register .)
    SHLD            reduce using rule 31 (statement -> LABEL COLON ADD register .)
    XCHG            reduce using rule 31 (statement -> LABEL COLON ADD register .)
    ADD             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    ADI             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    ADC             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    ACI             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    SUB             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    SUI             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    SBB             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    SBI             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    INR             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    DCR             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    INX             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    DCX             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    DAD             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    ANA             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    ORA             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    XRA             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    ANI             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    ORI             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    XRI             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    CMA             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    RLC             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    RAL             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    RRC             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    RAR             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    CMP             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    CPI             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    CMC             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    STC             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    DAA             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    JMP             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    JC              reduce using rule 31 (statement -> LABEL COLON ADD register .)
    JNC             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    JZ              reduce using rule 31 (statement -> LABEL COLON ADD register .)
    JNZ             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    JP              reduce using rule 31 (statement -> LABEL COLON ADD register .)
    JM              reduce using rule 31 (statement -> LABEL COLON ADD register .)
    JPE             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    JPO             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    CALL            reduce using rule 31 (statement -> LABEL COLON ADD register .)
    RET             reduce using rule 31 (statement -> LABEL COLON ADD register .)
    MACHINE         reduce using rule 31 (statement -> LABEL COLON ADD register .)
    $end            reduce using rule 31 (statement -> LABEL COLON ADD register .)


state 207

    (32) statement -> LABEL COLON ADD memory .

    MOV             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    LABEL           reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    MVI             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    LXI             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    LDAX            reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    STAX            reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    LDA             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    STA             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    LHLD            reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    SHLD            reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    XCHG            reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    ADD             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    ADI             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    ADC             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    ACI             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    SUB             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    SUI             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    SBB             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    SBI             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    INR             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    DCR             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    INX             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    DCX             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    DAD             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    ANA             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    ORA             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    XRA             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    ANI             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    ORI             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    XRI             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    CMA             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    RLC             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    RAL             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    RRC             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    RAR             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    CMP             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    CPI             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    CMC             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    STC             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    DAA             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    JMP             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    JC              reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    JNC             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    JZ              reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    JNZ             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    JP              reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    JM              reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    JPE             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    JPO             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    CALL            reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    RET             reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    MACHINE         reduce using rule 32 (statement -> LABEL COLON ADD memory .)
    $end            reduce using rule 32 (statement -> LABEL COLON ADD memory .)


state 208

    (34) statement -> LABEL COLON ADI byte_8 .

    MOV             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    LABEL           reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    MVI             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    LXI             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    LDAX            reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    STAX            reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    LDA             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    STA             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    LHLD            reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    SHLD            reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    XCHG            reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    ADD             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    ADI             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    ADC             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    ACI             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    SUB             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    SUI             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    SBB             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    SBI             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    INR             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    DCR             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    INX             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    DCX             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    DAD             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    ANA             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    ORA             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    XRA             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    ANI             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    ORI             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    XRI             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    CMA             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    RLC             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    RAL             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    RRC             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    RAR             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    CMP             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    CPI             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    CMC             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    STC             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    DAA             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    JMP             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    JC              reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    JNC             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    JZ              reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    JNZ             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    JP              reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    JM              reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    JPE             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    JPO             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    CALL            reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    RET             reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    MACHINE         reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)
    $end            reduce using rule 34 (statement -> LABEL COLON ADI byte_8 .)


state 209

    (37) statement -> LABEL COLON ADC register .

    MOV             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    LABEL           reduce using rule 37 (statement -> LABEL COLON ADC register .)
    MVI             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    LXI             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    LDAX            reduce using rule 37 (statement -> LABEL COLON ADC register .)
    STAX            reduce using rule 37 (statement -> LABEL COLON ADC register .)
    LDA             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    STA             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    LHLD            reduce using rule 37 (statement -> LABEL COLON ADC register .)
    SHLD            reduce using rule 37 (statement -> LABEL COLON ADC register .)
    XCHG            reduce using rule 37 (statement -> LABEL COLON ADC register .)
    ADD             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    ADI             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    ADC             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    ACI             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    SUB             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    SUI             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    SBB             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    SBI             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    INR             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    DCR             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    INX             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    DCX             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    DAD             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    ANA             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    ORA             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    XRA             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    ANI             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    ORI             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    XRI             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    CMA             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    RLC             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    RAL             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    RRC             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    RAR             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    CMP             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    CPI             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    CMC             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    STC             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    DAA             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    JMP             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    JC              reduce using rule 37 (statement -> LABEL COLON ADC register .)
    JNC             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    JZ              reduce using rule 37 (statement -> LABEL COLON ADC register .)
    JNZ             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    JP              reduce using rule 37 (statement -> LABEL COLON ADC register .)
    JM              reduce using rule 37 (statement -> LABEL COLON ADC register .)
    JPE             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    JPO             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    CALL            reduce using rule 37 (statement -> LABEL COLON ADC register .)
    RET             reduce using rule 37 (statement -> LABEL COLON ADC register .)
    MACHINE         reduce using rule 37 (statement -> LABEL COLON ADC register .)
    $end            reduce using rule 37 (statement -> LABEL COLON ADC register .)


state 210

    (38) statement -> LABEL COLON ADC memory .

    MOV             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    LABEL           reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    MVI             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    LXI             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    LDAX            reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    STAX            reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    LDA             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    STA             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    LHLD            reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    SHLD            reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    XCHG            reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    ADD             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    ADI             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    ADC             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    ACI             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    SUB             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    SUI             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    SBB             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    SBI             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    INR             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    DCR             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    INX             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    DCX             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    DAD             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    ANA             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    ORA             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    XRA             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    ANI             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    ORI             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    XRI             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    CMA             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    RLC             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    RAL             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    RRC             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    RAR             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    CMP             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    CPI             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    CMC             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    STC             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    DAA             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    JMP             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    JC              reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    JNC             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    JZ              reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    JNZ             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    JP              reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    JM              reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    JPE             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    JPO             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    CALL            reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    RET             reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    MACHINE         reduce using rule 38 (statement -> LABEL COLON ADC memory .)
    $end            reduce using rule 38 (statement -> LABEL COLON ADC memory .)


state 211

    (40) statement -> LABEL COLON ACI byte_8 .

    MOV             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    LABEL           reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    MVI             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    LXI             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    LDAX            reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    STAX            reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    LDA             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    STA             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    LHLD            reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    SHLD            reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    XCHG            reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    ADD             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    ADI             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    ADC             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    ACI             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    SUB             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    SUI             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    SBB             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    SBI             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    INR             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    DCR             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    INX             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    DCX             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    DAD             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    ANA             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    ORA             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    XRA             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    ANI             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    ORI             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    XRI             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    CMA             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    RLC             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    RAL             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    RRC             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    RAR             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    CMP             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    CPI             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    CMC             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    STC             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    DAA             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    JMP             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    JC              reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    JNC             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    JZ              reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    JNZ             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    JP              reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    JM              reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    JPE             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    JPO             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    CALL            reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    RET             reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    MACHINE         reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)
    $end            reduce using rule 40 (statement -> LABEL COLON ACI byte_8 .)


state 212

    (43) statement -> LABEL COLON SUB register .

    MOV             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    LABEL           reduce using rule 43 (statement -> LABEL COLON SUB register .)
    MVI             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    LXI             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    LDAX            reduce using rule 43 (statement -> LABEL COLON SUB register .)
    STAX            reduce using rule 43 (statement -> LABEL COLON SUB register .)
    LDA             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    STA             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    LHLD            reduce using rule 43 (statement -> LABEL COLON SUB register .)
    SHLD            reduce using rule 43 (statement -> LABEL COLON SUB register .)
    XCHG            reduce using rule 43 (statement -> LABEL COLON SUB register .)
    ADD             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    ADI             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    ADC             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    ACI             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    SUB             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    SUI             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    SBB             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    SBI             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    INR             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    DCR             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    INX             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    DCX             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    DAD             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    ANA             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    ORA             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    XRA             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    ANI             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    ORI             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    XRI             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    CMA             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    RLC             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    RAL             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    RRC             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    RAR             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    CMP             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    CPI             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    CMC             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    STC             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    DAA             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    JMP             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    JC              reduce using rule 43 (statement -> LABEL COLON SUB register .)
    JNC             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    JZ              reduce using rule 43 (statement -> LABEL COLON SUB register .)
    JNZ             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    JP              reduce using rule 43 (statement -> LABEL COLON SUB register .)
    JM              reduce using rule 43 (statement -> LABEL COLON SUB register .)
    JPE             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    JPO             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    CALL            reduce using rule 43 (statement -> LABEL COLON SUB register .)
    RET             reduce using rule 43 (statement -> LABEL COLON SUB register .)
    MACHINE         reduce using rule 43 (statement -> LABEL COLON SUB register .)
    $end            reduce using rule 43 (statement -> LABEL COLON SUB register .)


state 213

    (44) statement -> LABEL COLON SUB memory .

    MOV             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    LABEL           reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    MVI             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    LXI             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    LDAX            reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    STAX            reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    LDA             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    STA             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    LHLD            reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    SHLD            reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    XCHG            reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    ADD             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    ADI             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    ADC             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    ACI             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    SUB             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    SUI             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    SBB             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    SBI             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    INR             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    DCR             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    INX             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    DCX             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    DAD             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    ANA             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    ORA             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    XRA             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    ANI             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    ORI             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    XRI             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    CMA             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    RLC             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    RAL             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    RRC             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    RAR             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    CMP             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    CPI             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    CMC             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    STC             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    DAA             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    JMP             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    JC              reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    JNC             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    JZ              reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    JNZ             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    JP              reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    JM              reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    JPE             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    JPO             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    CALL            reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    RET             reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    MACHINE         reduce using rule 44 (statement -> LABEL COLON SUB memory .)
    $end            reduce using rule 44 (statement -> LABEL COLON SUB memory .)


state 214

    (46) statement -> LABEL COLON SUI byte_8 .

    MOV             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    LABEL           reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    MVI             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    LXI             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    LDAX            reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    STAX            reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    LDA             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    STA             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    LHLD            reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    SHLD            reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    XCHG            reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    ADD             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    ADI             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    ADC             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    ACI             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    SUB             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    SUI             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    SBB             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    SBI             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    INR             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    DCR             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    INX             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    DCX             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    DAD             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    ANA             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    ORA             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    XRA             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    ANI             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    ORI             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    XRI             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    CMA             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    RLC             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    RAL             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    RRC             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    RAR             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    CMP             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    CPI             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    CMC             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    STC             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    DAA             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    JMP             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    JC              reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    JNC             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    JZ              reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    JNZ             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    JP              reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    JM              reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    JPE             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    JPO             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    CALL            reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    RET             reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    MACHINE         reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)
    $end            reduce using rule 46 (statement -> LABEL COLON SUI byte_8 .)


state 215

    (49) statement -> LABEL COLON SBB register .

    MOV             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    LABEL           reduce using rule 49 (statement -> LABEL COLON SBB register .)
    MVI             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    LXI             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    LDAX            reduce using rule 49 (statement -> LABEL COLON SBB register .)
    STAX            reduce using rule 49 (statement -> LABEL COLON SBB register .)
    LDA             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    STA             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    LHLD            reduce using rule 49 (statement -> LABEL COLON SBB register .)
    SHLD            reduce using rule 49 (statement -> LABEL COLON SBB register .)
    XCHG            reduce using rule 49 (statement -> LABEL COLON SBB register .)
    ADD             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    ADI             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    ADC             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    ACI             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    SUB             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    SUI             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    SBB             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    SBI             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    INR             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    DCR             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    INX             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    DCX             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    DAD             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    ANA             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    ORA             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    XRA             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    ANI             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    ORI             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    XRI             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    CMA             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    RLC             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    RAL             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    RRC             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    RAR             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    CMP             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    CPI             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    CMC             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    STC             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    DAA             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    JMP             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    JC              reduce using rule 49 (statement -> LABEL COLON SBB register .)
    JNC             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    JZ              reduce using rule 49 (statement -> LABEL COLON SBB register .)
    JNZ             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    JP              reduce using rule 49 (statement -> LABEL COLON SBB register .)
    JM              reduce using rule 49 (statement -> LABEL COLON SBB register .)
    JPE             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    JPO             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    CALL            reduce using rule 49 (statement -> LABEL COLON SBB register .)
    RET             reduce using rule 49 (statement -> LABEL COLON SBB register .)
    MACHINE         reduce using rule 49 (statement -> LABEL COLON SBB register .)
    $end            reduce using rule 49 (statement -> LABEL COLON SBB register .)


state 216

    (50) statement -> LABEL COLON SBB memory .

    MOV             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    LABEL           reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    MVI             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    LXI             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    LDAX            reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    STAX            reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    LDA             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    STA             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    LHLD            reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    SHLD            reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    XCHG            reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    ADD             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    ADI             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    ADC             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    ACI             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    SUB             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    SUI             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    SBB             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    SBI             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    INR             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    DCR             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    INX             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    DCX             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    DAD             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    ANA             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    ORA             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    XRA             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    ANI             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    ORI             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    XRI             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    CMA             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    RLC             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    RAL             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    RRC             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    RAR             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    CMP             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    CPI             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    CMC             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    STC             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    DAA             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    JMP             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    JC              reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    JNC             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    JZ              reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    JNZ             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    JP              reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    JM              reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    JPE             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    JPO             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    CALL            reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    RET             reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    MACHINE         reduce using rule 50 (statement -> LABEL COLON SBB memory .)
    $end            reduce using rule 50 (statement -> LABEL COLON SBB memory .)


state 217

    (52) statement -> LABEL COLON SBI byte_8 .

    MOV             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    LABEL           reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    MVI             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    LXI             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    LDAX            reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    STAX            reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    LDA             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    STA             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    LHLD            reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    SHLD            reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    XCHG            reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    ADD             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    ADI             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    ADC             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    ACI             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    SUB             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    SUI             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    SBB             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    SBI             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    INR             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    DCR             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    INX             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    DCX             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    DAD             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    ANA             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    ORA             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    XRA             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    ANI             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    ORI             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    XRI             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    CMA             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    RLC             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    RAL             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    RRC             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    RAR             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    CMP             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    CPI             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    CMC             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    STC             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    DAA             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    JMP             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    JC              reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    JNC             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    JZ              reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    JNZ             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    JP              reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    JM              reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    JPE             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    JPO             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    CALL            reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    RET             reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    MACHINE         reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)
    $end            reduce using rule 52 (statement -> LABEL COLON SBI byte_8 .)


state 218

    (55) statement -> LABEL COLON INR register .

    MOV             reduce using rule 55 (statement -> LABEL COLON INR register .)
    LABEL           reduce using rule 55 (statement -> LABEL COLON INR register .)
    MVI             reduce using rule 55 (statement -> LABEL COLON INR register .)
    LXI             reduce using rule 55 (statement -> LABEL COLON INR register .)
    LDAX            reduce using rule 55 (statement -> LABEL COLON INR register .)
    STAX            reduce using rule 55 (statement -> LABEL COLON INR register .)
    LDA             reduce using rule 55 (statement -> LABEL COLON INR register .)
    STA             reduce using rule 55 (statement -> LABEL COLON INR register .)
    LHLD            reduce using rule 55 (statement -> LABEL COLON INR register .)
    SHLD            reduce using rule 55 (statement -> LABEL COLON INR register .)
    XCHG            reduce using rule 55 (statement -> LABEL COLON INR register .)
    ADD             reduce using rule 55 (statement -> LABEL COLON INR register .)
    ADI             reduce using rule 55 (statement -> LABEL COLON INR register .)
    ADC             reduce using rule 55 (statement -> LABEL COLON INR register .)
    ACI             reduce using rule 55 (statement -> LABEL COLON INR register .)
    SUB             reduce using rule 55 (statement -> LABEL COLON INR register .)
    SUI             reduce using rule 55 (statement -> LABEL COLON INR register .)
    SBB             reduce using rule 55 (statement -> LABEL COLON INR register .)
    SBI             reduce using rule 55 (statement -> LABEL COLON INR register .)
    INR             reduce using rule 55 (statement -> LABEL COLON INR register .)
    DCR             reduce using rule 55 (statement -> LABEL COLON INR register .)
    INX             reduce using rule 55 (statement -> LABEL COLON INR register .)
    DCX             reduce using rule 55 (statement -> LABEL COLON INR register .)
    DAD             reduce using rule 55 (statement -> LABEL COLON INR register .)
    ANA             reduce using rule 55 (statement -> LABEL COLON INR register .)
    ORA             reduce using rule 55 (statement -> LABEL COLON INR register .)
    XRA             reduce using rule 55 (statement -> LABEL COLON INR register .)
    ANI             reduce using rule 55 (statement -> LABEL COLON INR register .)
    ORI             reduce using rule 55 (statement -> LABEL COLON INR register .)
    XRI             reduce using rule 55 (statement -> LABEL COLON INR register .)
    CMA             reduce using rule 55 (statement -> LABEL COLON INR register .)
    RLC             reduce using rule 55 (statement -> LABEL COLON INR register .)
    RAL             reduce using rule 55 (statement -> LABEL COLON INR register .)
    RRC             reduce using rule 55 (statement -> LABEL COLON INR register .)
    RAR             reduce using rule 55 (statement -> LABEL COLON INR register .)
    CMP             reduce using rule 55 (statement -> LABEL COLON INR register .)
    CPI             reduce using rule 55 (statement -> LABEL COLON INR register .)
    CMC             reduce using rule 55 (statement -> LABEL COLON INR register .)
    STC             reduce using rule 55 (statement -> LABEL COLON INR register .)
    DAA             reduce using rule 55 (statement -> LABEL COLON INR register .)
    JMP             reduce using rule 55 (statement -> LABEL COLON INR register .)
    JC              reduce using rule 55 (statement -> LABEL COLON INR register .)
    JNC             reduce using rule 55 (statement -> LABEL COLON INR register .)
    JZ              reduce using rule 55 (statement -> LABEL COLON INR register .)
    JNZ             reduce using rule 55 (statement -> LABEL COLON INR register .)
    JP              reduce using rule 55 (statement -> LABEL COLON INR register .)
    JM              reduce using rule 55 (statement -> LABEL COLON INR register .)
    JPE             reduce using rule 55 (statement -> LABEL COLON INR register .)
    JPO             reduce using rule 55 (statement -> LABEL COLON INR register .)
    CALL            reduce using rule 55 (statement -> LABEL COLON INR register .)
    RET             reduce using rule 55 (statement -> LABEL COLON INR register .)
    MACHINE         reduce using rule 55 (statement -> LABEL COLON INR register .)
    $end            reduce using rule 55 (statement -> LABEL COLON INR register .)


state 219

    (56) statement -> LABEL COLON INR memory .

    MOV             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    LABEL           reduce using rule 56 (statement -> LABEL COLON INR memory .)
    MVI             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    LXI             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    LDAX            reduce using rule 56 (statement -> LABEL COLON INR memory .)
    STAX            reduce using rule 56 (statement -> LABEL COLON INR memory .)
    LDA             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    STA             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    LHLD            reduce using rule 56 (statement -> LABEL COLON INR memory .)
    SHLD            reduce using rule 56 (statement -> LABEL COLON INR memory .)
    XCHG            reduce using rule 56 (statement -> LABEL COLON INR memory .)
    ADD             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    ADI             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    ADC             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    ACI             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    SUB             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    SUI             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    SBB             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    SBI             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    INR             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    DCR             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    INX             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    DCX             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    DAD             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    ANA             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    ORA             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    XRA             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    ANI             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    ORI             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    XRI             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    CMA             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    RLC             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    RAL             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    RRC             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    RAR             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    CMP             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    CPI             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    CMC             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    STC             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    DAA             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    JMP             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    JC              reduce using rule 56 (statement -> LABEL COLON INR memory .)
    JNC             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    JZ              reduce using rule 56 (statement -> LABEL COLON INR memory .)
    JNZ             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    JP              reduce using rule 56 (statement -> LABEL COLON INR memory .)
    JM              reduce using rule 56 (statement -> LABEL COLON INR memory .)
    JPE             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    JPO             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    CALL            reduce using rule 56 (statement -> LABEL COLON INR memory .)
    RET             reduce using rule 56 (statement -> LABEL COLON INR memory .)
    MACHINE         reduce using rule 56 (statement -> LABEL COLON INR memory .)
    $end            reduce using rule 56 (statement -> LABEL COLON INR memory .)


state 220

    (59) statement -> LABEL COLON DCR register .

    MOV             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    LABEL           reduce using rule 59 (statement -> LABEL COLON DCR register .)
    MVI             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    LXI             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    LDAX            reduce using rule 59 (statement -> LABEL COLON DCR register .)
    STAX            reduce using rule 59 (statement -> LABEL COLON DCR register .)
    LDA             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    STA             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    LHLD            reduce using rule 59 (statement -> LABEL COLON DCR register .)
    SHLD            reduce using rule 59 (statement -> LABEL COLON DCR register .)
    XCHG            reduce using rule 59 (statement -> LABEL COLON DCR register .)
    ADD             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    ADI             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    ADC             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    ACI             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    SUB             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    SUI             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    SBB             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    SBI             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    INR             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    DCR             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    INX             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    DCX             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    DAD             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    ANA             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    ORA             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    XRA             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    ANI             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    ORI             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    XRI             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    CMA             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    RLC             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    RAL             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    RRC             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    RAR             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    CMP             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    CPI             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    CMC             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    STC             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    DAA             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    JMP             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    JC              reduce using rule 59 (statement -> LABEL COLON DCR register .)
    JNC             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    JZ              reduce using rule 59 (statement -> LABEL COLON DCR register .)
    JNZ             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    JP              reduce using rule 59 (statement -> LABEL COLON DCR register .)
    JM              reduce using rule 59 (statement -> LABEL COLON DCR register .)
    JPE             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    JPO             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    CALL            reduce using rule 59 (statement -> LABEL COLON DCR register .)
    RET             reduce using rule 59 (statement -> LABEL COLON DCR register .)
    MACHINE         reduce using rule 59 (statement -> LABEL COLON DCR register .)
    $end            reduce using rule 59 (statement -> LABEL COLON DCR register .)


state 221

    (60) statement -> LABEL COLON DCR memory .

    MOV             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    LABEL           reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    MVI             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    LXI             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    LDAX            reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    STAX            reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    LDA             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    STA             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    LHLD            reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    SHLD            reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    XCHG            reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    ADD             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    ADI             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    ADC             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    ACI             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    SUB             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    SUI             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    SBB             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    SBI             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    INR             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    DCR             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    INX             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    DCX             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    DAD             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    ANA             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    ORA             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    XRA             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    ANI             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    ORI             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    XRI             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    CMA             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    RLC             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    RAL             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    RRC             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    RAR             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    CMP             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    CPI             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    CMC             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    STC             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    DAA             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    JMP             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    JC              reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    JNC             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    JZ              reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    JNZ             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    JP              reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    JM              reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    JPE             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    JPO             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    CALL            reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    RET             reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    MACHINE         reduce using rule 60 (statement -> LABEL COLON DCR memory .)
    $end            reduce using rule 60 (statement -> LABEL COLON DCR memory .)


state 222

    (62) statement -> LABEL COLON INX register_pair_3 .

    MOV             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    LABEL           reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    MVI             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    LXI             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    LDAX            reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    STAX            reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    LDA             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    STA             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    LHLD            reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    SHLD            reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    XCHG            reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    ADD             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    ADI             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    ADC             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    ACI             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    SUB             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    SUI             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    SBB             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    SBI             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    INR             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    DCR             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    INX             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    DCX             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    DAD             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    ANA             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    ORA             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    XRA             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    ANI             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    ORI             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    XRI             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    CMA             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    RLC             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    RAL             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    RRC             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    RAR             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    CMP             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    CPI             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    CMC             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    STC             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    DAA             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    JMP             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    JC              reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    JNC             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    JZ              reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    JNZ             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    JP              reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    JM              reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    JPE             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    JPO             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    CALL            reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    RET             reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    MACHINE         reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)
    $end            reduce using rule 62 (statement -> LABEL COLON INX register_pair_3 .)


state 223

    (64) statement -> LABEL COLON DCX register_pair_3 .

    MOV             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    LABEL           reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    MVI             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    LXI             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    LDAX            reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    STAX            reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    LDA             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    STA             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    LHLD            reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    SHLD            reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    XCHG            reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    ADD             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    ADI             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    ADC             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    ACI             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    SUB             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    SUI             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    SBB             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    SBI             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    INR             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    DCR             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    INX             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    DCX             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    DAD             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    ANA             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    ORA             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    XRA             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    ANI             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    ORI             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    XRI             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    CMA             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    RLC             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    RAL             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    RRC             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    RAR             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    CMP             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    CPI             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    CMC             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    STC             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    DAA             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    JMP             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    JC              reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    JNC             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    JZ              reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    JNZ             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    JP              reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    JM              reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    JPE             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    JPO             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    CALL            reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    RET             reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    MACHINE         reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)
    $end            reduce using rule 64 (statement -> LABEL COLON DCX register_pair_3 .)


state 224

    (66) statement -> LABEL COLON DAD register_pair_3 .

    MOV             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    LABEL           reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    MVI             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    LXI             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    LDAX            reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    STAX            reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    LDA             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    STA             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    LHLD            reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    SHLD            reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    XCHG            reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    ADD             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    ADI             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    ADC             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    ACI             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    SUB             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    SUI             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    SBB             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    SBI             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    INR             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    DCR             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    INX             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    DCX             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    DAD             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    ANA             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    ORA             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    XRA             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    ANI             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    ORI             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    XRI             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    CMA             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    RLC             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    RAL             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    RRC             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    RAR             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    CMP             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    CPI             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    CMC             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    STC             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    DAA             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    JMP             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    JC              reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    JNC             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    JZ              reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    JNZ             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    JP              reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    JM              reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    JPE             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    JPO             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    CALL            reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    RET             reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    MACHINE         reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)
    $end            reduce using rule 66 (statement -> LABEL COLON DAD register_pair_3 .)


state 225

    (69) statement -> LABEL COLON ANA register .

    MOV             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    LABEL           reduce using rule 69 (statement -> LABEL COLON ANA register .)
    MVI             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    LXI             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    LDAX            reduce using rule 69 (statement -> LABEL COLON ANA register .)
    STAX            reduce using rule 69 (statement -> LABEL COLON ANA register .)
    LDA             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    STA             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    LHLD            reduce using rule 69 (statement -> LABEL COLON ANA register .)
    SHLD            reduce using rule 69 (statement -> LABEL COLON ANA register .)
    XCHG            reduce using rule 69 (statement -> LABEL COLON ANA register .)
    ADD             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    ADI             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    ADC             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    ACI             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    SUB             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    SUI             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    SBB             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    SBI             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    INR             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    DCR             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    INX             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    DCX             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    DAD             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    ANA             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    ORA             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    XRA             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    ANI             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    ORI             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    XRI             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    CMA             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    RLC             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    RAL             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    RRC             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    RAR             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    CMP             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    CPI             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    CMC             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    STC             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    DAA             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    JMP             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    JC              reduce using rule 69 (statement -> LABEL COLON ANA register .)
    JNC             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    JZ              reduce using rule 69 (statement -> LABEL COLON ANA register .)
    JNZ             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    JP              reduce using rule 69 (statement -> LABEL COLON ANA register .)
    JM              reduce using rule 69 (statement -> LABEL COLON ANA register .)
    JPE             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    JPO             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    CALL            reduce using rule 69 (statement -> LABEL COLON ANA register .)
    RET             reduce using rule 69 (statement -> LABEL COLON ANA register .)
    MACHINE         reduce using rule 69 (statement -> LABEL COLON ANA register .)
    $end            reduce using rule 69 (statement -> LABEL COLON ANA register .)


state 226

    (70) statement -> LABEL COLON ANA memory .

    MOV             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    LABEL           reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    MVI             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    LXI             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    LDAX            reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    STAX            reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    LDA             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    STA             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    LHLD            reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    SHLD            reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    XCHG            reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    ADD             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    ADI             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    ADC             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    ACI             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    SUB             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    SUI             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    SBB             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    SBI             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    INR             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    DCR             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    INX             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    DCX             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    DAD             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    ANA             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    ORA             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    XRA             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    ANI             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    ORI             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    XRI             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    CMA             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    RLC             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    RAL             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    RRC             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    RAR             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    CMP             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    CPI             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    CMC             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    STC             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    DAA             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    JMP             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    JC              reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    JNC             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    JZ              reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    JNZ             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    JP              reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    JM              reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    JPE             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    JPO             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    CALL            reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    RET             reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    MACHINE         reduce using rule 70 (statement -> LABEL COLON ANA memory .)
    $end            reduce using rule 70 (statement -> LABEL COLON ANA memory .)


state 227

    (73) statement -> LABEL COLON ORA register .

    MOV             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    LABEL           reduce using rule 73 (statement -> LABEL COLON ORA register .)
    MVI             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    LXI             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    LDAX            reduce using rule 73 (statement -> LABEL COLON ORA register .)
    STAX            reduce using rule 73 (statement -> LABEL COLON ORA register .)
    LDA             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    STA             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    LHLD            reduce using rule 73 (statement -> LABEL COLON ORA register .)
    SHLD            reduce using rule 73 (statement -> LABEL COLON ORA register .)
    XCHG            reduce using rule 73 (statement -> LABEL COLON ORA register .)
    ADD             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    ADI             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    ADC             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    ACI             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    SUB             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    SUI             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    SBB             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    SBI             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    INR             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    DCR             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    INX             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    DCX             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    DAD             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    ANA             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    ORA             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    XRA             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    ANI             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    ORI             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    XRI             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    CMA             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    RLC             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    RAL             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    RRC             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    RAR             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    CMP             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    CPI             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    CMC             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    STC             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    DAA             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    JMP             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    JC              reduce using rule 73 (statement -> LABEL COLON ORA register .)
    JNC             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    JZ              reduce using rule 73 (statement -> LABEL COLON ORA register .)
    JNZ             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    JP              reduce using rule 73 (statement -> LABEL COLON ORA register .)
    JM              reduce using rule 73 (statement -> LABEL COLON ORA register .)
    JPE             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    JPO             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    CALL            reduce using rule 73 (statement -> LABEL COLON ORA register .)
    RET             reduce using rule 73 (statement -> LABEL COLON ORA register .)
    MACHINE         reduce using rule 73 (statement -> LABEL COLON ORA register .)
    $end            reduce using rule 73 (statement -> LABEL COLON ORA register .)


state 228

    (74) statement -> LABEL COLON ORA memory .

    MOV             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    LABEL           reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    MVI             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    LXI             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    LDAX            reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    STAX            reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    LDA             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    STA             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    LHLD            reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    SHLD            reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    XCHG            reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    ADD             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    ADI             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    ADC             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    ACI             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    SUB             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    SUI             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    SBB             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    SBI             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    INR             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    DCR             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    INX             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    DCX             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    DAD             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    ANA             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    ORA             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    XRA             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    ANI             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    ORI             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    XRI             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    CMA             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    RLC             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    RAL             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    RRC             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    RAR             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    CMP             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    CPI             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    CMC             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    STC             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    DAA             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    JMP             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    JC              reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    JNC             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    JZ              reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    JNZ             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    JP              reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    JM              reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    JPE             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    JPO             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    CALL            reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    RET             reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    MACHINE         reduce using rule 74 (statement -> LABEL COLON ORA memory .)
    $end            reduce using rule 74 (statement -> LABEL COLON ORA memory .)


state 229

    (77) statement -> LABEL COLON XRA register .

    MOV             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    LABEL           reduce using rule 77 (statement -> LABEL COLON XRA register .)
    MVI             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    LXI             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    LDAX            reduce using rule 77 (statement -> LABEL COLON XRA register .)
    STAX            reduce using rule 77 (statement -> LABEL COLON XRA register .)
    LDA             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    STA             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    LHLD            reduce using rule 77 (statement -> LABEL COLON XRA register .)
    SHLD            reduce using rule 77 (statement -> LABEL COLON XRA register .)
    XCHG            reduce using rule 77 (statement -> LABEL COLON XRA register .)
    ADD             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    ADI             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    ADC             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    ACI             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    SUB             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    SUI             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    SBB             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    SBI             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    INR             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    DCR             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    INX             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    DCX             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    DAD             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    ANA             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    ORA             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    XRA             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    ANI             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    ORI             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    XRI             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    CMA             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    RLC             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    RAL             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    RRC             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    RAR             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    CMP             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    CPI             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    CMC             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    STC             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    DAA             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    JMP             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    JC              reduce using rule 77 (statement -> LABEL COLON XRA register .)
    JNC             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    JZ              reduce using rule 77 (statement -> LABEL COLON XRA register .)
    JNZ             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    JP              reduce using rule 77 (statement -> LABEL COLON XRA register .)
    JM              reduce using rule 77 (statement -> LABEL COLON XRA register .)
    JPE             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    JPO             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    CALL            reduce using rule 77 (statement -> LABEL COLON XRA register .)
    RET             reduce using rule 77 (statement -> LABEL COLON XRA register .)
    MACHINE         reduce using rule 77 (statement -> LABEL COLON XRA register .)
    $end            reduce using rule 77 (statement -> LABEL COLON XRA register .)


state 230

    (78) statement -> LABEL COLON XRA memory .

    MOV             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    LABEL           reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    MVI             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    LXI             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    LDAX            reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    STAX            reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    LDA             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    STA             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    LHLD            reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    SHLD            reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    XCHG            reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    ADD             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    ADI             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    ADC             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    ACI             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    SUB             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    SUI             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    SBB             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    SBI             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    INR             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    DCR             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    INX             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    DCX             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    DAD             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    ANA             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    ORA             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    XRA             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    ANI             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    ORI             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    XRI             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    CMA             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    RLC             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    RAL             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    RRC             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    RAR             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    CMP             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    CPI             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    CMC             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    STC             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    DAA             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    JMP             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    JC              reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    JNC             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    JZ              reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    JNZ             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    JP              reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    JM              reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    JPE             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    JPO             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    CALL            reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    RET             reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    MACHINE         reduce using rule 78 (statement -> LABEL COLON XRA memory .)
    $end            reduce using rule 78 (statement -> LABEL COLON XRA memory .)


state 231

    (80) statement -> LABEL COLON ANI byte_8 .

    MOV             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    LABEL           reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    MVI             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    LXI             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    LDAX            reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    STAX            reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    LDA             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    STA             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    LHLD            reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    SHLD            reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    XCHG            reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    ADD             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    ADI             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    ADC             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    ACI             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    SUB             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    SUI             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    SBB             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    SBI             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    INR             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    DCR             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    INX             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    DCX             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    DAD             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    ANA             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    ORA             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    XRA             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    ANI             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    ORI             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    XRI             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    CMA             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    RLC             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    RAL             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    RRC             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    RAR             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    CMP             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    CPI             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    CMC             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    STC             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    DAA             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    JMP             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    JC              reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    JNC             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    JZ              reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    JNZ             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    JP              reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    JM              reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    JPE             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    JPO             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    CALL            reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    RET             reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    MACHINE         reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)
    $end            reduce using rule 80 (statement -> LABEL COLON ANI byte_8 .)


state 232

    (82) statement -> LABEL COLON ORI byte_8 .

    MOV             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    LABEL           reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    MVI             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    LXI             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    LDAX            reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    STAX            reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    LDA             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    STA             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    LHLD            reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    SHLD            reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    XCHG            reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    ADD             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    ADI             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    ADC             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    ACI             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    SUB             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    SUI             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    SBB             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    SBI             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    INR             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    DCR             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    INX             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    DCX             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    DAD             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    ANA             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    ORA             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    XRA             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    ANI             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    ORI             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    XRI             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    CMA             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    RLC             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    RAL             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    RRC             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    RAR             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    CMP             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    CPI             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    CMC             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    STC             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    DAA             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    JMP             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    JC              reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    JNC             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    JZ              reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    JNZ             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    JP              reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    JM              reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    JPE             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    JPO             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    CALL            reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    RET             reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    MACHINE         reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)
    $end            reduce using rule 82 (statement -> LABEL COLON ORI byte_8 .)


state 233

    (84) statement -> LABEL COLON XRI byte_8 .

    MOV             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    LABEL           reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    MVI             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    LXI             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    LDAX            reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    STAX            reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    LDA             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    STA             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    LHLD            reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    SHLD            reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    XCHG            reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    ADD             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    ADI             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    ADC             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    ACI             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    SUB             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    SUI             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    SBB             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    SBI             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    INR             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    DCR             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    INX             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    DCX             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    DAD             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    ANA             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    ORA             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    XRA             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    ANI             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    ORI             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    XRI             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    CMA             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    RLC             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    RAL             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    RRC             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    RAR             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    CMP             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    CPI             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    CMC             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    STC             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    DAA             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    JMP             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    JC              reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    JNC             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    JZ              reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    JNZ             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    JP              reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    JM              reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    JPE             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    JPO             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    CALL            reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    RET             reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    MACHINE         reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)
    $end            reduce using rule 84 (statement -> LABEL COLON XRI byte_8 .)


state 234

    (97) statement -> LABEL COLON CMP register .

    MOV             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    LABEL           reduce using rule 97 (statement -> LABEL COLON CMP register .)
    MVI             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    LXI             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    LDAX            reduce using rule 97 (statement -> LABEL COLON CMP register .)
    STAX            reduce using rule 97 (statement -> LABEL COLON CMP register .)
    LDA             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    STA             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    LHLD            reduce using rule 97 (statement -> LABEL COLON CMP register .)
    SHLD            reduce using rule 97 (statement -> LABEL COLON CMP register .)
    XCHG            reduce using rule 97 (statement -> LABEL COLON CMP register .)
    ADD             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    ADI             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    ADC             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    ACI             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    SUB             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    SUI             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    SBB             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    SBI             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    INR             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    DCR             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    INX             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    DCX             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    DAD             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    ANA             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    ORA             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    XRA             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    ANI             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    ORI             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    XRI             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    CMA             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    RLC             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    RAL             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    RRC             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    RAR             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    CMP             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    CPI             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    CMC             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    STC             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    DAA             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    JMP             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    JC              reduce using rule 97 (statement -> LABEL COLON CMP register .)
    JNC             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    JZ              reduce using rule 97 (statement -> LABEL COLON CMP register .)
    JNZ             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    JP              reduce using rule 97 (statement -> LABEL COLON CMP register .)
    JM              reduce using rule 97 (statement -> LABEL COLON CMP register .)
    JPE             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    JPO             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    CALL            reduce using rule 97 (statement -> LABEL COLON CMP register .)
    RET             reduce using rule 97 (statement -> LABEL COLON CMP register .)
    MACHINE         reduce using rule 97 (statement -> LABEL COLON CMP register .)
    $end            reduce using rule 97 (statement -> LABEL COLON CMP register .)


state 235

    (98) statement -> LABEL COLON CMP memory .

    MOV             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    LABEL           reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    MVI             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    LXI             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    LDAX            reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    STAX            reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    LDA             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    STA             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    LHLD            reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    SHLD            reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    XCHG            reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    ADD             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    ADI             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    ADC             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    ACI             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    SUB             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    SUI             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    SBB             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    SBI             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    INR             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    DCR             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    INX             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    DCX             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    DAD             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    ANA             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    ORA             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    XRA             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    ANI             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    ORI             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    XRI             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    CMA             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    RLC             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    RAL             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    RRC             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    RAR             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    CMP             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    CPI             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    CMC             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    STC             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    DAA             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    JMP             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    JC              reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    JNC             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    JZ              reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    JNZ             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    JP              reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    JM              reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    JPE             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    JPO             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    CALL            reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    RET             reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    MACHINE         reduce using rule 98 (statement -> LABEL COLON CMP memory .)
    $end            reduce using rule 98 (statement -> LABEL COLON CMP memory .)


state 236

    (100) statement -> LABEL COLON CPI byte_8 .

    MOV             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    LABEL           reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    MVI             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    LXI             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    LDAX            reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    STAX            reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    LDA             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    STA             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    LHLD            reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    SHLD            reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    XCHG            reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    ADD             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    ADI             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    ADC             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    ACI             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    SUB             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    SUI             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    SBB             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    SBI             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    INR             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    DCR             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    INX             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    DCX             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    DAD             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    ANA             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    ORA             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    XRA             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    ANI             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    ORI             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    XRI             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    CMA             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    RLC             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    RAL             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    RRC             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    RAR             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    CMP             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    CPI             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    CMC             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    STC             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    DAA             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    JMP             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    JC              reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    JNC             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    JZ              reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    JNZ             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    JP              reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    JM              reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    JPE             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    JPO             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    CALL            reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    RET             reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    MACHINE         reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)
    $end            reduce using rule 100 (statement -> LABEL COLON CPI byte_8 .)


state 237

    (110) statement -> LABEL COLON JMP LABEL .

    MOV             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    LABEL           reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    MVI             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    LXI             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    LDAX            reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    STAX            reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    LDA             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    STA             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    LHLD            reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    SHLD            reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    XCHG            reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    ADD             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    ADI             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    ADC             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    ACI             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    SUB             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    SUI             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    SBB             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    SBI             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    INR             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    DCR             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    INX             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    DCX             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    DAD             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    ANA             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    ORA             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    XRA             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    ANI             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    ORI             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    XRI             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    CMA             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    RLC             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    RAL             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    RRC             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    RAR             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    CMP             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    CPI             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    CMC             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    STC             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    DAA             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    JMP             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    JC              reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    JNC             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    JZ              reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    JNZ             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    JP              reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    JM              reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    JPE             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    JPO             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    CALL            reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    RET             reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    MACHINE         reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)
    $end            reduce using rule 110 (statement -> LABEL COLON JMP LABEL .)


state 238

    (109) statement -> LABEL COLON JMP byte_16 .

    MOV             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    LABEL           reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    MVI             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    LXI             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    LDAX            reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    STAX            reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    LDA             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    STA             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    LHLD            reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    SHLD            reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    XCHG            reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    ADD             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    ADI             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    ADC             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    ACI             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    SUB             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    SUI             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    SBB             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    SBI             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    INR             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    DCR             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    INX             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    DCX             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    DAD             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    ANA             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    ORA             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    XRA             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    ANI             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    ORI             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    XRI             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    CMA             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    RLC             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    RAL             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    RRC             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    RAR             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    CMP             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    CPI             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    CMC             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    STC             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    DAA             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    JMP             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    JC              reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    JNC             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    JZ              reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    JNZ             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    JP              reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    JM              reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    JPE             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    JPO             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    CALL            reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    RET             reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    MACHINE         reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)
    $end            reduce using rule 109 (statement -> LABEL COLON JMP byte_16 .)


state 239

    (114) statement -> LABEL COLON JC LABEL .

    MOV             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    LABEL           reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    MVI             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    LXI             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    LDAX            reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    STAX            reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    LDA             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    STA             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    LHLD            reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    SHLD            reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    XCHG            reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    ADD             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    ADI             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    ADC             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    ACI             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    SUB             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    SUI             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    SBB             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    SBI             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    INR             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    DCR             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    INX             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    DCX             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    DAD             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    ANA             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    ORA             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    XRA             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    ANI             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    ORI             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    XRI             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    CMA             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    RLC             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    RAL             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    RRC             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    RAR             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    CMP             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    CPI             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    CMC             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    STC             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    DAA             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    JMP             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    JC              reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    JNC             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    JZ              reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    JNZ             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    JP              reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    JM              reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    JPE             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    JPO             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    CALL            reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    RET             reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    MACHINE         reduce using rule 114 (statement -> LABEL COLON JC LABEL .)
    $end            reduce using rule 114 (statement -> LABEL COLON JC LABEL .)


state 240

    (113) statement -> LABEL COLON JC byte_16 .

    MOV             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    LABEL           reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    MVI             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    LXI             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    LDAX            reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    STAX            reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    LDA             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    STA             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    LHLD            reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    SHLD            reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    XCHG            reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    ADD             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    ADI             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    ADC             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    ACI             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    SUB             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    SUI             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    SBB             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    SBI             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    INR             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    DCR             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    INX             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    DCX             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    DAD             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    ANA             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    ORA             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    XRA             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    ANI             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    ORI             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    XRI             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    CMA             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    RLC             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    RAL             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    RRC             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    RAR             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    CMP             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    CPI             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    CMC             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    STC             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    DAA             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    JMP             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    JC              reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    JNC             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    JZ              reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    JNZ             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    JP              reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    JM              reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    JPE             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    JPO             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    CALL            reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    RET             reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    MACHINE         reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)
    $end            reduce using rule 113 (statement -> LABEL COLON JC byte_16 .)


state 241

    (118) statement -> LABEL COLON JNC LABEL .

    MOV             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    LABEL           reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    MVI             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    LXI             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    LDAX            reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    STAX            reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    LDA             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    STA             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    LHLD            reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    SHLD            reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    XCHG            reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    ADD             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    ADI             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    ADC             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    ACI             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    SUB             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    SUI             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    SBB             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    SBI             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    INR             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    DCR             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    INX             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    DCX             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    DAD             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    ANA             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    ORA             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    XRA             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    ANI             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    ORI             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    XRI             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    CMA             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    RLC             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    RAL             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    RRC             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    RAR             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    CMP             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    CPI             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    CMC             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    STC             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    DAA             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    JMP             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    JC              reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    JNC             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    JZ              reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    JNZ             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    JP              reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    JM              reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    JPE             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    JPO             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    CALL            reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    RET             reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    MACHINE         reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)
    $end            reduce using rule 118 (statement -> LABEL COLON JNC LABEL .)


state 242

    (117) statement -> LABEL COLON JNC byte_16 .

    MOV             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    LABEL           reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    MVI             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    LXI             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    LDAX            reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    STAX            reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    LDA             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    STA             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    LHLD            reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    SHLD            reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    XCHG            reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    ADD             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    ADI             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    ADC             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    ACI             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    SUB             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    SUI             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    SBB             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    SBI             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    INR             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    DCR             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    INX             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    DCX             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    DAD             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    ANA             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    ORA             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    XRA             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    ANI             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    ORI             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    XRI             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    CMA             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    RLC             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    RAL             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    RRC             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    RAR             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    CMP             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    CPI             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    CMC             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    STC             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    DAA             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    JMP             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    JC              reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    JNC             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    JZ              reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    JNZ             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    JP              reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    JM              reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    JPE             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    JPO             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    CALL            reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    RET             reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    MACHINE         reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)
    $end            reduce using rule 117 (statement -> LABEL COLON JNC byte_16 .)


state 243

    (122) statement -> LABEL COLON JZ LABEL .

    MOV             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    LABEL           reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    MVI             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    LXI             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    LDAX            reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    STAX            reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    LDA             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    STA             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    LHLD            reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    SHLD            reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    XCHG            reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    ADD             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    ADI             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    ADC             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    ACI             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    SUB             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    SUI             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    SBB             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    SBI             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    INR             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    DCR             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    INX             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    DCX             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    DAD             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    ANA             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    ORA             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    XRA             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    ANI             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    ORI             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    XRI             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    CMA             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    RLC             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    RAL             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    RRC             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    RAR             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    CMP             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    CPI             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    CMC             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    STC             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    DAA             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    JMP             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    JC              reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    JNC             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    JZ              reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    JNZ             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    JP              reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    JM              reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    JPE             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    JPO             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    CALL            reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    RET             reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    MACHINE         reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)
    $end            reduce using rule 122 (statement -> LABEL COLON JZ LABEL .)


state 244

    (121) statement -> LABEL COLON JZ byte_16 .

    MOV             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    LABEL           reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    MVI             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    LXI             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    LDAX            reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    STAX            reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    LDA             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    STA             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    LHLD            reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    SHLD            reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    XCHG            reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    ADD             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    ADI             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    ADC             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    ACI             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    SUB             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    SUI             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    SBB             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    SBI             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    INR             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    DCR             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    INX             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    DCX             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    DAD             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    ANA             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    ORA             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    XRA             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    ANI             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    ORI             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    XRI             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    CMA             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    RLC             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    RAL             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    RRC             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    RAR             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    CMP             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    CPI             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    CMC             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    STC             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    DAA             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    JMP             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    JC              reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    JNC             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    JZ              reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    JNZ             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    JP              reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    JM              reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    JPE             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    JPO             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    CALL            reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    RET             reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    MACHINE         reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)
    $end            reduce using rule 121 (statement -> LABEL COLON JZ byte_16 .)


state 245

    (126) statement -> LABEL COLON JNZ LABEL .

    MOV             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    LABEL           reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    MVI             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    LXI             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    LDAX            reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    STAX            reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    LDA             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    STA             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    LHLD            reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    SHLD            reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    XCHG            reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    ADD             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    ADI             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    ADC             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    ACI             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    SUB             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    SUI             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    SBB             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    SBI             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    INR             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    DCR             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    INX             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    DCX             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    DAD             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    ANA             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    ORA             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    XRA             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    ANI             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    ORI             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    XRI             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    CMA             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    RLC             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    RAL             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    RRC             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    RAR             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    CMP             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    CPI             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    CMC             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    STC             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    DAA             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    JMP             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    JC              reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    JNC             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    JZ              reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    JNZ             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    JP              reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    JM              reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    JPE             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    JPO             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    CALL            reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    RET             reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    MACHINE         reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)
    $end            reduce using rule 126 (statement -> LABEL COLON JNZ LABEL .)


state 246

    (125) statement -> LABEL COLON JNZ byte_16 .

    MOV             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    LABEL           reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    MVI             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    LXI             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    LDAX            reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    STAX            reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    LDA             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    STA             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    LHLD            reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    SHLD            reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    XCHG            reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    ADD             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    ADI             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    ADC             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    ACI             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    SUB             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    SUI             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    SBB             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    SBI             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    INR             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    DCR             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    INX             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    DCX             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    DAD             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    ANA             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    ORA             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    XRA             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    ANI             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    ORI             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    XRI             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    CMA             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    RLC             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    RAL             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    RRC             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    RAR             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    CMP             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    CPI             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    CMC             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    STC             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    DAA             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    JMP             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    JC              reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    JNC             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    JZ              reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    JNZ             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    JP              reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    JM              reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    JPE             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    JPO             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    CALL            reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    RET             reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    MACHINE         reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)
    $end            reduce using rule 125 (statement -> LABEL COLON JNZ byte_16 .)


state 247

    (130) statement -> LABEL COLON JP LABEL .

    MOV             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    LABEL           reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    MVI             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    LXI             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    LDAX            reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    STAX            reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    LDA             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    STA             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    LHLD            reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    SHLD            reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    XCHG            reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    ADD             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    ADI             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    ADC             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    ACI             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    SUB             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    SUI             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    SBB             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    SBI             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    INR             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    DCR             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    INX             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    DCX             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    DAD             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    ANA             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    ORA             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    XRA             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    ANI             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    ORI             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    XRI             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    CMA             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    RLC             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    RAL             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    RRC             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    RAR             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    CMP             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    CPI             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    CMC             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    STC             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    DAA             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    JMP             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    JC              reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    JNC             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    JZ              reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    JNZ             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    JP              reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    JM              reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    JPE             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    JPO             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    CALL            reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    RET             reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    MACHINE         reduce using rule 130 (statement -> LABEL COLON JP LABEL .)
    $end            reduce using rule 130 (statement -> LABEL COLON JP LABEL .)


state 248

    (129) statement -> LABEL COLON JP byte_16 .

    MOV             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    LABEL           reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    MVI             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    LXI             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    LDAX            reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    STAX            reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    LDA             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    STA             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    LHLD            reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    SHLD            reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    XCHG            reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    ADD             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    ADI             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    ADC             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    ACI             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    SUB             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    SUI             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    SBB             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    SBI             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    INR             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    DCR             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    INX             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    DCX             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    DAD             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    ANA             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    ORA             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    XRA             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    ANI             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    ORI             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    XRI             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    CMA             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    RLC             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    RAL             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    RRC             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    RAR             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    CMP             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    CPI             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    CMC             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    STC             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    DAA             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    JMP             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    JC              reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    JNC             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    JZ              reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    JNZ             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    JP              reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    JM              reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    JPE             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    JPO             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    CALL            reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    RET             reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    MACHINE         reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)
    $end            reduce using rule 129 (statement -> LABEL COLON JP byte_16 .)


state 249

    (134) statement -> LABEL COLON JM LABEL .

    MOV             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    LABEL           reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    MVI             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    LXI             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    LDAX            reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    STAX            reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    LDA             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    STA             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    LHLD            reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    SHLD            reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    XCHG            reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    ADD             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    ADI             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    ADC             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    ACI             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    SUB             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    SUI             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    SBB             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    SBI             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    INR             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    DCR             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    INX             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    DCX             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    DAD             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    ANA             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    ORA             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    XRA             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    ANI             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    ORI             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    XRI             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    CMA             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    RLC             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    RAL             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    RRC             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    RAR             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    CMP             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    CPI             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    CMC             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    STC             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    DAA             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    JMP             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    JC              reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    JNC             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    JZ              reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    JNZ             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    JP              reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    JM              reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    JPE             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    JPO             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    CALL            reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    RET             reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    MACHINE         reduce using rule 134 (statement -> LABEL COLON JM LABEL .)
    $end            reduce using rule 134 (statement -> LABEL COLON JM LABEL .)


state 250

    (133) statement -> LABEL COLON JM byte_16 .

    MOV             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    LABEL           reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    MVI             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    LXI             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    LDAX            reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    STAX            reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    LDA             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    STA             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    LHLD            reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    SHLD            reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    XCHG            reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    ADD             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    ADI             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    ADC             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    ACI             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    SUB             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    SUI             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    SBB             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    SBI             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    INR             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    DCR             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    INX             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    DCX             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    DAD             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    ANA             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    ORA             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    XRA             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    ANI             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    ORI             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    XRI             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    CMA             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    RLC             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    RAL             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    RRC             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    RAR             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    CMP             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    CPI             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    CMC             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    STC             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    DAA             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    JMP             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    JC              reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    JNC             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    JZ              reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    JNZ             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    JP              reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    JM              reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    JPE             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    JPO             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    CALL            reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    RET             reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    MACHINE         reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)
    $end            reduce using rule 133 (statement -> LABEL COLON JM byte_16 .)


state 251

    (138) statement -> LABEL COLON JPE LABEL .

    MOV             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    LABEL           reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    MVI             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    LXI             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    LDAX            reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    STAX            reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    LDA             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    STA             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    LHLD            reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    SHLD            reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    XCHG            reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    ADD             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    ADI             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    ADC             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    ACI             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    SUB             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    SUI             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    SBB             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    SBI             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    INR             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    DCR             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    INX             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    DCX             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    DAD             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    ANA             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    ORA             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    XRA             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    ANI             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    ORI             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    XRI             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    CMA             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    RLC             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    RAL             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    RRC             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    RAR             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    CMP             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    CPI             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    CMC             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    STC             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    DAA             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    JMP             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    JC              reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    JNC             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    JZ              reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    JNZ             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    JP              reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    JM              reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    JPE             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    JPO             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    CALL            reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    RET             reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    MACHINE         reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)
    $end            reduce using rule 138 (statement -> LABEL COLON JPE LABEL .)


state 252

    (137) statement -> LABEL COLON JPE byte_16 .

    MOV             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    LABEL           reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    MVI             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    LXI             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    LDAX            reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    STAX            reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    LDA             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    STA             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    LHLD            reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    SHLD            reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    XCHG            reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    ADD             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    ADI             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    ADC             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    ACI             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    SUB             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    SUI             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    SBB             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    SBI             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    INR             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    DCR             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    INX             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    DCX             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    DAD             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    ANA             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    ORA             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    XRA             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    ANI             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    ORI             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    XRI             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    CMA             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    RLC             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    RAL             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    RRC             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    RAR             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    CMP             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    CPI             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    CMC             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    STC             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    DAA             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    JMP             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    JC              reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    JNC             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    JZ              reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    JNZ             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    JP              reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    JM              reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    JPE             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    JPO             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    CALL            reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    RET             reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    MACHINE         reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)
    $end            reduce using rule 137 (statement -> LABEL COLON JPE byte_16 .)


state 253

    (142) statement -> LABEL COLON JPO LABEL .

    MOV             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    LABEL           reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    MVI             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    LXI             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    LDAX            reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    STAX            reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    LDA             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    STA             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    LHLD            reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    SHLD            reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    XCHG            reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    ADD             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    ADI             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    ADC             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    ACI             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    SUB             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    SUI             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    SBB             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    SBI             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    INR             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    DCR             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    INX             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    DCX             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    DAD             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    ANA             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    ORA             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    XRA             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    ANI             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    ORI             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    XRI             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    CMA             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    RLC             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    RAL             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    RRC             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    RAR             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    CMP             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    CPI             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    CMC             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    STC             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    DAA             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    JMP             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    JC              reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    JNC             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    JZ              reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    JNZ             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    JP              reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    JM              reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    JPE             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    JPO             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    CALL            reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    RET             reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    MACHINE         reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)
    $end            reduce using rule 142 (statement -> LABEL COLON JPO LABEL .)


state 254

    (141) statement -> LABEL COLON JPO byte_16 .

    MOV             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    LABEL           reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    MVI             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    LXI             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    LDAX            reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    STAX            reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    LDA             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    STA             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    LHLD            reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    SHLD            reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    XCHG            reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    ADD             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    ADI             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    ADC             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    ACI             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    SUB             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    SUI             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    SBB             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    SBI             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    INR             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    DCR             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    INX             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    DCX             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    DAD             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    ANA             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    ORA             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    XRA             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    ANI             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    ORI             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    XRI             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    CMA             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    RLC             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    RAL             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    RRC             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    RAR             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    CMP             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    CPI             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    CMC             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    STC             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    DAA             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    JMP             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    JC              reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    JNC             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    JZ              reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    JNZ             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    JP              reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    JM              reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    JPE             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    JPO             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    CALL            reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    RET             reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    MACHINE         reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)
    $end            reduce using rule 141 (statement -> LABEL COLON JPO byte_16 .)


state 255

    (146) statement -> LABEL COLON CALL LABEL .

    MOV             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    LABEL           reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    MVI             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    LXI             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    LDAX            reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    STAX            reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    LDA             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    STA             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    LHLD            reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    SHLD            reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    XCHG            reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    ADD             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    ADI             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    ADC             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    ACI             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    SUB             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    SUI             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    SBB             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    SBI             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    INR             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    DCR             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    INX             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    DCX             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    DAD             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    ANA             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    ORA             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    XRA             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    ANI             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    ORI             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    XRI             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    CMA             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    RLC             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    RAL             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    RRC             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    RAR             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    CMP             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    CPI             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    CMC             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    STC             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    DAA             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    JMP             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    JC              reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    JNC             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    JZ              reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    JNZ             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    JP              reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    JM              reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    JPE             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    JPO             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    CALL            reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    RET             reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    MACHINE         reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)
    $end            reduce using rule 146 (statement -> LABEL COLON CALL LABEL .)


state 256

    (145) statement -> LABEL COLON CALL byte_16 .

    MOV             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    LABEL           reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    MVI             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    LXI             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    LDAX            reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    STAX            reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    LDA             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    STA             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    LHLD            reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    SHLD            reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    XCHG            reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    ADD             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    ADI             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    ADC             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    ACI             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    SUB             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    SUI             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    SBB             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    SBI             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    INR             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    DCR             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    INX             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    DCX             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    DAD             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    ANA             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    ORA             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    XRA             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    ANI             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    ORI             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    XRI             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    CMA             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    RLC             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    RAL             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    RRC             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    RAR             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    CMP             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    CPI             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    CMC             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    STC             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    DAA             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    JMP             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    JC              reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    JNC             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    JZ              reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    JNZ             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    JP              reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    JM              reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    JPE             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    JPO             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    CALL            reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    RET             reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    MACHINE         reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)
    $end            reduce using rule 145 (statement -> LABEL COLON CALL byte_16 .)


state 257

    (9) statement -> MVI register COMMA byte_8 .

    MOV             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    LABEL           reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    MVI             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    LXI             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    LDAX            reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    STAX            reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    LDA             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    STA             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    LHLD            reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    SHLD            reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    XCHG            reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    ADD             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    ADI             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    ADC             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    ACI             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    SUB             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    SUI             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    SBB             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    SBI             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    INR             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    DCR             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    INX             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    DCX             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    DAD             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    ANA             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    ORA             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    XRA             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    ANI             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    ORI             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    XRI             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    CMA             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    RLC             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    RAL             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    RRC             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    RAR             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    CMP             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    CPI             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    CMC             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    STC             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    DAA             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    JMP             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    JC              reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    JNC             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    JZ              reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    JNZ             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    JP              reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    JM              reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    JPE             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    JPO             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    CALL            reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    RET             reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    MACHINE         reduce using rule 9 (statement -> MVI register COMMA byte_8 .)
    $end            reduce using rule 9 (statement -> MVI register COMMA byte_8 .)


state 258

    (10) statement -> MVI memory COMMA byte_8 .

    MOV             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    LABEL           reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    MVI             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    LXI             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    LDAX            reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    STAX            reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    LDA             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    STA             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    LHLD            reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    SHLD            reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    XCHG            reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    ADD             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    ADI             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    ADC             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    ACI             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    SUB             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    SUI             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    SBB             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    SBI             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    INR             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    DCR             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    INX             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    DCX             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    DAD             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    ANA             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    ORA             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    XRA             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    ANI             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    ORI             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    XRI             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    CMA             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    RLC             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    RAL             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    RRC             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    RAR             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    CMP             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    CPI             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    CMC             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    STC             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    DAA             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    JMP             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    JC              reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    JNC             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    JZ              reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    JNZ             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    JP              reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    JM              reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    JPE             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    JPO             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    CALL            reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    RET             reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    MACHINE         reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)
    $end            reduce using rule 10 (statement -> MVI memory COMMA byte_8 .)


state 259

    (13) statement -> LXI register_pair_3 COMMA byte_16 .

    MOV             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    LABEL           reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    MVI             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    LXI             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    LDAX            reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    STAX            reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    LDA             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    STA             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    LHLD            reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    SHLD            reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    XCHG            reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    ADD             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    ADI             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    ADC             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    ACI             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    SUB             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    SUI             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    SBB             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    SBI             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    INR             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    DCR             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    INX             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    DCX             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    DAD             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    ANA             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    ORA             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    XRA             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    ANI             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    ORI             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    XRI             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    CMA             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    RLC             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    RAL             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    RRC             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    RAR             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    CMP             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    CPI             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    CMC             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    STC             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    DAA             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    JMP             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    JC              reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    JNC             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    JZ              reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    JNZ             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    JP              reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    JM              reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    JPE             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    JPO             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    CALL            reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    RET             reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    MACHINE         reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)
    $end            reduce using rule 13 (statement -> LXI register_pair_3 COMMA byte_16 .)


state 260

    (165) byte_16 -> DIGIT DIGIT DIGIT . DIGIT

    DIGIT           shift and go to state 266


state 261

    (6) statement -> LABEL COLON MOV register COMMA . register
    (7) statement -> LABEL COLON MOV register COMMA . memory
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L
    (158) memory -> . M

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64
    M               shift and go to state 65

    register                       shift and go to state 267
    memory                         shift and go to state 268

state 262

    (8) statement -> LABEL COLON MOV memory COMMA . register
    (151) register -> . A
    (152) register -> . B
    (153) register -> . C
    (154) register -> . D
    (155) register -> . E
    (156) register -> . H
    (157) register -> . L

    A               shift and go to state 58
    B               shift and go to state 59
    C               shift and go to state 60
    D               shift and go to state 61
    E               shift and go to state 62
    H               shift and go to state 63
    L               shift and go to state 64

    register                       shift and go to state 269

state 263

    (11) statement -> LABEL COLON MVI register COMMA . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 270

state 264

    (12) statement -> LABEL COLON MVI memory COMMA . byte_8
    (164) byte_8 -> . DIGIT DIGIT

    DIGIT           shift and go to state 85

    byte_8                         shift and go to state 271

state 265

    (14) statement -> LABEL COLON LXI register_pair_3 COMMA . byte_16
    (165) byte_16 -> . DIGIT DIGIT DIGIT DIGIT

    DIGIT           shift and go to state 78

    byte_16                        shift and go to state 272

state 266

    (165) byte_16 -> DIGIT DIGIT DIGIT DIGIT .

    MOV             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    LABEL           reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    MVI             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    LXI             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    LDAX            reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    STAX            reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    LDA             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    STA             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    LHLD            reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    SHLD            reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    XCHG            reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    ADD             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    ADI             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    ADC             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    ACI             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    SUB             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    SUI             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    SBB             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    SBI             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    INR             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    DCR             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    INX             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    DCX             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    DAD             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    ANA             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    ORA             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    XRA             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    ANI             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    ORI             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    XRI             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    CMA             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    RLC             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    RAL             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    RRC             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    RAR             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    CMP             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    CPI             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    CMC             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    STC             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    DAA             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    JMP             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    JC              reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    JNC             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    JZ              reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    JNZ             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    JP              reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    JM              reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    JPE             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    JPO             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    CALL            reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    RET             reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    MACHINE         reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)
    $end            reduce using rule 165 (byte_16 -> DIGIT DIGIT DIGIT DIGIT .)


state 267

    (6) statement -> LABEL COLON MOV register COMMA register .

    MOV             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    LABEL           reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    MVI             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    LXI             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    LDAX            reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    STAX            reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    LDA             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    STA             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    LHLD            reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    SHLD            reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    XCHG            reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    ADD             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    ADI             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    ADC             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    ACI             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    SUB             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    SUI             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    SBB             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    SBI             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    INR             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    DCR             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    INX             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    DCX             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    DAD             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    ANA             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    ORA             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    XRA             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    ANI             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    ORI             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    XRI             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    CMA             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    RLC             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    RAL             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    RRC             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    RAR             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    CMP             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    CPI             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    CMC             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    STC             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    DAA             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    JMP             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    JC              reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    JNC             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    JZ              reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    JNZ             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    JP              reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    JM              reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    JPE             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    JPO             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    CALL            reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    RET             reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    MACHINE         reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)
    $end            reduce using rule 6 (statement -> LABEL COLON MOV register COMMA register .)


state 268

    (7) statement -> LABEL COLON MOV register COMMA memory .

    MOV             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    LABEL           reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    MVI             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    LXI             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    LDAX            reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    STAX            reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    LDA             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    STA             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    LHLD            reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    SHLD            reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    XCHG            reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    ADD             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    ADI             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    ADC             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    ACI             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    SUB             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    SUI             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    SBB             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    SBI             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    INR             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    DCR             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    INX             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    DCX             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    DAD             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    ANA             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    ORA             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    XRA             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    ANI             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    ORI             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    XRI             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    CMA             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    RLC             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    RAL             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    RRC             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    RAR             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    CMP             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    CPI             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    CMC             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    STC             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    DAA             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    JMP             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    JC              reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    JNC             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    JZ              reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    JNZ             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    JP              reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    JM              reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    JPE             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    JPO             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    CALL            reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    RET             reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    MACHINE         reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)
    $end            reduce using rule 7 (statement -> LABEL COLON MOV register COMMA memory .)


state 269

    (8) statement -> LABEL COLON MOV memory COMMA register .

    MOV             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    LABEL           reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    MVI             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    LXI             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    LDAX            reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    STAX            reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    LDA             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    STA             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    LHLD            reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    SHLD            reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    XCHG            reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    ADD             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    ADI             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    ADC             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    ACI             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    SUB             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    SUI             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    SBB             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    SBI             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    INR             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    DCR             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    INX             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    DCX             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    DAD             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    ANA             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    ORA             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    XRA             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    ANI             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    ORI             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    XRI             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    CMA             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    RLC             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    RAL             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    RRC             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    RAR             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    CMP             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    CPI             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    CMC             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    STC             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    DAA             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    JMP             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    JC              reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    JNC             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    JZ              reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    JNZ             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    JP              reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    JM              reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    JPE             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    JPO             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    CALL            reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    RET             reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    MACHINE         reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)
    $end            reduce using rule 8 (statement -> LABEL COLON MOV memory COMMA register .)


state 270

    (11) statement -> LABEL COLON MVI register COMMA byte_8 .

    MOV             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    LABEL           reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    MVI             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    LXI             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    LDAX            reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    STAX            reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    LDA             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    STA             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    LHLD            reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    SHLD            reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    XCHG            reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    ADD             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    ADI             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    ADC             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    ACI             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    SUB             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    SUI             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    SBB             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    SBI             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    INR             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    DCR             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    INX             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    DCX             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    DAD             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    ANA             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    ORA             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    XRA             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    ANI             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    ORI             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    XRI             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    CMA             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    RLC             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    RAL             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    RRC             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    RAR             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    CMP             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    CPI             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    CMC             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    STC             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    DAA             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    JMP             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    JC              reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    JNC             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    JZ              reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    JNZ             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    JP              reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    JM              reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    JPE             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    JPO             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    CALL            reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    RET             reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    MACHINE         reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)
    $end            reduce using rule 11 (statement -> LABEL COLON MVI register COMMA byte_8 .)


state 271

    (12) statement -> LABEL COLON MVI memory COMMA byte_8 .

    MOV             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    LABEL           reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    MVI             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    LXI             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    LDAX            reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    STAX            reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    LDA             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    STA             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    LHLD            reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    SHLD            reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    XCHG            reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    ADD             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    ADI             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    ADC             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    ACI             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    SUB             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    SUI             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    SBB             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    SBI             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    INR             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    DCR             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    INX             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    DCX             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    DAD             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    ANA             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    ORA             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    XRA             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    ANI             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    ORI             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    XRI             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    CMA             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    RLC             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    RAL             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    RRC             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    RAR             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    CMP             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    CPI             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    CMC             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    STC             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    DAA             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    JMP             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    JC              reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    JNC             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    JZ              reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    JNZ             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    JP              reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    JM              reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    JPE             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    JPO             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    CALL            reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    RET             reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    MACHINE         reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)
    $end            reduce using rule 12 (statement -> LABEL COLON MVI memory COMMA byte_8 .)


state 272

    (14) statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .

    MOV             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    LABEL           reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    MVI             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    LXI             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    LDAX            reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    STAX            reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    LDA             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    STA             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    LHLD            reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    SHLD            reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    XCHG            reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    ADD             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    ADI             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    ADC             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    ACI             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    SUB             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    SUI             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    SBB             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    SBI             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    INR             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    DCR             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    INX             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    DCX             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    DAD             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    ANA             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    ORA             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    XRA             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    ANI             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    ORI             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    XRI             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    CMA             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    RLC             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    RAL             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    RRC             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    RAR             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    CMP             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    CPI             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    CMC             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    STC             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    DAA             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    JMP             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    JC              reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    JNC             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    JZ              reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    JNZ             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    JP              reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    JM              reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    JPE             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    JPO             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    CALL            reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    RET             reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    MACHINE         reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)
    $end            reduce using rule 14 (statement -> LABEL COLON LXI register_pair_3 COMMA byte_16 .)

